<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AbortingDueToDynamicUpdateFailure" xml:space="preserve">
    <value>The WorkflowApplication has been aborted because an instance update attempt failed.</value>
  </data>
  <data name="AbortingDueToInstanceTimeout" xml:space="preserve">
    <value>The workflow instance was aborted because its execution timed out.</value>
  </data>
  <data name="AbortingDueToLoadFailure" xml:space="preserve">
    <value>The WorkflowApplication has been aborted because a Load or LoadRunnableInstance operation threw an exception. Create a new WorkflowApplication object to try loading another workflow instance.</value>
  </data>
  <data name="AbortingDueToVersionMismatch" xml:space="preserve">
    <value>The WorkflowApplication has been aborted because a Load or LoadRunnableInstance operation threw a VersionMismatchException.</value>
  </data>
  <data name="AbortInstanceOnTransactionFailureDoesNotMatch" xml:space="preserve">
    <value>The value of the AbortInstanceOnTransactionFailure property of TransactionScope activity '{0}' nested in TransactedReceiveScope activity '{1}' should not be set to false.</value>
  </data>
  <data name="ActionItemCallbackInvoked" xml:space="preserve">
    <value>IO Thread scheduler callback invoked.</value>
  </data>
  <data name="ActionItemIsAlreadyScheduled" xml:space="preserve">
    <value>The ActionItem was already scheduled for execution that hasn't been completed yet.</value>
  </data>
  <data name="ActionItemScheduled" xml:space="preserve">
    <value>IO Thread scheduler callback invoked.</value>
  </data>
  <data name="ActivityBlockingUpdate" xml:space="preserve">
    <value>Activity '{0}': {1}</value>
  </data>
  <data name="ActivityCannotBeReferenced" xml:space="preserve">
    <value>The activity '{1}' cannot reference activity '{0}' because activity '{0}' is already referenced elsewhere in the workflow and that reference is not visible to activity '{1}'.  In order for activity '{0}' to be visible to activity '{1}', it would have to be a child or imported child (but not an implementation child) of activity '{2}'.  Activity '{0}' is originally referenced by activity '{3}' and activity '{1}' is in the implementation of activity '{2}'.</value>
  </data>
  <data name="ActivityCannotBeReferencedWithoutTarget" xml:space="preserve">
    <value>The activity '{0}' cannot be referenced by activity '{1}' because the latter is not in another activity's implementation.  An activity can only be referenced by the implementation of an activity which specifies that activity as a child or import.  Activity '{0}' is declared by activity '{2}'.</value>
  </data>
  <data name="ActivityCannotReferenceItself" xml:space="preserve">
    <value>The activity with display name '{0}' is attempting to reference itself.  An activity cannot be its own parent.</value>
  </data>
  <data name="ActivityCompleted" xml:space="preserve">
    <value>Activity '{0}', DisplayName: '{1}', InstanceId: '{2}' has completed in the '{3}' state.</value>
  </data>
  <data name="ActivityDefinitionCannotBeShared" xml:space="preserve">
    <value>The activity definition object for '{0}' appears to be shared between multiple nodes in the workflow. It is incorrect to reuse an activity definition object within a workflow.</value>
  </data>
  <data name="ActivityDelegateAlreadyOpened" xml:space="preserve">
    <value>ActivityDelegate '{0}' is already parented by activity '{1}' and cannot be parented by activity '{2}'.  A delegate can only be returned as a child once.</value>
  </data>
  <data name="ActivityDelegateCannotBeReferenced" xml:space="preserve">
    <value>The activity delegate with Handler '{0}' cannot be referenced by activity '{1}' because the latter is not in the implementation of activity '{2}'.  An activity delegate can only be referenced by the implementation of an activity which specifies that activity delegate as a child or import.  The activity delegate with Handler '{0}' is declared by activity '{3}'.</value>
  </data>
  <data name="ActivityDelegateCannotBeReferencedNoHandler" xml:space="preserve">
    <value>The activity delegate with no Handler cannot be referenced by activity '{0}' because the latter is not in the implementation of activity '{1}'.  An activity delegate can only be referenced by the implementation of an activity which specifies that activity delegate as a child or import.  The activity delegate with no Handler is declared by activity '{2}'.</value>
  </data>
  <data name="ActivityDelegateCannotBeReferencedWithoutTarget" xml:space="preserve">
    <value>The activity delegate with Handler '{0}' cannot be referenced by activity '{1}' because the latter is not in another activity's implementation.  An activity delegate can only be referenced by the implementation of an activity which specifies that activity delegate as a child or import.  The activity delegate with Handler '{0}' is declared by activity '{2}'.</value>
  </data>
  <data name="ActivityDelegateCannotBeReferencedWithoutTargetNoHandler" xml:space="preserve">
    <value>The activity delegate with no Handler cannot be referenced by activity '{0}' because the latter is not in another activity's implementation.  An activity delegate can only be referenced by the implementation of an activity which specifies that activity delegate as a child or import.  The activity delegate with no Handler is declared by activity '{1}'.</value>
  </data>
  <data name="ActivityDelegateHandlersMustBeDeclarations" xml:space="preserve">
    <value>The Handler for an ActivityDelegate, ActivityAction, or ActivityFunc must not be a reference to an activity already existing in the tree.  The Handler activity '{0}' of a delegate parented by '{1}' is already referenced by '{2}'.</value>
  </data>
  <data name="ActivityDelegateNotOpened" xml:space="preserve">
    <value>ActivityDelegate '{0}' is not in the opened state.</value>
  </data>
  <data name="ActivityDelegateOwnerEnvironmentMissing" xml:space="preserve">
    <value>Location environment for activity '{0}' that declares activity delegate '{1}' was not found.</value>
  </data>
  <data name="ActivityDelegateOwnerMissing" xml:space="preserve">
    <value>ActivityDelegate '{0}' should have an owner workflow element specified.</value>
  </data>
  <data name="ActivityDelegateOwnerNotInParentScope" xml:space="preserve">
    <value>The Activity declaring ActivityDelegate '{0}' was not found in the parent hierarchy of the currently executing activity '{1}'.</value>
  </data>
  <data name="ActivityFailedToOpenBefore" xml:space="preserve">
    <value>This activity cannot be opened because it has failed to open previously.</value>
  </data>
  <data name="ActivityHasNoImplementation" xml:space="preserve">
    <value>Activity '{0}' has an implementation map, but no implementation.</value>
  </data>
  <data name="ActivityInstanceFixupFailed" xml:space="preserve">
    <value>Workflow load failed. The given activity tree is not compatible with this instance.</value>
  </data>
  <data name="ActivityIsNotRoot" xml:space="preserve">
    <value>This argument needs to be the root of the workflow definition.</value>
  </data>
  <data name="ActivityIsUncached" xml:space="preserve">
    <value>This method can only be called after CacheMetadata has been called on the workflow definition.</value>
  </data>
  <data name="ActivityMapIsCorrupt" xml:space="preserve">
    <value>Mapping from activity program to instance is corrupt within the persisted instance.</value>
  </data>
  <data name="ActivityNotFound" xml:space="preserve">
    <value>Activity '{0}' not found.</value>
  </data>
  <data name="ActivityNotICompiledExpressionRoot" xml:space="preserve">
    <value>Activity must be an ICompiledExpressionRoot to determine expression id.  Make sure that the current definition has been compiled.</value>
  </data>
  <data name="ActivityNotPartOfThisTree" xml:space="preserve">
    <value>The provided activity was not part of this workflow definition when its metadata was being processed.  The problematic activity named '{0}' was provided by the activity named '{1}'.</value>
  </data>
  <data name="ActivityPropertyMustBeSet" xml:space="preserve">
    <value>'{0}' is a required property for activity '{1}'.</value>
  </data>
  <data name="ActivityPropertyNotSet" xml:space="preserve">
    <value>'{0}' property of activity '{1}' is null and it will not do anything.</value>
  </data>
  <data name="ActivityPropertyRequiresName" xml:space="preserve">
    <value>'Name' is a required property for each ActivityProperty on DynamicActivity '{0}'.</value>
  </data>
  <data name="ActivityPropertyRequiresType" xml:space="preserve">
    <value>'Type' is a required property for each ActivityProperty on DynamicActivity '{0}'.</value>
  </data>
  <data name="ActivityScheduled" xml:space="preserve">
    <value>Parent Activity '{0}', DisplayName: '{1}', InstanceId: '{2}' scheduled child Activity '{3}', DisplayName: '{4}', InstanceId: '{5}'.</value>
  </data>
  <data name="ActivityTypeMismatch" xml:space="preserve">
    <value>'{0}' is not of type '{1}'. When loading this instance you must ensure that the activity with name '{0}' implements '{1}'.</value>
  </data>
  <data name="ActivityXamlServiceLineString" xml:space="preserve">
    <value>Line</value>
  </data>
  <data name="ActivityXamlServicesCompilationFailed" xml:space="preserve">
    <value>Compilation failures occurred: {0}Complete results are contained in the Data property of this exception.  Please correct the errors in the source and retry the Load.</value>
  </data>
  <data name="ActivityXamlServicesRequiresActivity" xml:space="preserve">
    <value>ActivityXamlServices.Load only supports Activity-based types.  Invalid type ({0}) was provided.</value>
  </data>
  <data name="AddedIdleArgumentBlockDU" xml:space="preserve">
    <value>The expression for newly added argument '{0}' contains Activity '{1}', which can idle during execution. To enable dynamic update inside this activity, use an argument expression that is guaranteed not to idle.</value>
  </data>
  <data name="AddedIdleExpressionBlockDU" xml:space="preserve">
    <value>A new variable default or argument expression was added that can idle during execution.</value>
  </data>
  <data name="AddedIdleVariableDefaultBlockDU" xml:space="preserve">
    <value>The default expression for newly added variable '{0}' contains Activity '{1}', which can idle during execution. To enable dynamic update inside this activity, use a variable default expression that is guaranteed not to idle.</value>
  </data>
  <data name="AddMatchActivityNewAndOldParentMismatch" xml:space="preserve">
    <value>Cannot match new Activity '{0}' with old Activity '{1}' because their declarers do not match. The new Activity is declared by '{2}' and the old Activity is declared by '{3}'.</value>
  </data>
  <data name="AddMatchActivityNewParentMismatch" xml:space="preserve">
    <value>Activity '{0}' cannot add a match for Activity '{1}' because it is not its declarer. The matched Activity is declared by '{2}'.</value>
  </data>
  <data name="AddMatchActivityPrivateChild" xml:space="preserve">
    <value>Cannot add a match for Activity '{0}' because it is a private child. Matches can only be added for public children.</value>
  </data>
  <data name="AddMatchVariableNewAndOldParentMismatch" xml:space="preserve">
    <value>Cannot match new Variable '{0}' with old Variable '{1}' because their owners do not match. The new Variable is owned by '{2}' and the old Variable is owned by '{3}'.</value>
  </data>
  <data name="AddMatchVariableNewParentMismatch" xml:space="preserve">
    <value>Activity '{0}' cannot add a match for Variable '{1}' because it is not its owner. The matched Variable is owned by '{2}'.</value>
  </data>
  <data name="AddMatchVariablePrivateChild" xml:space="preserve">
    <value>Cannot add a match for Variable '{0}' because it is private. Matches can only be added for public variables.</value>
  </data>
  <data name="AddMatchVariableSignatureMismatch" xml:space="preserve">
    <value>Activity '{0}' cannot add a variable match because the two variables' signatures don't match. The signature including Name, Type and Modifiers must match.  Name, Type and Modifiers of the new variable are {1}, {2} and {3}, respectively.  Name, Type and Modifiers of the old variable are {4}, {5} and {6}, respectively.  </value>
  </data>
  <data name="AddValidationErrorMustBeCalledFromConstraint" xml:space="preserve">
    <value>AddValidationError can only be called from the subtree of a {0} activity.</value>
  </data>
  <data name="AECDisposed" xml:space="preserve">
    <value>An ActivityContext can only be accessed within the scope of the function it was passed into.</value>
  </data>
  <data name="AECForPropertiesHasBeenDisposed" xml:space="preserve">
    <value>The ActivityContext which created this ExecutionProperties object has already been disposed. Properties can only be accessed during an activity's work item.</value>
  </data>
  <data name="AlreadyBoundToInstance" xml:space="preserve">
    <value>The instance persistence system is unable to process an invalid InstancePersistenceCommand.  The command requires an unbound handle, but the InstanceHandle is already bound to an instance.</value>
  </data>
  <data name="AlreadyBoundToOwner" xml:space="preserve">
    <value>The instance persistence system is unable to process an invalid InstancePersistenceCommand.  The command requires an unbound handle, but the InstanceHandle is already bound to an instance owner.</value>
  </data>
  <data name="AlreadySetupNoPersist" xml:space="preserve">
    <value>This workflow element has already setup a no persistence block.  Only one no persistence block can be setup by a workflow element.</value>
  </data>
  <data name="AmbiguousVBVariableReference" xml:space="preserve">
    <value>'{0}' is an ambiguous variable reference.  VisualBasic identifiers are case-insensitive.</value>
  </data>
  <data name="AppDomainUnload" xml:space="preserve">
    <value>AppDomain unloading. AppDomain.FriendlyName {0}, ProcessName {1}, ProcessId {2}.</value>
  </data>
  <data name="ArgumentAlreadyInitialized" xml:space="preserve">
    <value>Argument '{0}' on activity '{1}' was expected to be added by a dynamic update, but is already initialized.</value>
  </data>
  <data name="ArgumentAlreadyInUse" xml:space="preserve">
    <value>Argument '{0}' is being used by Activity '{1}', so it cannot also be used by Activity '{2}'.</value>
  </data>
  <data name="ArgumentCannotHaveNullOrVoidType" xml:space="preserve">
    <value>Activity with DisplayName='{0}' has an argument named '{1}' that is of null or void type.</value>
  </data>
  <data name="ArgumentDirectionMismatch" xml:space="preserve">
    <value>The Argument provided for the RuntimeArgument '{0}' cannot be bound because of a direction mismatch.  The RuntimeArgument declares the direction to be {1} and the Argument has a direction of {2}.</value>
  </data>
  <data name="ArgumentDoesNotExist" xml:space="preserve">
    <value>No argument of name '{0}' exists in this collection.</value>
  </data>
  <data name="ArgumentDoesNotExistInEnvironment" xml:space="preserve">
    <value>Argument '{0}' does not exist in the current environment scope.</value>
  </data>
  <data name="ArgumentIsAddedMoreThanOnce" xml:space="preserve">
    <value>Argument '{0}' is added more than once in Activity '{1}'.</value>
  </data>
  <data name="ArgumentLocationExpressionTypeMismatch" xml:space="preserve">
    <value>The Expression is required to be type '{0}', but type '{1}' was provided.</value>
  </data>
  <data name="ArgumentMustbePropertyofWorkflowElement" xml:space="preserve">
    <value>An argument must be one of properties of a WorkflowElement.</value>
  </data>
  <data name="ArgumentNameRequired" xml:space="preserve">
    <value>The argument name of an ArgumentReference or ArgumentValue must be set.</value>
  </data>
  <data name="ArgumentNotFound" xml:space="preserve">
    <value>The argument named '{0}' could not be found on the activity owning these private children.  ArgumentReference and ArgumentValue should only be used in the body of an Activity definition.</value>
  </data>
  <data name="ArgumentNotInTree" xml:space="preserve">
    <value>The argument of type '{0}' cannot be used.  Make sure that it is declared on an activity.</value>
  </data>
  <data name="ArgumentNullOrEmpty" xml:space="preserve">
    <value>The argument {0} is null or empty.</value>
  </data>
  <data name="ArgumentNumberRequiresTheSameAsParameterNumber" xml:space="preserve">
    <value>Argument number and parameter number of type '{0}' are required to be the same.</value>
  </data>
  <data name="ArgumentRequired" xml:space="preserve">
    <value>The content of argument in '{0}' collection of '{1}' is required.</value>
  </data>
  <data name="ArgumentTypeCannotBeNull" xml:space="preserve">
    <value>Argument type cannot be null.</value>
  </data>
  <data name="ArgumentTypeMismatch" xml:space="preserve">
    <value>The Argument provided for the RuntimeArgument '{0}' cannot be bound because of a type mismatch.  The RuntimeArgument declares the type to be {1} and the Argument has a type of {2}.  Both types must be the same.</value>
  </data>
  <data name="ArgumentTypeMustBeCompatible" xml:space="preserve">
    <value>The argument type must be compatible with the type of this ArgumentReference or ArgumentValue.  Argument '{0}' is of type {1} and the expected type is {2}.</value>
  </data>
  <data name="ArgumentValueExpressionTypeMismatch" xml:space="preserve">
    <value>The argument requires the ResultType to be '{0}', but an Activity with result type '{1}' is provided.</value>
  </data>
  <data name="ArgumentViolationsFound" xml:space="preserve">
    <value>Violations found in '{0}' activity. One or more violations were found as follows:    {1}</value>
  </data>
  <data name="AssemblyReferenceIsImmutable" xml:space="preserve">
    <value>The built-in default AssemblyReferences cannot be changed.</value>
  </data>
  <data name="AssemblyVersion" xml:space="preserve">
    <value>4.0.0.0</value>
  </data>
  <data name="AsyncCallbackThrewException" xml:space="preserve">
    <value>Async Callback threw an exception.</value>
  </data>
  <data name="AsyncEventArgsCompletedTwice" xml:space="preserve">
    <value>The AsyncEventArgs implementation '{0}' tried to complete a single operation multiple times. This could be caused by an incorrect application AsyncEventArgs implementation or other extensibility code that invokes the AsyncCallback multiple times.</value>
  </data>
  <data name="AsyncEventArgsCompletionPending" xml:space="preserve">
    <value>The AsyncEventArgs implementation '{0}' tried to set the state to Pending multiple times without completing a pending operation. This could be caused by an incorrect application AsyncEventArgs implementation or other extensibility code that invokes Set() multiple times.</value>
  </data>
  <data name="AsyncMethodsMustAllBeStaticOrInstance" xml:space="preserve">
    <value>The async methods must be all static methods or all instance methods.</value>
  </data>
  <data name="AsyncMethodsMustFromSameType" xml:space="preserve">
    <value>The async methods must be from the same type.</value>
  </data>
  <data name="AsyncResultAlreadyEnded" xml:space="preserve">
    <value>End cannot be called twice on an AsyncResult.</value>
  </data>
  <data name="AsyncResultCompletedTwice" xml:space="preserve">
    <value>The IAsyncResult implementation '{0}' tried to complete a single operation multiple times. This could be caused by an incorrect application IAsyncResult implementation or other extensibility code, such as an IAsyncResult that returns incorrect CompletedSynchronously values or invokes the AsyncCallback multiple times.</value>
  </data>
  <data name="AsyncTransactionException" xml:space="preserve">
    <value>An exception was thrown from a TransactionScope used to flow a transaction into an asynchronous operation.</value>
  </data>
  <data name="BadCopyToArray" xml:space="preserve">
    <value>Cannot copy dictionary items to the specified array. This happened due to one or more of the following errors: the array had too many dimensions; the index was past the end of the array; the array did not have enough space.</value>
  </data>
  <data name="BadWorkflowIdentityFormat" xml:space="preserve">
    <value>Invalid WorkflowIdentity format. WorkflowIdentity must follow the format 'name; Version=version; Package=package'. The Version and Package portions are optional.</value>
  </data>
  <data name="BeforeInitializeComponentXBTExtensionResourceNotFound" xml:space="preserve">
    <value>The resource expected to be generated by the BeforeInitializeComponent XAML build task extension was not found. Try rebuilding the project.</value>
  </data>
  <data name="BeginExecuteMustNotReturnANullAsyncResult" xml:space="preserve">
    <value>AsyncCodeActivity.BeginExecute must not return a null IAsyncResult.</value>
  </data>
  <data name="BeginExecuteMustUseProvidedStateAsAsyncResultState" xml:space="preserve">
    <value>AsyncCodeActivity.BeginExecute must return an IAsyncResult where IAsyncResult.AsyncState is the state object provided by the runtime.</value>
  </data>
  <data name="BinaryExpressionActivityRequiresArgument" xml:space="preserve">
    <value>{0} must be set before {1} activity '{2}' can be used.</value>
  </data>
  <data name="BindLockRequiresCommandFlag" xml:space="preserve">
    <value>The persistence provider implementation of InstanceStore in use is invalid. It called BindAcquiredLock, BindReclaimedLock, BeginBindReclaimedLock, or CreateBindReclaimedLockException at an invalid time. These methods may only be called while processing a command which may acquire a lock on an instance. Either switch to a valid persistence provider, or override the InstancePersistenceCommand implementation to return true from AutomaticallyAcquiringLock.</value>
  </data>
  <data name="BindReclaimedLockException" xml:space="preserve">
    <value>This exception does not represent an error and should not be caught.  It can be thrown from a persistence provider implementation of InstanceStore.TryCommand, BeginTryCommand, or EndTryCommand to indicate that an attempt should be made to reclaim the lock at the version specified in the call to InstancePersistenceContext.CreateBindReclaimedLockException.</value>
  </data>
  <data name="BindReclaimSucceeded" xml:space="preserve">
    <value>The persistence provider implementation of InstanceStore successfully canceled the command. An orphaned lock was reclaimed and the command canceled via InstancePersistenceContext.CreateBindReclaimedLockException.</value>
  </data>
  <data name="BlockedUpdateInsideActivityUpdateByUserError" xml:space="preserve">
    <value>The update author disallowed update inside this running activity.</value>
  </data>
  <data name="BlockedUpdateInsideActivityUpdateError" xml:space="preserve">
    <value>Dynamic update is blocked for this activity.</value>
  </data>
  <data name="BodyCannotBeNull" xml:space="preserve">
    <value>The Body of the message description cannot be null, please set the OperationDescription.MessageDescription.Body to correct value.</value>
  </data>
  <data name="BookmarkAlreadyExists" xml:space="preserve">
    <value>A bookmark with the name '{0}' already exists.</value>
  </data>
  <data name="BookmarkNotFoundGeneric" xml:space="preserve">
    <value>The requested bookmark cannot be found.</value>
  </data>
  <data name="BookmarkNotRegistered" xml:space="preserve">
    <value>The {0} bookmark is not currently registered in Compensation Extension.</value>
  </data>
  <data name="BookmarkScopeAlreadyInitialized" xml:space="preserve">
    <value>The  bookmark scope cannot be initialized because it is already initialized.</value>
  </data>
  <data name="BookmarkScopeHasBookmarks" xml:space="preserve">
    <value>The specified  bookmark scope cannot be unregistered because it has outstanding bookmarks.</value>
  </data>
  <data name="BookmarkScopeInitialized" xml:space="preserve">
    <value>The BookmarkScope that had TemporaryId: '{0}' has been initialized with Id: '{1}'.</value>
  </data>
  <data name="BookmarkScopeNotFound" xml:space="preserve">
    <value>The bookmark scope with id '{0}' could not be found.</value>
  </data>
  <data name="BookmarkScopeNotRegisteredForInitialize" xml:space="preserve">
    <value>The specified  bookmark scope cannot be initialized because it is not currently registered.</value>
  </data>
  <data name="BookmarkScopeNotRegisteredForUnregister" xml:space="preserve">
    <value>The specified  bookmark scope cannot be unregistered because it is not currently registered.  </value>
  </data>
  <data name="BookmarkScopesRequireKeys" xml:space="preserve">
    <value>Bookmark scopes require a host that supports key management.  The host you are using does not support key management.  If you are using WorkflowApplication or WorkflowInvoker consider using WorkflowServiceHost instead.</value>
  </data>
  <data name="BookmarkScopeWithIdAlreadyExists" xml:space="preserve">
    <value>The specified bookmark scope cannot be initialized with the identifier '{0}' because a  bookmark scope already exists with that identifier.</value>
  </data>
  <data name="BookmarksOnlyResumableWhileIdle" xml:space="preserve">
    <value>TryScheduleBookmarkResumption can only be called while the runtime is idle.</value>
  </data>
  <data name="BufferAllocationFailed" xml:space="preserve">
    <value>Failed to allocate a managed memory buffer of {0} bytes. The amount of available memory may be low.</value>
  </data>
  <data name="BufferedOutputStreamQuotaExceeded" xml:space="preserve">
    <value>The size quota for this stream ({0}) has been exceeded.</value>
  </data>
  <data name="BufferedReceiveBehaviorMultipleUse" xml:space="preserve">
    <value>The BufferedReceiveServiceBehavior instance could not be added to the WorkflowServiceHost because it has already been added to another WorkflowServiceHost instance. Create a new BufferedReceiveServiceBehavior instance for each additional WorkflowServiceHost.</value>
  </data>
  <data name="BufferedReceiveBehaviorUsedWithoutProperty" xml:space="preserve">
    <value>The BufferedReceiveServiceBehavior must be used with a workflow definition that supports BufferedReceive processing. Use WorkflowService.AllowBufferedReceive to enable BufferedReceive processing.</value>
  </data>
  <data name="BufferedReceiveRequiresReceiveContext" xml:space="preserve">
    <value>The operation with name '{0}' must be enabled to use the ReceiveContext ManualAcknowledgement mode when the BufferedReceiveServiceBehavior is used.</value>
  </data>
  <data name="BufferIsNotRightSizeForBufferManager" xml:space="preserve">
    <value>This buffer cannot be returned to the buffer manager because it is the wrong size.</value>
  </data>
  <data name="BufferOutOfOrderMessageNoBookmark" xml:space="preserve">
    <value>Operation '{1}' on service instance '{0}' cannot be performed at this time. Another attempt will be made when the service instance is ready to process this particular operation.</value>
  </data>
  <data name="BufferOutOfOrderMessageNoInstance" xml:space="preserve">
    <value>Operation '{0}' cannot be performed at this time. Another attempt will be made when the service instance is ready to process this particular operation.</value>
  </data>
  <data name="BufferPoolAllocation" xml:space="preserve">
    <value>Pool allocating {0} Bytes.</value>
  </data>
  <data name="BufferPoolChangeQuota" xml:space="preserve">
    <value>BufferPool of size {0}, changing quota by {1}.</value>
  </data>
  <data name="BusyCountTraceFormatString" xml:space="preserve">
    <value>Workflow Instance Id {0}</value>
  </data>
  <data name="CacheRootMetadataStart" xml:space="preserve">
    <value>CacheRootMetadata started on activity '{0}'</value>
  </data>
  <data name="CacheRootMetadataStop" xml:space="preserve">
    <value>CacheRootMetadata stopped on activity {0}.</value>
  </data>
  <data name="CacheSettingsLocked" xml:space="preserve">
    <value>Cache Settings are immutable since the extension is already added to the workflow instance or the host extensions collection.</value>
  </data>
  <data name="CallbackExceptionFromHostAbort" xml:space="preserve">
    <value>The call to OnRequestAbort on the WorkflowInstance '{0}' threw an exception. This is considered fatal. See inner exception for details.</value>
  </data>
  <data name="CallbackExceptionFromHostGetExtension" xml:space="preserve">
    <value>The call to OnGetExtension on the WorkflowInstance '{0}' threw an exception. This is considered fatal. See inner exception for details.</value>
  </data>
  <data name="CancellationHandlerFatalException" xml:space="preserve">
    <value>An unhandled exception has been thrown from '{0}''s Cancellation Handler. Cancellation may be in an inconsistent state and the workflow has been aborted.</value>
  </data>
  <data name="CanInduceIdleActivityInArgumentExpression" xml:space="preserve">
    <value>Argument '{0}' of activity '{1}' is bound to an expression that contains activity '{2}'. '{2}' can cause the expression to idle during evaluation. If the argument expressions of activity '{1}' modify shared state then going idle during expression evaluation can produce unexpected values for the arguments.</value>
  </data>
  <data name="CanInduceIdleNotSpecified" xml:space="preserve">
    <value>Activity '{0}' is invalid. NativeActivity derived activities that do asynchronous operations by calling one of the CreateBookmark overloads defined on System.Activities.NativeActivityContext must override the CanInduceIdle property and return true.</value>
  </data>
  <data name="CannotAcquireLockDefault" xml:space="preserve">
    <value>The execution of an InstancePersistenceCommand was interrupted because the instance is locked by a different instance owner. This error usually occurs because a different host has the instance loaded.</value>
  </data>
  <data name="CannotAcquireLockSpecific" xml:space="preserve">
    <value>The execution of an InstancePersistenceCommand was interrupted because the instance '{0}' is locked by a different instance owner. This error usually occurs because a different host has the instance loaded.</value>
  </data>
  <data name="CannotAcquireLockSpecificWithOwner" xml:space="preserve">
    <value>The execution of an InstancePersistenceCommand was interrupted because the instance '{0}' is locked by a different instance owner. This error usually occurs because a different host has the instance loaded. The instance owner ID of the owner or host with a lock on the instance is '{1}'.</value>
  </data>
  <data name="CannotAddHandlesUpdateError" xml:space="preserve">
    <value>The activity has added a new variable of a type that derives from Handle.</value>
  </data>
  <data name="CannotAddOrRemoveWithChildren" xml:space="preserve">
    <value>An activity cannot add or remove workflow execution properties while it has executing children.</value>
  </data>
  <data name="CannotCallAbortInstanceFromWorkflowThread" xml:space="preserve">
    <value>AbortInstance cannot be called from the workflow thread because it could result in inconsistent state.</value>
  </data>
  <data name="CannotChangeAbortInstanceFlagAfterPropertyRegistration" xml:space="preserve">
    <value>The value of the AbortInstanceOnTransactionFailure flag cannot be modified after the corresponding RuntimeTransactionHandle's IPropertyRegistrationCallback.Register has executed.</value>
  </data>
  <data name="CannotChangeMatchesInImplementation" xml:space="preserve">
    <value>New matches cannot be added inside the private implementation of the workflow for which the update map is being built.</value>
  </data>
  <data name="CannotCompleteRuntimeOwnedTransaction" xml:space="preserve">
    <value>The current transaction was configured by the runtime and can only be completed by the runtime.  A runtime configured transaction is usually the result of calling an invoke API on WorkflowInvoker while an ambient transaction exists.</value>
  </data>
  <data name="CannotCompleteWithKeys" xml:space="preserve">
    <value>The persistence provider implementation of InstanceStore in use is invalid. It reported completing an instance with active keys associated to it. All keys associated to an instance must be completed before the instance can be completed.</value>
  </data>
  <data name="CannotConvertObject" xml:space="preserve">
    <value>Cannot convert object '{0}' to type '{1}'.</value>
  </data>
  <data name="CannotCreateContextWithNullId" xml:space="preserve">
    <value>The instanceId argument to InstanceStore.CreateInstanceHandle cannot specify an all-zero ID, such as Guid.Empty.</value>
  </data>
  <data name="CannotCreateMessageFault" xml:space="preserve">
    <value>Cannot create MessageFault.</value>
  </data>
  <data name="CannotCreateOwnerWithoutIdentity" xml:space="preserve">
    <value>Cannot create a default instance owner without WorkflowIdentity. To create an owner, either specify a definition identity, or select WorkflowIdentityFilter.Any.</value>
  </data>
  <data name="CanNotDefineNullForAPromotion" xml:space="preserve">
    <value>The {0} promotion collection for promotion name {1} contains a null value.</value>
  </data>
  <data name="CannotDereferenceNull" xml:space="preserve">
    <value>Cannot create an L-value from the given expression with property '{0}' because the target object is null.</value>
  </data>
  <data name="CannotEnlistMultipleTransactions" xml:space="preserve">
    <value>There is already a transaction enlisted in the workflow. Only one transaction can be enlisted at a time.</value>
  </data>
  <data name="CanNotFindSymbolResolverInWorkflowInstanceExtensions" xml:space="preserve">
    <value>Symbol resolver cannot be found in a workflow instance extensions collection.</value>
  </data>
  <data name="CannotGenerateSchemaForXmlSerializable" xml:space="preserve">
    <value>'{0}' is internal runtime data and does not support generating a schema.</value>
  </data>
  <data name="CannotGetValueOfOutArgument" xml:space="preserve">
    <value>You cannot get the value of an out-only argument.</value>
  </data>
  <data name="CannotInvokeBindingFromNonBinding" xml:space="preserve">
    <value>The persistence provider implementation of InstanceStore in use is invalid. It attempted to execute a potentially lock-acquiring command while processing a non-lock-acquiring command. This exception can occur when InstancePersistenceContext.Execute or InstancePersistenceContext.BeginExecute is called with a command that returns true from InstancePersistenceCommand.AutomaticallyAcquiringLock while processing a command which returns false. Either use a persistence provider which does not do so, or override AutomaticallyAcquiringLock on one of the commands to return the correct value.</value>
  </data>
  <data name="CannotInvokeOpenedActivity" xml:space="preserve">
    <value>This activity cannot be invoked because it was not opened by an overload of Invoke which takes an IDictionary of string and object.</value>
  </data>
  <data name="CannotInvokeTransactionalFromNonTransactional" xml:space="preserve">
    <value>The persistence provider implementation of InstanceStore in use is invalid. It attempted to execute transactional command while processing a non-transactional command. This exception can occur when InstancePersistenceContext.Execute or InstancePersistenceContext.BeginExecute is called with a command that returns false from InstancePersistenceCommand.IsTransactionEnlistmentOptional while processing a command which returns true. Either use a persistence provider which does not do so, or override IsTransactionEnlistmentOptional on one of the commands to return the correct value.</value>
  </data>
  <data name="CannotModifyCatchAfterOpen" xml:space="preserve">
    <value>This Catch has already been opened and cannot be modified. Catches can only be modified at design time.</value>
  </data>
  <data name="CannotMoveChildAcrossDifferentFlowNodeTypes" xml:space="preserve">
    <value>Flowchart does not support Dynamic Update when a child activity is moved from one FlowNode type to a different FlowNode type.</value>
  </data>
  <data name="CannotNestTransactedReceiveScopeWhenAmbientHandleIsSuppressed" xml:space="preserve">
    <value>The runtime transaction is currently suppressed. Executing the TransactedReceiveScope activity '{0}' when the runtime transaction is suppressed is not supported.</value>
  </data>
  <data name="CannotNestTransactionScopeWhenAmbientHandleIsSuppressed" xml:space="preserve">
    <value>The runtime transaction is currently suppressed. Executing the TransactedScope activity '{0}' while the runtime transaction is suppressed is not supported.</value>
  </data>
  <data name="CannotPerformOperationFromHandlerThread" xml:space="preserve">
    <value>WorkflowApplication operations cannot be performed from within event handlers.</value>
  </data>
  <data name="CannotPerformOperationOnHandle" xml:space="preserve">
    <value>The operation cannot be performed on variables of Handle subtypes.</value>
  </data>
  <data name="CannotPersistInsideIsolation" xml:space="preserve">
    <value>Persist activities cannot be contained within isolation blocks.</value>
  </data>
  <data name="CannotPersistInsideNoPersist" xml:space="preserve">
    <value>Persist activities cannot be contained within no persistence blocks.</value>
  </data>
  <data name="CannotPersistWhileDetached" xml:space="preserve">
    <value>The instance cannot be persisted because it does not own the lock.  A previous call to Persist with an unlock value of true was responsible for releasing the lock.</value>
  </data>
  <data name="CannotPromoteAsSqlVariant" xml:space="preserve">
    <value>The data type '{0}' for the promoted property '{1}' is not supported by SQL. Either change the data type to a supported one or promote the property as a binary value.</value>
  </data>
  <data name="CannotPromoteXNameTwiceInPromotion" xml:space="preserve">
    <value>The XName '{0}' is promoted multiple times in the promotion '{1}.' Duplicate XNames are not allowed within the same promotion.</value>
  </data>
  <data name="CannotPropagateExceptionWhileCanceling" xml:space="preserve">
    <value>The activity '{0}' with ID {1} threw or propagated an exception while being canceled.</value>
  </data>
  <data name="CannotRemoveExecutingActivityUpdateError" xml:space="preserve">
    <value>Cannot remove activity '{0}: {1}' because it is currently executing.</value>
  </data>
  <data name="CannotReplaceTransaction" xml:space="preserve">
    <value>The ambient transaction (System.Transactions.Transaction.Current) doesn't match the transaction in use for this execution episode.  Only one transaction may be used throughout an entire execution episode.</value>
  </data>
  <data name="CannotResetPropertyInDataContext" xml:space="preserve">
    <value>Property in WorkflowDataContext cannot be reset.</value>
  </data>
  <data name="CannotSaveOriginalValueForActivity" xml:space="preserve">
    <value>An activity can only save original values for its public or imported children or delegate handlers.</value>
  </data>
  <data name="CannotSaveOriginalValueForNewActivity" xml:space="preserve">
    <value>Cannot save an original value for activity '{0}' because it did not exist in the original workflow definition.</value>
  </data>
  <data name="CannotSaveOriginalValuesForReferencedChildren" xml:space="preserve">
    <value>This activity does not correctly handle updates when it's inside an activity implementation. It attempted to save original values for references to imported children.</value>
  </data>
  <data name="CannotScheduleChildrenWhileEnteringIsolation" xml:space="preserve">
    <value>Child activities cannot be scheduled while setting up an isolation block. Wait for the OnEntered BookmarkCallback to be called before scheduling children.</value>
  </data>
  <data name="CannotSerializeExpression" xml:space="preserve">
    <value>Cannot serialize expression of type "{0}".</value>
  </data>
  <data name="CannotSerializeVariableExpression" xml:space="preserve">
    <value>Could not serialize expression because variable access sub-expressions were malformed or unrecognized.</value>
  </data>
  <data name="CannotSetRuntimeTransactionInNoPersist" xml:space="preserve">
    <value>The runtime cannot be configured with a transaction by an activity which is contained within a no persistence scope.  An ancestor activity has disallowed persistence.</value>
  </data>
  <data name="CannotSetupIsolationInsideIsolation" xml:space="preserve">
    <value>The isolation block cannot be set up because it would be contained within another isolation block.  Isolation blocks cannot be nested.</value>
  </data>
  <data name="CannotSetupIsolationInsideNoPersist" xml:space="preserve">
    <value>The isolation block cannot be set up because it would be contained within a no persistence block.</value>
  </data>
  <data name="CannotSetupIsolationWithChildren" xml:space="preserve">
    <value>An isolation block cannot be set up when there are executing children.</value>
  </data>
  <data name="CannotSetValueOfInArgument" xml:space="preserve">
    <value>Cannot assign values to In Arguments.</value>
  </data>
  <data name="CannotSetValueToLocation" xml:space="preserve">
    <value>A value of type '{0}' cannot be set to the location with name '{1}' because it is a location of type '{2}'.</value>
  </data>
  <data name="CannotSpecifyBothConnectionStringAndName" xml:space="preserve">
    <value>Cannot specify both connectionString and connectionStringName properties.</value>
  </data>
  <data name="CannotSuppressAlreadyRegisteredHandle" xml:space="preserve">
    <value>Cannot change the value of the SuppressTransaction property on an already registered RuntimeTransactionHandle.</value>
  </data>
  <data name="CannotUnregisterDefaultBookmarkScope" xml:space="preserve">
    <value>The bookmark scope cannot be deleted because it is the instance's default bookmark scope.</value>
  </data>
  <data name="CannotUnregisterNullBookmarkScope" xml:space="preserve">
    <value>A null bookmark scope cannot be unregistered.</value>
  </data>
  <data name="CannotUpdateEnvironmentInTheMiddleOfResolvingArguments" xml:space="preserve">
    <value>Arguments or variables cannot be added, removed or rearranged when the instance is in the middle of resolving arguments.</value>
  </data>
  <data name="CannotUpdateEnvironmentInTheMiddleOfResolvingVariables" xml:space="preserve">
    <value>Arguments or variables cannot be added, removed or rearranged when the instance is in the middle of resolving variables.</value>
  </data>
  <data name="CannotUpdateLoadedInstance" xml:space="preserve">
    <value>WorkflowInstance '{0}' could not be updated because it is already loaded. Consider suspending the instance before updating it.</value>
  </data>
  <data name="CannotUseAddServiceEndpointOverloadForWorkflowServices" xml:space="preserve">
    <value>WorkflowServiceHost does not support adding application endpoints using AddServiceEndpoint(ServiceEndpoint endpoint) overload.  Please use one of the 'XName serviceContractName' or 'string implementedContract' overloads to add application endpoints to WorkflowServiceHost.</value>
  </data>
  <data name="CannotUseInputsWithLoad" xml:space="preserve">
    <value>Workflow inputs cannot be used with Load or LoadRunnableInstance, since they are only provided to new instances.</value>
  </data>
  <data name="CannotValidateNullObject" xml:space="preserve">
    <value>The ToValidate argument of the {0} named '{1}' resolved to null.  A non-null object to validate must be provided.</value>
  </data>
  <data name="CannotWaitForIdleSynchronously" xml:space="preserve">
    <value>The operation has failed because it was called from a handler while the workflow was not idle.  The operation requires that the workflow is idle to complete and the workflow cannot execute while in an event handler.</value>
  </data>
  <data name="CanOnlyAbortDirectChildren" xml:space="preserve">
    <value>An Activity can only abort its direct children.</value>
  </data>
  <data name="CanOnlyCancelDirectChildren" xml:space="preserve">
    <value>An Activity can only cancel its direct children.</value>
  </data>
  <data name="CanOnlyGetOwnedArguments" xml:space="preserve">
    <value>An Activity can only get the location of arguments which it owns.  Activity '{0}' is trying to get the location of argument '{1}' which is owned by activity '{2}'.</value>
  </data>
  <data name="CanOnlyScheduleDirectChildren" xml:space="preserve">
    <value>An Activity can only schedule its direct children. Activity '{0}' is attempting to schedule '{1}' which is a child of activity '{2}'.</value>
  </data>
  <data name="CantFindTimerExtension" xml:space="preserve">
    <value>A TimerExtension must be added to the extensions collection.</value>
  </data>
  <data name="CatchOrFinallyExpected" xml:space="preserve">
    <value>Catch or Finally expected for TryCatch activity '{0}'.</value>
  </data>
  <data name="ChangeConditionalTransitionToUnconditionalBlockDU" xml:space="preserve">
    <value>StateMachine does not support Dynamic Update if a conditional transition becomes unconditional after update.</value>
  </data>
  <data name="ChangeTransitionTypeDuringTransitioningBlockDU" xml:space="preserve">
    <value>StateMachine does not support Dynamic Update if the state is transitioning, and the current transition becomes conditional.</value>
  </data>
  <data name="ChangingTriggerOrUseOriginalConditionActionBlockDU" xml:space="preserve">
    <value>StateMachine does not support Dynamic Update, if the Trigger of an existing Transition is modified, or the Condition or Action activity is reassigned to a new Transition.</value>
  </data>
  <data name="CleanupInProgress" xml:space="preserve">
    <value>SqlWorkflowInstanceStore cannot process the command because store cleanup is currently in progress. Please wait for the cleanup to finish and then try again.</value>
  </data>
  <data name="CollectionActivityRequiresCollection" xml:space="preserve">
    <value>The property 'Collection' of '{0}' is not initialized.</value>
  </data>
  <data name="ColumnNumberTooLarge" xml:space="preserve">
    <value>The specified column number for activity {0} is too large to be supported in Partial Trust</value>
  </data>
  <data name="CommandExecutionCannotOverlap" xml:space="preserve">
    <value>Only one command at a time can be executed for a single InstanceHandle. Do not call the method Execute or BeginExecute on InstanceStore until the previous command executing for this InstanceHandle has completed.</value>
  </data>
  <data name="CompensableActivityAlreadyConfirmedOrCompensated" xml:space="preserve">
    <value>The CompensableActivity specified by the 'Target' CompensationToken has already been confirmed or compensated.</value>
  </data>
  <data name="CompensableActivityInsideTransactedReceiveScope" xml:space="preserve">
    <value>A CompensableActivity cannot be nested inside a TransactedReceiveScope.</value>
  </data>
  <data name="CompensableActivityInsideTransactionScopeActivity" xml:space="preserve">
    <value>A CompensableActivity cannot be nested inside a TransactionScope activity.</value>
  </data>
  <data name="CompensateWithNoTargetConstraint" xml:space="preserve">
    <value>Using Compensate with no specified Target is valid only when used within the Compensation, Confirmation or Cancellation handlers.</value>
  </data>
  <data name="CompensateWithoutCompensableActivity" xml:space="preserve">
    <value>The Compensate activity '{0}' can be used only if a CompensableActivity within the workflow has already executed.</value>
  </data>
  <data name="CompensationHandlerFatalException" xml:space="preserve">
    <value>An unhandled exception has been thrown from '{0}''s Compensation Handler. Compensation may be in an inconsistent state and the workflow has been aborted.</value>
  </data>
  <data name="CompensationState" xml:space="preserve">
    <value>CompensableActivity '{0}' is in the '{1}' state.</value>
  </data>
  <data name="CompiledExpressionIdNotFound" xml:space="preserve">
    <value>Unable to locate the expression id for '{0}'.  Make sure that the current definition has been compiled.</value>
  </data>
  <data name="CompiledExpressionsActivityException" xml:space="preserve">
    <value>TextExpressionCompiler:  Exception of type '{0}' encountered while processing activity '{1}': '{2}'.</value>
  </data>
  <data name="CompiledExpressionsCacheMetadataException" xml:space="preserve">
    <value>CacheMetadata for activity '{0}' threw '{1}'.</value>
  </data>
  <data name="CompiledExpressionsDuplicateName" xml:space="preserve">
    <value>'{0}' is an ambiguous variable reference.  Please rename the identifier.</value>
  </data>
  <data name="CompiledExpressionsIgnoringInvalidIdentifierVariable" xml:space="preserve">
    <value>TextExpressionCompiler: Ignoring variable '{0}'.  Identifier is not valid for the current language.</value>
  </data>
  <data name="CompiledExpressionsIgnoringUnnamedVariable" xml:space="preserve">
    <value>TextExpressionCompiler: Ignoring unnamed variable.</value>
  </data>
  <data name="CompiledExpressionsNoCompiledRoot" xml:space="preserve">
    <value>Unable to locate the activity instance corresponding to activity '{0}'.  Please recompile the workflow.</value>
  </data>
  <data name="CompiledLocationNoDefaultConstructor" xml:space="preserve">
    <value>Compiled expressions require a default constructor on their local root.  Please add a default constructor to type '{0}'.</value>
  </data>
  <data name="CompiledLocationReferenceGetLocation" xml:space="preserve">
    <value>CompiledLocationReference should never be used to access a Location.</value>
  </data>
  <data name="CompilerError" xml:space="preserve">
    <value>Compiler error(s) encountered.</value>
  </data>
  <data name="CompilerErrorSpecificExpression" xml:space="preserve">
    <value>Compiler error(s) encountered processing expression "{0}".{1}</value>
  </data>
  <data name="CompileVbExpressionStart" xml:space="preserve">
    <value>Compiling VB expression '{0}'</value>
  </data>
  <data name="CompileVbExpressionStop" xml:space="preserve">
    <value>Finished compiling VB expression.</value>
  </data>
  <data name="CompleteBookmarkWorkItem" xml:space="preserve">
    <value>A BookmarkWorkItem has completed for Activity '{0}', DisplayName: '{1}', InstanceId: '{2}'. BookmarkName: {3}, BookmarkScope: {4}.</value>
  </data>
  <data name="CompleteCancelActivityWorkItem" xml:space="preserve">
    <value>A CancelActivityWorkItem has completed for Activity '{0}', DisplayName: '{1}', InstanceId: '{2}'.</value>
  </data>
  <data name="CompleteCompletionWorkItem" xml:space="preserve">
    <value>A CompletionWorkItem has completed for parent Activity '{0}', DisplayName: '{1}', InstanceId: '{2}'. Completed Activity '{3}', DisplayName: '{4}', InstanceId: '{5}'.</value>
  </data>
  <data name="CompletedMustNotHaveAssociatedKeys" xml:space="preserve">
    <value>The persistence provider implementation of InstanceStore in use is invalid. It reported loading an instance with InstanceState.Completed that has associated keys which are not completed.</value>
  </data>
  <data name="CompleteExecuteActivityWorkItem" xml:space="preserve">
    <value>An ExecuteActivityWorkItem has completed for Activity '{0}', DisplayName: '{1}', InstanceId: '{2}'.</value>
  </data>
  <data name="CompleteFaultWorkItem" xml:space="preserve">
    <value>A FaultWorkItem has completed for Activity '{0}', DisplayName: '{1}', InstanceId: '{2}'. The exception was propagated from Activity '{3}', DisplayName: '{4}', InstanceId: '{5}'.</value>
  </data>
  <data name="CompleteRuntimeWorkItem" xml:space="preserve">
    <value>A runtime work item has completed for Activity '{0}', DisplayName: '{1}', InstanceId: '{2}'.</value>
  </data>
  <data name="CompleteTransactionContextWorkItem" xml:space="preserve">
    <value>A TransactionContextWorkItem has completed for Activity '{0}', DisplayName: '{1}', InstanceId: '{2}'.</value>
  </data>
  <data name="CompletionConditionSetButNoBody" xml:space="preserve">
    <value>In ParallelForEach, it is invalid to have a CompletionCondition property not equal to null but the Body property equals to null. Please consider setting the Body property of ParallelForEach '{0}' to an empty Sequence activity.</value>
  </data>
  <data name="ConfirmationHandlerFatalException" xml:space="preserve">
    <value>An unhandled exception has been thrown from '{0}''s Confirmation Handler. Confirmation may be in an inconsistent state and the workflow has been aborted.</value>
  </data>
  <data name="ConfirmWithNoTargetConstraint" xml:space="preserve">
    <value>Using Confirm with no specified Target is valid only when used within the Compensation, Confirmation or Cancellation handlers.</value>
  </data>
  <data name="ConfirmWithoutCompensableActivity" xml:space="preserve">
    <value>The Confirm activity '{0}' can be used only if a CompensableActivity within the workflow has already executed.</value>
  </data>
  <data name="ConflictingValueName" xml:space="preserve">
    <value>The property name '{0}' (an XName) for a value provided to DurableInstanceManager.AddInstanceOwnerValues conflicts with the name of a value already added.  Ensure that the names of all values passed to AddInstanceOwnerValues are unique.  This error could be caused by conflicting configured service behaviors.</value>
  </data>
  <data name="ConnectionStringNameWrong" xml:space="preserve">
    <value>Cannot find connection string for connection name '{0}'.</value>
  </data>
  <data name="ConstructorInfoNotFound" xml:space="preserve">
    <value>The corresponding constructor info is not found in type of '{0}'.</value>
  </data>
  <data name="ConstVariableCannotBeSet" xml:space="preserve">
    <value>This location is marked as const, so its value cannot be modified.</value>
  </data>
  <data name="ContextAlreadyBoundToInstance" xml:space="preserve">
    <value>The persistence provider implementation of InstanceStore in use is invalid. It called BindInstance to set the instance ID of an InstanceHandle which is already bound to an instance. An InstanceHandle may only be bound to a single instance over its lifetime.</value>
  </data>
  <data name="ContextAlreadyBoundToLock" xml:space="preserve">
    <value>The persistence provider implementation of InstanceStore in use is invalid. It called BindAcquiredLock to set the locked instance version of an InstanceHandle which is already bound to a lock. An InstanceHandle may only be bound to a single lock over its lifetime.</value>
  </data>
  <data name="ContextAlreadyBoundToOwner" xml:space="preserve">
    <value>The persistence provider implementation of InstanceStore in use is invalid. It called BindOwner to set the owner of an InstanceHandle which is already bound to an owner. An InstanceHandle may only be bound to a single owner over its lifetime.</value>
  </data>
  <data name="ContextMismatchInContextAndCallBackContext" xml:space="preserve">
    <value>Both CorrelationCallbackContext and CorrelationContext are set but the context does not match.</value>
  </data>
  <data name="ContextMustBeBoundToInstance" xml:space="preserve">
    <value>The persistence provider implementation of InstanceStore in use is invalid. It called BindAcquiredLock, BindReclaimedLock, BeginBindReclaimedLock, or CreateBindReclaimedLockException to bind the InstanceHandle to an instance lock version, but the InstanceHandle is not bound to an instance. An InstanceHandle must first be bound to an instance in order to bind it to a lock.</value>
  </data>
  <data name="ContextMustBeBoundToOwner" xml:space="preserve">
    <value>The persistence provider implementation of InstanceStore in use is invalid. It called BindAcquiredLock, BindReclaimedLock, BeginBindReclaimedLock, or CreateBindReclaimedLockException to bind the InstanceHandle to an instance lock version, but the InstanceHandle is not bound to an owner. An InstanceHandle must first be bound to an owner in order to bind it to a lock.</value>
  </data>
  <data name="ContextNotFromThisStore" xml:space="preserve">
    <value>The handle argument to InstanceStore.Execute or InstanceStore.BeginExecute must have been created by a call to CreateInstanceHandle on the same InstanceStore instance.</value>
  </data>
  <data name="ContractInferenceValidationForTransactionFlowBehavior" xml:space="preserve">
    <value>The TransactionFlow behavior on the operation must be set to Allowed.</value>
  </data>
  <data name="ContractNotFoundInAddServiceEndpoint" xml:space="preserve">
    <value>Cannot add endpoint because ContractDescription with Name='{0}' and Namespace='{1}' cannot be found.</value>
  </data>
  <data name="ControllerInvalidBeforeInitialize" xml:space="preserve">
    <value>WorkflowInstance.Controller is only valid after Initialize has been called.</value>
  </data>
  <data name="ConvertVariableToValueExpressionFailed" xml:space="preserve">
    <value>Cannot convert Variable of type '{0}' to Activity of type '{1}'.</value>
  </data>
  <data name="CopyToIndexOutOfRange" xml:space="preserve">
    <value>The array index must be greater than 0.</value>
  </data>
  <data name="CopyToNotEnoughSpaceInArray" xml:space="preserve">
    <value>The provided array does not have the capacity to hold the values.</value>
  </data>
  <data name="CopyToRankMustBeOne" xml:space="preserve">
    <value>The provided array has multiple dimensions.  The array must have a rank of one to be used with CopyTo.</value>
  </data>
  <data name="CorrelatedContextRequiredForAnonymousSend" xml:space="preserve">
    <value>A Send activity must either be configured with an Endpoint, or correlated to an earlier established context using CorrelatesWith.</value>
  </data>
  <data name="CorrelationHandleInUse" xml:space="preserve">
    <value>The CorrelationHandle is already in use with BookmarkScope '{0}', so it cannot be used with BookmarkScope '{1}'.</value>
  </data>
  <data name="CorrelationResponseContextShouldNotBeNull" xml:space="preserve">
    <value>CorrelationResponse context should not be null. This could be because the correlation handle is not setup correctly.</value>
  </data>
  <data name="CouldNotResolveNamespacePrefix" xml:space="preserve">
    <value>Could not resolve namespace prefix '{0}'.</value>
  </data>
  <data name="CreateBookmark" xml:space="preserve">
    <value>A Bookmark has been created for Activity '{0}', DisplayName: '{1}', InstanceId: '{2}'.  BookmarkName: {3}, BookmarkScope: {4}.</value>
  </data>
  <data name="CreateBookmarkScope" xml:space="preserve">
    <value>A BookmarkScope has been created: {0}.</value>
  </data>
  <data name="CreateBookmarkScopeFailed" xml:space="preserve">
    <value>This BookmarkScopeHandle is already associated with a BookmarkScope.</value>
  </data>
  <data name="CreateWorkflowServiceHostStart" xml:space="preserve">
    <value>CreateWorkflowServiceHost start</value>
  </data>
  <data name="CreateWorkflowServiceHostStop" xml:space="preserve">
    <value>CreateWorkflowServiceHost Stop</value>
  </data>
  <data name="CSharpExpressionsMustBeCompiled" xml:space="preserve">
    <value>CSharp expressions must be compiled.</value>
  </data>
  <data name="CurrentOperationCannotCreateInstance" xml:space="preserve">
    <value>There is no context attached to the incoming message for the service and the current operation is not marked with "CanCreateInstance = true". In order to communicate with this service check whether the incoming binding supports the context protocol and has a valid context initialized.</value>
  </data>
  <data name="DanglingReceive" xml:space="preserve">
    <value>The workflow is missing a Receive to pair with a SendReply. Please ensure that each SendReply activity is paired with a Receive activity that is present in the workflow.</value>
  </data>
  <data name="DatabaseUpgradeRequiredForCommand" xml:space="preserve">
    <value>The SqlWorkflowInstanceStore has a database version of '{0}'. InstancePersistenceCommand '{1}' cannot be run against this database version.  Please upgrade the database to '{2}'.</value>
  </data>
  <data name="DebugInfoCannotEvaluateExpression" xml:space="preserve">
    <value>Cannot evaluate '{0}' at current context.</value>
  </data>
  <data name="DebugInfoExceptionCaught" xml:space="preserve">
    <value>Exception caught while evaluating {0}: {1}.</value>
  </data>
  <data name="DebugInfoNotSkipArgumentResolution" xml:space="preserve">
    <value>*** value not SkipArgumentResolution ***</value>
  </data>
  <data name="DebugInfoTryGetValueFailed" xml:space="preserve">
    <value>*** TryGetValue failed ***</value>
  </data>
  <data name="DebugInstrumentationFailed" xml:space="preserve">
    <value>Instrumentation for debugger fails.  Reason: {0}.</value>
  </data>
  <data name="DebugSymbolChecksumValueInvalid" xml:space="preserve">
    <value>The checksum specified for a debug symbol is invalid in Partial Trust</value>
  </data>
  <data name="DefaultAbortReason" xml:space="preserve">
    <value>The workflow has been aborted.</value>
  </data>
  <data name="DefaultCancelationRequiresCancelHasBeenRequested" xml:space="preserve">
    <value>Default cancelation logic requires that HasCancelBeenRequested is true.  NativeActivity's Cancel method should only be invoked by the runtime.</value>
  </data>
  <data name="DefaultCreateOnlyReason" xml:space="preserve">
    <value>The workflow was created with WorkflowCreationContext.CreateOnly set to true.</value>
  </data>
  <data name="DefaultInvalidWorkflowExceptionMessage" xml:space="preserve">
    <value>The workflow definition's structure is invalid.  Use ActivityValidationServices to see all violations.</value>
  </data>
  <data name="DefaultSuspendReason" xml:space="preserve">
    <value>The workflow was suspended via the control endpoint.</value>
  </data>
  <data name="DefaultTerminationReason" xml:space="preserve">
    <value>The workflow has been requested to terminate.</value>
  </data>
  <data name="DefaultWorkflowApplicationExceptionMessage" xml:space="preserve">
    <value>The operation could not be performed because it was not allowed by the current state of the WorkflowApplication.</value>
  </data>
  <data name="DelegateArgumentAlreadyInUseOnActivity" xml:space="preserve">
    <value>DelegateArgument '{0}' can not be used on Activity '{1}' because it is already in use by Activity '{2}'.</value>
  </data>
  <data name="DelegateArgumentChangeBlockDU" xml:space="preserve">
    <value>This activity is the Handler of an ActivityDelegate whose arguments have changed.</value>
  </data>
  <data name="DelegateArgumentDoesNotExist" xml:space="preserve">
    <value>DelegateArgument '{0}' does not exist in this environment.</value>
  </data>
  <data name="DelegateArgumentMustBeReferenced" xml:space="preserve">
    <value>DelegateArgument '{0}' must be included in an activity's ActivityDelegate before it is used.</value>
  </data>
  <data name="DelegateArgumentMustBeSet" xml:space="preserve">
    <value>DelegateArgument must be set before CacheMetadata is called.</value>
  </data>
  <data name="DelegateArgumentNotVisible" xml:space="preserve">
    <value>The referenced DelegateArgument object ('{0}') is not visible at this scope.</value>
  </data>
  <data name="DelegateArgumentTypeInvalid" xml:space="preserve">
    <value>DelegateArgument '{0}' cannot be used in an expression of type '{1}', since it is of type '{2}' which is not compatible.</value>
  </data>
  <data name="DelegateHandlersCannotBeScheduledDirectly" xml:space="preserve">
    <value>Activity '{0}' attempted to directly schedule the ActivityDelegate handler activity '{1}'.  ActivityDelegate handlers cannot be scheduled directly.  Instead, the ActivityDelegate itself must be scheduled for execution.</value>
  </data>
  <data name="DelegateInArgumentTypeMismatch" xml:space="preserve">
    <value>The argument provided for the delegate input named '{0}' had an invalid type.  The delegate input is of type '{1}' and the argument is of type '{2}'.  The argument's type must be coercible to the delegate input's type.</value>
  </data>
  <data name="DelegateOutArgumentTypeMismatch" xml:space="preserve">
    <value>The argument provided for the delegate output named '{0}' had an invalid type.  The delegate output is of type '{1}' and the argument is of type '{2}'.  The delegate output's type must be coercible to the argument's type.</value>
  </data>
  <data name="DelegateParameterCannotBeModifiedAfterOpen" xml:space="preserve">
    <value>ActivityDelegateParameter '{0}' cannot be modified. The ActivityDelegate which uses it has been locked. An ActivityDelegate is locked when Invoke is called on the owning WorkflowElement, or when a WorkflowInstance is created from it.</value>
  </data>
  <data name="DelegateParameterDirectionalityMismatch" xml:space="preserve">
    <value>The directionality of activity delegate parameter '{0}' in DelegateParameters dictionary is '{1}'. The expected directionality is '{2}'.</value>
  </data>
  <data name="DictionaryIsReadOnly" xml:space="preserve">
    <value>This dictionary is read only and cannot be modified.</value>
  </data>
  <data name="DifferentContractsSameConfigName" xml:space="preserve">
    <value>Two different contracts have the same ConfigurationName.</value>
  </data>
  <data name="DifferentWorkflowServiceNameNotSupported" xml:space="preserve">
    <value>WorkflowService Name {0} in additional versions does not match the Name {1} of the default WorkflowService.</value>
  </data>
  <data name="DirectLambdaParameterReference" xml:space="preserve">
    <value>Cannot serialize expressions with direct lambda parameter references.  Possible malformed variable reference.</value>
  </data>
  <data name="DirectoryAborted" xml:space="preserve">
    <value>The directory of loaded instances has been aborted. An abrupt shutdown of the service is in progress.</value>
  </data>
  <data name="DispatchOperationInInvalidState" xml:space="preserve">
    <value>WorkflowOperationBehavior cannot apply the dispatch behavior because the DispatchOperation instance is in an invalid state.</value>
  </data>
  <data name="DoNotCompleteTryCommandWithPendingReclaim" xml:space="preserve">
    <value>The persistence provider implementation of InstanceStore in use is invalid. It completed processing a TryCommand request while an attempt to reclaim a lock was in progress. Use a persistence provider which does not return or throw from TryCommand, complete the IAsyncResult returned from BeginTryCommand before the IAsyncResult returned from BeginBindReclaimedLock is complete, or complete before throwing the exception returned from CreateBindReclaimedLockException.</value>
  </data>
  <data name="DoNotSupportArrayIndexerOnNonArrayType" xml:space="preserve">
    <value>ArrayIndexer on type {0} is not supported because it is not an array type.</value>
  </data>
  <data name="DoNotSupportArrayIndexerReferenceWithDifferentArrayTypeAndResultType" xml:space="preserve">
    <value>ArrayIndexer as LValue with array type {0} and result type {1} is not supported because they are not the same.</value>
  </data>
  <data name="DoNotSupportArrayIndexerValueWithIncompatibleArrayTypeAndResultType" xml:space="preserve">
    <value>ArrayIndexer as right value with array item type {0} and result type {1} is not supported because {0} is not compatible with {1}.</value>
  </data>
  <data name="DoNotSupportArrayIndexerWithDifferentArrayTypeAndResultType" xml:space="preserve">
    <value>ArrayIndexer with array type {0} and result type {1} is not supported because they are not the same.</value>
  </data>
  <data name="DoNotSupportArrayIndexerWithNonIntIndex" xml:space="preserve">
    <value>ArrayIndexer with index type {0} is not supported because it is not int.</value>
  </data>
  <data name="DoWhileRequiresCondition" xml:space="preserve">
    <value>Condition must be set before DoWhile activity '{0}' can be used.</value>
  </data>
  <data name="DUActivityTypeMismatch" xml:space="preserve">
    <value>This activity has type '{0}' in the updated definition but type '{1}' in the original definition.</value>
  </data>
  <data name="DUActivityTypeMismatchRuntime" xml:space="preserve">
    <value>The type of this activity changed as part of the update.</value>
  </data>
  <data name="DUDisallowIfCannotFindingMatchingCondition" xml:space="preserve">
    <value>StateMachine does not support Dynamic Update, if the Trigger of a conditional transition is removed, or a Condition activity in the updated definition is reassigned from another property.</value>
  </data>
  <data name="DuplexContractsNotSupported" xml:space="preserve">
    <value>Workflow doesn't support Duplex Contracts, please remove the CallbackContract property from the ServiceContractAttribute. </value>
  </data>
  <data name="DuplicateAnnotationName" xml:space="preserve">
    <value>Unable to add an annotation with name '{0}'. Check tracking profile queries for duplicate names within annotations or environment variables. </value>
  </data>
  <data name="DuplicateCatchClause" xml:space="preserve">
    <value>A catch clause already exists for type {0}. Only one catch clause can be added for each unique CLR exception type.</value>
  </data>
  <data name="DuplicateCorrelationQuery" xml:space="preserve">
    <value>A duplicate CorrelationQuery was found with Where='{0}'. This duplicate query will not be used when calculating correlation.</value>
  </data>
  <data name="DuplicatedContract" xml:space="preserve">
    <value>Multiple implemented contract types contain contract '{0}' and operation '{1}'.</value>
  </data>
  <data name="DuplicateDefinitionIdentity" xml:space="preserve">
    <value>WorkflowService with ({0}) DefinitionIdentity already exists.</value>
  </data>
  <data name="DuplicateEvaluationOrderValues" xml:space="preserve">
    <value>Activity '{0}' has multiple runtime arguments with evaluation order set to '{1}'. Runtime argument evaluation order values must be unique.</value>
  </data>
  <data name="DuplicateImportAttribute" xml:space="preserve">
    <value>Property '{0}' on DynamicActivity '{1}' has more than one ImportAttribute. Only one ImportAttribute is allowed per property.</value>
  </data>
  <data name="DuplicateInstanceKeyExists" xml:space="preserve">
    <value>An instance key of value '{0}' already exists. This could be because there are multiple MessageQuerySets defined that evaluate to the same CorrelationKey.</value>
  </data>
  <data name="DuplicateInstrumentation" xml:space="preserve">
    <value>Duplicate instrumentation for {0}.  Debugger may break at wrong location.</value>
  </data>
  <data name="DuplicateMethodFound" xml:space="preserve">
    <value>Ambiguous match. '{0}' has multiple public {1} methods named '{2}' matching the parameter types, generic type arguments, and generic type constraints supplied to InvokeMethod '{3}'.</value>
  </data>
  <data name="DuplicateOriginActivityActivity" xml:space="preserve">
    <value>The same origin object '{0}' is used by activity '{1}' and activity '{2}'.</value>
  </data>
  <data name="DuplicateOriginActivityVariable" xml:space="preserve">
    <value>The same origin object '{0}' is used by activity '{1}' and variable '{2}'.</value>
  </data>
  <data name="DuplicateOriginVariableVariable" xml:space="preserve">
    <value>The same origin object '{0}' is used by variable '{1}' and variable '{2}'.</value>
  </data>
  <data name="DurationIsNegative" xml:space="preserve">
    <value>The value for the Duration argument in Delay activity '{0}' is negative.</value>
  </data>
  <data name="DUTriggerOrConditionChangedDuringTransitioning" xml:space="preserve">
    <value>StateMachine does not support Dynamic Update if the state is transitioning, and the current transition has been modified.</value>
  </data>
  <data name="DynamicActivityDuplicatePropertyDetected" xml:space="preserve">
    <value>A property named '{0}' already exists in the DynamicActivity.Properties collection.</value>
  </data>
  <data name="DynamicActivityMultipleExpressionLanguages" xml:space="preserve">
    <value>The specified Activity definition contains multiple languages of expression activities that require compilation (languages discovered: '{0}').  Only one language requiring compilation is allowed per definition.  Please convert all expression activities that require compilation to a single language.</value>
  </data>
  <data name="EmptyCorrelationQueryResults" xml:space="preserve">
    <value>A correlation query yielded an empty result set. Please ensure correlation queries for the endpoint are correctly configured.</value>
  </data>
  <data name="EmptyGuidOnDeserializedInstance" xml:space="preserve">
    <value>The instance ID of a deserialized instance is all zeroes (Guid.Empty). Instances which are serialized must have a non-zero instance ID.</value>
  </data>
  <data name="EmptyIdReturnedFromHost" xml:space="preserve">
    <value>The implementation of the 'Id' property on workflow host type '{0}' returned an instance ID of all zeroes. Implementations of WorkflowInstance must return an instance ID other than Guid.Empty.</value>
  </data>
  <data name="EndpointAddressNotSetInEndpoint" xml:space="preserve">
    <value>Failed to retrieve the EndpointAddress from the endpoint, config file or the callback context. This could be because neither endpoint nor endpoint configuration was set on the activity with OperationName='{0}'.</value>
  </data>
  <data name="EndpointIncorrectlySet" xml:space="preserve">
    <value>Both the Endpoint and the EndpointConfigurationName properties are set in activity '{0}' with OperationName='{1}'. However, only one can be set at a time.</value>
  </data>
  <data name="EndpointNotSet" xml:space="preserve">
    <value>The activity '{0}' with OperationName='{1}' must specify either the Endpoint or EndpointConfigurationName property.</value>
  </data>
  <data name="EndSqlCommandExecute" xml:space="preserve">
    <value>End SQL command execution: {0}</value>
  </data>
  <data name="EnlistedTransactionPropertiesRequireIsolationBlocks" xml:space="preserve">
    <value>A TransactionProperty with enlistWorkflowState set to true must be added within an isolation block.</value>
  </data>
  <data name="EnterNoPersistBlock" xml:space="preserve">
    <value>Entering a no persist block.</value>
  </data>
  <data name="EnumeratorNotStarted" xml:space="preserve">
    <value>Enumeration has not started. Call MoveNext.</value>
  </data>
  <data name="EnvironmentDisposed" xml:space="preserve">
    <value>LocationEnvironment can only be accessed within the scope of the condition it was passed into.</value>
  </data>
  <data name="ErrorExtractingValuesForLambdaRewrite" xml:space="preserve">
    <value>An error occurred while attempting to extract the target object of type '{0}' from the method call expression '{1}'.  Note that the expression determining the object of type '{0}' must not require the runtime context.  Error: {2}</value>
  </data>
  <data name="ErrorsEncounteredWhileProcessingTree" xml:space="preserve">
    <value>The following errors were encountered while processing the workflow tree:</value>
  </data>
  <data name="ErrorTimeToPersistLessThanZero" xml:space="preserve">
    <value>The TimeToPersist value must be greater than or equal to TimeSpan.Zero. To disable, specify value equal to TimeSpan.MaxValue.</value>
  </data>
  <data name="ErrorTimeToUnloadLessThanZero" xml:space="preserve">
    <value>The TimeToUnload value must be greater than or equal to TimeSpan.Zero. To disable, specify value equal to TimeSpan.MaxValue.</value>
  </data>
  <data name="EtwAPIMaxStringCountExceeded" xml:space="preserve">
    <value>Number of string arguments passed to Etw WriteEvent has exceeded the max allowed limit of {0}.</value>
  </data>
  <data name="EtwMaxNumberArgumentsExceeded" xml:space="preserve">
    <value>Number of arguments passed to Etw WriteEvent has exceeded the max allowed limit of {0}.</value>
  </data>
  <data name="EtwRegistrationFailed" xml:space="preserve">
    <value>Etw registration failed with error code {0}.</value>
  </data>
  <data name="EtwUnhandledException" xml:space="preserve">
    <value>Unhandled exception. Exception details: {0}</value>
  </data>
  <data name="ExclusiveHandleRegisterBookmarkScopeFailed" xml:space="preserve">
    <value>RegisterBookmarkScope can only be called when there are no existing bookmarks in the scope of the corresponding ExclusiveHandle.</value>
  </data>
  <data name="ExclusiveHandleReinitializeFailed" xml:space="preserve">
    <value>Reinitialize can only be called when there are no existing bookmarks registered with this ExclusiveHandle.</value>
  </data>
  <data name="ExecuteMustBeNested" xml:space="preserve">
    <value>The persistence provider implementation of InstanceStore is invalid. It attempted to execute multiple nested commands concurrently. Only one call to InstancePersistenceContext.Execute (or BeginExecute) may be issued at a time for each call to InstanceStore.TryCommand (or BeginTryCommand). This error indicates an invalid persistence provider implementation.</value>
  </data>
  <data name="ExecuteWorkItemStart" xml:space="preserve">
    <value>Execute work item start</value>
  </data>
  <data name="ExecuteWorkItemStop" xml:space="preserve">
    <value>Execute work item stop</value>
  </data>
  <data name="ExecutionPropertyAlreadyDefined" xml:space="preserve">
    <value>A property with the name '{0}' has already been defined at this scope. To replace the current property, first remove it and then add the new property.</value>
  </data>
  <data name="ExitNoPersistBlock" xml:space="preserve">
    <value>Exiting a no persist block.</value>
  </data>
  <data name="ExpressionRequiredForConversion" xml:space="preserve">
    <value>The expression is required for conversion.</value>
  </data>
  <data name="ExtensionsCannotBeModified" xml:space="preserve">
    <value>WorkflowInstanceExtensionsManager cannot be modified once it has been associated with a WorkflowInstance.</value>
  </data>
  <data name="ExtensionsCannotBeSetByIndex" xml:space="preserve">
    <value>The extension collection does not support setting extensions by index. Please use the Add or Remove methods.</value>
  </data>
  <data name="ExtensionTypeNotSupported" xml:space="preserve">
    <value>Adding an extension of type '{0}' is not supported by WorkflowServiceHost.</value>
  </data>
  <data name="ExternalLocationsGetOnly" xml:space="preserve">
    <value>The location you are attempting to set comes from a SymbolResolver.  SymbolResolver locations are read only.</value>
  </data>
  <data name="ExtraOverloadGroupPropertiesConfigured" xml:space="preserve">
    <value>Overload group '{0}' is already configured. It is an error to have property '{1}' in overload group '{2}' also configured.</value>
  </data>
  <data name="ExtraParameter" xml:space="preserve">
    <value>Parameter '{0}' is not declared in operation '{1}' in contract '{2}'.</value>
  </data>
  <data name="ExtraReturnValue" xml:space="preserve">
    <value>Activity contains a return message while the contract contains no return value.</value>
  </data>
  <data name="FailedToCreateSecurityToken" xml:space="preserve">
    <value>Failed to create security token '{0}'.</value>
  </data>
  <data name="FailedToGetInstanceIdForControlOperation" xml:space="preserve">
    <value>Failed to get instance ID from the message for this control operation. This may be caused by contract mismatch. Please make sure that client contract matches the service endpoint contract.</value>
  </data>
  <data name="FailedToGetWorkflowIdentityForControlOperation" xml:space="preserve">
    <value>Failed to get WorkflowIdentity from the message for this control operation. This may be caused by contract mismatch. Please make sure that client contract matches the service endpoint contract.</value>
  </data>
  <data name="FailedToInitializeRequestReplyCorrelationHandle" xml:space="preserve">
    <value>The Receive activity configured with request/reply operation '{0}' failed to initialize a RequestReplyCorrelation handle. There must be an InstanceKey with RequestReplyCorrelation in the received message's CorrelationMessageProperty.</value>
  </data>
  <data name="FailedToLoadBindingInControlEndpoint" xml:space="preserve">
    <value>Failed to load binding '{0}' with binding configuration '{1}' for the standard control endpoint '{2}'.</value>
  </data>
  <data name="FailFastMessage" xml:space="preserve">
    <value>An unrecoverable error occurred. For diagnostic purposes, this English message is associated with the failure: '{0}'.</value>
  </data>
  <data name="FaultContextNotFound" xml:space="preserve">
    <value>Rethrow activity '{0}' cannot find the FaultContext set by the TryCatch activity. To resolve the issue, do not modify or remove the FaultContext from the execution properties collection.</value>
  </data>
  <data name="FaultTypeMismatch" xml:space="preserve">
    <value>Specified fault type '{0}' does not exist for operation '{1}' in contract '{2}'.</value>
  </data>
  <data name="FileVersion" xml:space="preserve">
    <value>4.6.1038.0 built by: NETFXREL2</value>
  </data>
  <data name="FinalStateCannotHaveProperty" xml:space="preserve">
    <value>Final state '{0}' must not have an {1} action.</value>
  </data>
  <data name="FinalStateCannotHaveTransition" xml:space="preserve">
    <value>Final state '{0}' must not have any outgoing transitions.</value>
  </data>
  <data name="FirstParameterDoesnotMatchTheReturnValue" xml:space="preserve">
    <value>The first parameter of type '{0}' specified in the content does not match the type '{1}' specified as the return value for operation '{2}' in contract '{3}'.</value>
  </data>
  <data name="FlowchartContainsReferences" xml:space="preserve">
    <value>Flowchart does not support Dynamic Update when it has references to imported children.</value>
  </data>
  <data name="FlowchartContainsUnconnectedNodes" xml:space="preserve">
    <value>All nodes must be connected when ValidateUnconnectedNodes is set to True before the Flowchart '{0}' can be used.</value>
  </data>
  <data name="FlowchartEmpty" xml:space="preserve">
    <value>Flowchart '{0}' - was executed with no Nodes.</value>
  </data>
  <data name="FlowchartMissingStartNode" xml:space="preserve">
    <value>Flowchart '{0}' does not have a StartNode.</value>
  </data>
  <data name="FlowchartNextNull" xml:space="preserve">
    <value>Flowchart '{0}'/FlowStep - Next node is null. Flowchart execution will end.</value>
  </data>
  <data name="FlowchartStart" xml:space="preserve">
    <value>Flowchart '{0}' - Start has been scheduled.</value>
  </data>
  <data name="FlowchartSwitchCase" xml:space="preserve">
    <value>Flowchart '{0}'/FlowSwitch - Case '{1}' was selected.</value>
  </data>
  <data name="FlowchartSwitchCaseNotFound" xml:space="preserve">
    <value>Flowchart '{0}'/FlowSwitch - could find neither a Case activity nor a Default Case matching the Expression result. Flowchart execution will end.</value>
  </data>
  <data name="FlowchartSwitchDefault" xml:space="preserve">
    <value>Flowchart '{0}'/FlowSwitch - Default Case was selected.</value>
  </data>
  <data name="FlowDecisionRequiresCondition" xml:space="preserve">
    <value>Condition must be set before the FlowDecision in Flowchart '{0}' can be used.</value>
  </data>
  <data name="FlowedTransactionDifferentFromAmbient" xml:space="preserve">
    <value>The flowed in transaction was different from the ambient transaction.</value>
  </data>
  <data name="FlowNodeCannotBeShared" xml:space="preserve">
    <value>FlowNode cannot be shared across different Flowcharts. It is already in Flowchart '{0}' and cannot be used in Flowchart '{1}'.</value>
  </data>
  <data name="FlowNodeLockedForRuntime" xml:space="preserve">
    <value>FlowNode in Flowchart '{0}' has already been opened and cannot be modified. A FlowNode can only be modified at design time.</value>
  </data>
  <data name="FlowSwitchRequiresExpression" xml:space="preserve">
    <value>Expression must be set before the FlowSwitch in Flowchart '{0}' can be used.</value>
  </data>
  <data name="ForEachRequiresNonNullValues" xml:space="preserve">
    <value>Values must be bound to a non-null expression before ForEach activity '{0}' can be used.</value>
  </data>
  <data name="FoundProcessingError" xml:space="preserve">
    <value>Command failed: {0}</value>
  </data>
  <data name="GeneratedAndProvidedMapConflict" xml:space="preserve">
    <value>There are conflicting changes to this activity from its provided implementation map and the current update. The activity attempted to save original values in both maps.</value>
  </data>
  <data name="GeneratedAndProvidedMapConflictRuntime" xml:space="preserve">
    <value>There are conflicting changes to this activity from an implementation update and a larger workflow update. The activity attempted to save original values in both updates.</value>
  </data>
  <data name="GenericInstanceCommand" xml:space="preserve">
    <value>The execution of the InstancePersistenceCommand named {0} was interrupted by an error.</value>
  </data>
  <data name="GenericInstanceCommandNull" xml:space="preserve">
    <value>The execution of an InstancePersistenceCommand was interrupted by an error.</value>
  </data>
  <data name="GetLocationOnPublicAccessReference" xml:space="preserve">
    <value>Activity '{0}' cannot call GetLocation on this public location reference because it was created CodeActivityPublicEnvironmentAccessor.TryGetAccessToPublicLocation. To read or write the value, use ActivityContext.GetValue or SetValue. To get direct access to the location, declare it using CodeActivityPublicEnvironmentAccessor.TryGetReferenceToPublicLocation.</value>
  </data>
  <data name="GetParameterTypeMismatch" xml:space="preserve">
    <value>The parameter at index {0} requested from the InstancePersistenceAction named {1} was requested using an incorrect generic type argument. When calling GetParameter&lt;T&gt;, the type specified for T must match the documented type for the parameter.</value>
  </data>
  <data name="GetRunnableRequiresOwner" xml:space="preserve">
    <value>Before calling this method, specify the supported definition identities for this workflow host by calling WorkflowApplication.CreateDefaultInstanceOwner.</value>
  </data>
  <data name="GuidCannotBeEmpty" xml:space="preserve">
    <value>The argument must be a non-zero Guid.</value>
  </data>
  <data name="HandledException" xml:space="preserve">
    <value>Handling an exception.  Exception details: {0}</value>
  </data>
  <data name="HandledExceptionError" xml:space="preserve">
    <value>Handling an exception. Exception details: {0}</value>
  </data>
  <data name="HandledExceptionVerbose" xml:space="preserve">
    <value>Handling an exception  Exception details: {0}</value>
  </data>
  <data name="HandledExceptionWarning" xml:space="preserve">
    <value>Handling an exception. Exception details: {0}</value>
  </data>
  <data name="HandleFreed" xml:space="preserve">
    <value>The execution of InstancePersistenceCommands has been canceled because the InstanceHandle was freed.</value>
  </data>
  <data name="HandleFreedBeforeInitialized" xml:space="preserve">
    <value>The Free method on InstanceHandle may not be called while OnNewInstanceHandle is executing for that handle.</value>
  </data>
  <data name="HandleFreedInDirectory" xml:space="preserve">
    <value>The execution of InstancePersistenceCommands has been canceled because the InstanceHandle was freed.</value>
  </data>
  <data name="HandleInitializationContextDisposed" xml:space="preserve">
    <value>A HandleInitializationContext can only be accessed within the scope of the function it was passed into.</value>
  </data>
  <data name="HandleNotInitialized" xml:space="preserve">
    <value>The handle is not initialized.  Handles must be created and initialized by the runtime and are only valid inside the scope in which they are declared.</value>
  </data>
  <data name="HasExecutingChildrenNoPersist" xml:space="preserve">
    <value>No persistence blocks can only be setup when there are no executing children.</value>
  </data>
  <data name="HostIdDoesNotMatchInstance" xml:space="preserve">
    <value>The instance ID provided by the workflow host, {0}, doesn't match the ID stored in the serialized instance, {1}. A host may not deserialize an instance using a different ID than when the instance was serialized.</value>
  </data>
  <data name="HostLockExpired" xml:space="preserve">
    <value>The SqlWorkflowInstanceStore lock has expired. This could have occurred because the SQL Server is busy or because the connection was temporarily lost.</value>
  </data>
  <data name="HostLockNotFound" xml:space="preserve">
    <value>The SqlWorkflowInstanceStore lock does not exist in the database. This could have occurred because the SQL Server is busy or because the connection was temporarily lost.</value>
  </data>
  <data name="IdentityControlCharacter" xml:space="preserve">
    <value>WorkflowIdentity.Name and Package cannot contain control characters (Unicode character category Cc).</value>
  </data>
  <data name="IdentityNameSemicolon" xml:space="preserve">
    <value>WorkflowIdentity.Name cannot contain the semi-colon ';' character.</value>
  </data>
  <data name="IdentityNotSupportedWithActivation" xml:space="preserve">
    <value>SqlWorkflowInstanceStore does not support activation on InstanceOwners that specify DefinitionIdentities.</value>
  </data>
  <data name="IdentityWhitespace" xml:space="preserve">
    <value>WorkflowIdentity.Name and Package cannot contain leading or trailing white space (Unicode character categories Zl, Zp, or Zs).</value>
  </data>
  <data name="IdNotFoundInWorkflow" xml:space="preserve">
    <value>The provided ID '{0}' could not be found in the workflow.  Check the workflow for validation errors which could be generating subtrees which cannot be traversed.</value>
  </data>
  <data name="ImplementationVersionMismatch" xml:space="preserve">
    <value>The ImplementationVersion ('{0}') of the loaded activity instance does not match the ImplementationVersion ('{1}') of the provided activity ('{2}'). The instance can be updated by applying an implementation map.</value>
  </data>
  <data name="InArgumentBound" xml:space="preserve">
    <value>In argument '{0}' on Activity '{1}', DisplayName: '{2}', InstanceId: '{3}' has been bound with value: {4}.</value>
  </data>
  <data name="IncompatibleArgumentType" xml:space="preserve">
    <value>An argument of the wrong type was passed to this method. This method expected an argument of type {0}, but it was passed an argument of type {1}.</value>
  </data>
  <data name="IncompatibleTypeForMultidimensionalArrayItemReference" xml:space="preserve">
    <value>The generic type '{0}' is not compatible with the real item type '{1}' of Array operand in MultidimensionalArrayItemReference.</value>
  </data>
  <data name="IncorrectIndexForArgument" xml:space="preserve">
    <value>The index for the return argument is incorrect in the '{0}' collection. The position specified is '{1}' whereas the expected position is '{2}'.</value>
  </data>
  <data name="IncorrectValueType" xml:space="preserve">
    <value>A value of the wrong type was retrieved from the instance store.  A value of type {0} was expected, but a value of type {1} was encountered instead.</value>
  </data>
  <data name="IndexOutOfBounds" xml:space="preserve">
    <value>Index value {0} is equal to or greater than {1}, length of the array.</value>
  </data>
  <data name="IndicesAreNeeded" xml:space="preserve">
    <value>At least one index value must be supplied for {0} activity '{1}'.</value>
  </data>
  <data name="InferredContractDescription" xml:space="preserve">
    <value>ContractDescription with Name='{0}' and Namespace='{1}' has been inferred from WorkflowService.</value>
  </data>
  <data name="InferredOperationDescription" xml:space="preserve">
    <value>OperationDescription with Name='{0}' in contract '{1}' has been inferred from WorkflowService. IsOneWay={2}.</value>
  </data>
  <data name="InitializationIncomplete" xml:space="preserve">
    <value>The activity instance's initialization was incomplete.  This error occurs when a variable default or argument expression faults and the exception handler allows execution to continue.</value>
  </data>
  <data name="InitializeCorrelationRequiresWorkflowServiceHost" xml:space="preserve">
    <value>Activity '{0}' must be used in a WorkflowServiceHost.</value>
  </data>
  <data name="InitialMetadataCannotBeDeleted" xml:space="preserve">
    <value>The persistence value named {0} is being provided as an initial metadata value, so it must have a valid InstanceValue other than InstanceValue.DeletedValue.</value>
  </data>
  <data name="InitialStateCannotBeFinalState" xml:space="preserve">
    <value>Initial state '{0}' must not also be a final state.</value>
  </data>
  <data name="InitialStateNotInStatesCollection" xml:space="preserve">
    <value>Initial state '{0}' must be added to 'States' collection of a state machine.</value>
  </data>
  <data name="InlinedLocationReferenceOnlyAccessibleByOwner" xml:space="preserve">
    <value>Activity '{0}' cannot access this public location reference because it is only valid for activity '{1}'.  Only the activity which obtained the public location reference is allowed to use it.</value>
  </data>
  <data name="InputParametersCountMismatch" xml:space="preserve">
    <value>The supplied input parameter count {0} does not match the expected count of {1}.</value>
  </data>
  <data name="InputParametersMissing" xml:space="preserve">
    <value>Expected input parameter named '{0}' was not found.</value>
  </data>
  <data name="InputParametersTypeMismatch" xml:space="preserve">
    <value>Expected an input parameter value of type '{0}' for parameter named '{1}'.</value>
  </data>
  <data name="InstanceCollisionDefault" xml:space="preserve">
    <value>The execution of an InstancePersistenceCommand was interrupted because the instance has already been persisted to the instance store.</value>
  </data>
  <data name="InstanceCollisionSpecific" xml:space="preserve">
    <value>The execution of an InstancePersistenceCommand was interrupted because the instance '{0}' has already been persisted to the instance store.</value>
  </data>
  <data name="InstanceCompleteDefault" xml:space="preserve">
    <value>The execution of an InstancePersistenceCommand was interrupted because the instance is already complete.</value>
  </data>
  <data name="InstanceCompleteSpecific" xml:space="preserve">
    <value>The execution of an InstancePersistenceCommand was interrupted because the instance '{0}' is already complete.</value>
  </data>
  <data name="InstanceHandleConflictDefault" xml:space="preserve">
    <value>The execution of an InstancePersistenceCommand was interrupted because another valid InstanceHandle holds a lock on the instance, indicating that a non-stale copy of the instance is already loaded. The loaded copy of the instance and its associated InstanceHandle should be used or unloaded.</value>
  </data>
  <data name="InstanceHandleConflictSpecific" xml:space="preserve">
    <value>The execution of an InstancePersistenceCommand was interrupted because another valid InstanceHandle holds a lock on instance '{0}', indicating that a non-stale copy of the instance is already loaded. The loaded copy of the instance and its associated InstanceHandle should be used or unloaded.</value>
  </data>
  <data name="InstanceKeyMetadataChangesNotSupported" xml:space="preserve">
    <value>SqlWorkflowInstanceStore does not support altering key metadata for already existing keys.</value>
  </data>
  <data name="InstanceKeyRequiresValidGuid" xml:space="preserve">
    <value>An InstanceKey cannot be created with an all-zero value, such as Guid.Empty. Use InstanceKey.InvalidKey to obtain an InstanceKey with an all-zero value.</value>
  </data>
  <data name="InstanceLockedUnderTransaction" xml:space="preserve">
    <value>Attempt to perform the control operation '{0}' on service instance with the identifier '{1}' failed. There is an active transacted control operation in progress.</value>
  </data>
  <data name="InstanceLockLostDefault" xml:space="preserve">
    <value>The execution of an InstancePersistenceCommand was interrupted because the instance has become unlocked. This error indicates that the in-memory copy of the instance has become stale and should be discarded, along with the InstanceHandle.</value>
  </data>
  <data name="InstanceLockLostSpecific" xml:space="preserve">
    <value>The execution of an InstancePersistenceCommand was interrupted because the instance '{0}' has become unlocked. This error indicates that the in-memory copy of the instance has become stale and should be discarded, along with the InstanceHandle.</value>
  </data>
  <data name="InstanceLocksRecoveryError" xml:space="preserve">
    <value>Recovering instance locks failed due to the following exception</value>
  </data>
  <data name="InstanceMethodCallRequiresTargetObject" xml:space="preserve">
    <value>The instance method call requires a target object.</value>
  </data>
  <data name="InstanceMustBePaused" xml:space="preserve">
    <value>The instance must be paused to perform this operation.</value>
  </data>
  <data name="InstanceMustNotBePaused" xml:space="preserve">
    <value>The instance must not be paused to perform this operation.</value>
  </data>
  <data name="InstanceMustNotBeSuspended" xml:space="preserve">
    <value>The operation could not be performed because the instance is in suspended state.</value>
  </data>
  <data name="InstanceNotReadyDefault" xml:space="preserve">
    <value>The execution of an InstancePersistenceCommand was interrupted because the instance has not yet been persisted to the instance store.</value>
  </data>
  <data name="InstanceNotReadySpecific" xml:space="preserve">
    <value>The execution of an InstancePersistenceCommand was interrupted because the instance '{0}' has not yet been persisted to the instance store.</value>
  </data>
  <data name="InstanceOperationRequiresInstance" xml:space="preserve">
    <value>The persistence provider implementation of InstanceStore in use is invalid. It reported performing an operation which requires an instance, but no instance is bound to the operation.</value>
  </data>
  <data name="InstanceOperationRequiresLock" xml:space="preserve">
    <value>The persistence provider implementation of InstanceStore in use is invalid. It reported performing an operation which requires the lock on an instance to be held, but the lock is not held.</value>
  </data>
  <data name="InstanceOperationRequiresNotCompleted" xml:space="preserve">
    <value>The persistence provider implementation of InstanceStore in use is invalid. It reported performing an operation which requires the instance to be in a state other than InstanceState.Completed, but the instance is in that state.</value>
  </data>
  <data name="InstanceOperationRequiresNotUninitialized" xml:space="preserve">
    <value>The persistence provider implementation of InstanceStore in use is invalid. It reported performing an operation which requires the instance to be in a state other than InstanceState.Uninitialized, but the instance is in that state.</value>
  </data>
  <data name="InstanceOperationRequiresOwner" xml:space="preserve">
    <value>The persistence provider implementation of InstanceStore in use is invalid. It reported performing an operation which requires an instance owner, but no owner is bound to the operation.</value>
  </data>
  <data name="InstanceOwnerDefault" xml:space="preserve">
    <value>The execution of an InstancePersistenceCommand was interrupted because the instance owner registration has become invalid. This error indicates that the in-memory copy of all instances locked by this owner have become stale and should be discarded, along with the InstanceHandles. Typically, this error is best handled by restarting the host.</value>
  </data>
  <data name="InstanceOwnerSpecific" xml:space="preserve">
    <value>The execution of an InstancePersistenceCommand was interrupted because the instance owner registration for owner ID '{0}' has become invalid. This error indicates that the in-memory copy of all instances locked by this owner have become stale and should be discarded, along with the InstanceHandles. Typically, this error is best handled by restarting the host.</value>
  </data>
  <data name="InstanceRequired" xml:space="preserve">
    <value>The instance persistence system is unable to process an invalid InstancePersistenceCommand. The command requires an instance, but no instance was bound to the InstanceHandle.</value>
  </data>
  <data name="InstanceStoreBoundSameVersionTwice" xml:space="preserve">
    <value>The persistence provider implementation of InstanceStore in use is invalid. It reported acquiring and committing the same version of a lock on the same instance twice. Each time a lock is acquired on an instance, the lock version must be incremented; or else zero should always be reported as the lock version. When a provider detects an attempt by an instance owner to lock an instance already locked by itself, the provider should call BindReclaimedLock, BeginBindReclaimedLock, or CreateBeginBindReclaimedLockException instead of BindAcquiredLock.</value>
  </data>
  <data name="InstanceStoreDoesntMatchWorkflowApplication" xml:space="preserve">
    <value>The instance is configured with a different InstanceStore than this WorkflowApplication.</value>
  </data>
  <data name="InstanceStoreFailed" xml:space="preserve">
    <value>The implementation of InstanceStore threw an InstancePersistenceException.  The InstancePersistenceException is the inner exception.</value>
  </data>
  <data name="InstanceStoreHasDefaultOwner" xml:space="preserve">
    <value>This InstanceStore already has a DefaultInstanceOwner.</value>
  </data>
  <data name="InstanceStoreReadOnly" xml:space="preserve">
    <value>The SqlWorkflowInstanceStore is read only can cannot be configured further. All configuration of SqlWorkflowInstanceStore must happen before the first InstanceHandle is created.</value>
  </data>
  <data name="InstanceStoreRequiredToPersist" xml:space="preserve">
    <value>Only WorkflowApplications which have been configured with an InstanceStore can be persisted or unloaded.</value>
  </data>
  <data name="InstanceSuspended" xml:space="preserve">
    <value>Service instance with the identifier '{1}' is currently in 'Suspended' state. Attempt to perform control operation '{0}' failed.</value>
  </data>
  <data name="InsufficientArraySize" xml:space="preserve">
    <value>Array size is {0} and is insufficient to hold results of the operation.</value>
  </data>
  <data name="InternalCacheMetadataStart" xml:space="preserve">
    <value>InternalCacheMetadata started on activity '{0}'.</value>
  </data>
  <data name="InternalCacheMetadataStop" xml:space="preserve">
    <value>InternalCacheMetadata stopped on activity '{0}'.</value>
  </data>
  <data name="InternalConstraintException" xml:space="preserve">
    <value>Internal constraint exception while running constraint with name '{0}' against activity of type {1} with name '{2}'.  Exception was: {3}</value>
  </data>
  <data name="InternalName" xml:space="preserve">
    <value>System.ServiceModel.Internals.dll</value>
  </data>
  <data name="InternalServerError" xml:space="preserve">
    <value>The server was unable to process the request due to an internal error. For more information about the error, either turn on IncludeExceptionDetailInFaults (either from ServiceBehaviorAttribute or from the &lt;serviceDebug&gt; configuration behavior) on the server in order to send the exception information back to the client, or turn on tracing as per the Microsoft .NET Framework 4.0 SDK documentation and inspect the server trace logs.</value>
  </data>
  <data name="InvalidActivityIdFormat" xml:space="preserve">
    <value>The provided activity ID was in an invalid format.  It must be a dot separated list of integer values such as '1.12.3' with no leading or trailing dots.</value>
  </data>
  <data name="InvalidActivityToBlockUpdate" xml:space="preserve">
    <value>Activity '{0}' in DynamicUpdateMapBuilder.DisallowUpdateInside is not a public member of DynamicUpdateMapBuilder.UpdatedWorkflowDefinition. Please make sure this activity is part of the updated workflow definition. If this activity has been removed as part of the update, you do not need to block update explicitly; update is automatically blocked if a removed activity is running.</value>
  </data>
  <data name="InvalidActivityToBlockUpdateServices" xml:space="preserve">
    <value>Activity '{0}' is not a public member of updatedWorkflowDefinition. Please make sure this activity is part of the updated workflow definition. If this activity has been removed as part of the update, you do not need to block update explicitly; update is automatically blocked if a removed activity is running.</value>
  </data>
  <data name="InvalidArgumentExpression" xml:space="preserve">
    <value>The number {0} argument expression of type '{1}' is not valid.</value>
  </data>
  <data name="InvalidAsyncBeginMethodSignature" xml:space="preserve">
    <value>Invalid async Begin method signature for method {0} in type {1}. Your begin method must take an AsyncCallback and an object as the last two arguments and return an IAsyncResult.</value>
  </data>
  <data name="InvalidAsyncCancelMethodSignature" xml:space="preserve">
    <value>Invalid async Cancel method signature for method {0} in type {1}. Your cancel method must take no arguments and return void.</value>
  </data>
  <data name="InvalidAsyncEndMethodSignature" xml:space="preserve">
    <value>Invalid async End method signature for method {0} in type {1}. Your end method must take an IAsyncResult as the last argument. </value>
  </data>
  <data name="InvalidAsyncResult" xml:space="preserve">
    <value>An incorrect IAsyncResult was provided to an 'End' method. The IAsyncResult object passed to 'End' must be the one returned from the matching 'Begin' or passed to the callback provided to 'Begin'.</value>
  </data>
  <data name="InvalidAsyncResultImplementation" xml:space="preserve">
    <value>An incorrect implementation of the IAsyncResult interface may be returning incorrect values from the CompletedSynchronously property or calling the AsyncCallback more than once. The type {0} could be the incorrect implementation.</value>
  </data>
  <data name="InvalidAsyncResultImplementationGeneric" xml:space="preserve">
    <value>An incorrect implementation of the IAsyncResult interface may be returning incorrect values from the CompletedSynchronously property or calling the AsyncCallback more than once.</value>
  </data>
  <data name="InvalidCallbackState" xml:space="preserve">
    <value>A valid {0} data must be passed for the callback state object.</value>
  </data>
  <data name="InvalidCompensateActivityUsage" xml:space="preserve">
    <value>Compensate activity '{0}' with an unset 'Target' InArgument can only be used within the context of a Compensation/Confirmation/Cancellation handler.</value>
  </data>
  <data name="InvalidCompensationToken" xml:space="preserve">
    <value>The Variable bound to the 'Target' InArgument has a null value. The 'Target' InArgument should be set using a valid CompensationToken obtained from a CompensableActivity. Otherwise, if default Compensation/Confirmation usage is desired, do not set the 'Target' InArgument and use the '{0}' activity within the context of a Compensation/Confirmation/Cancellation handler.</value>
  </data>
  <data name="InvalidConfirmActivityUsage" xml:space="preserve">
    <value>Confirm activity '{0}' with an unset 'Target' InArgument can only be used within the context of a Compensation/Confirmation/Cancellation handler.</value>
  </data>
  <data name="InvalidDataFromReceiveBookmarkState" xml:space="preserve">
    <value>A valid MessageContext could not be obtained when the bookmark for receive operation '{0}' was resumed.</value>
  </data>
  <data name="InvalidDataFromSendBookmarkState" xml:space="preserve">
    <value>A valid CorrelationMessageProperty or Fault could not be obtained when the bookmark for send operation '{0}' was resumed.</value>
  </data>
  <data name="InvalidDirectionForArgument" xml:space="preserve">
    <value>The argument direction for the argument in collection '{0}' at position {1} is incorrect. The direction specified is '{2}' whereas the expected direction is '{3}'.</value>
  </data>
  <data name="InvalidDynamicActivityProperty" xml:space="preserve">
    <value>This property descriptor is invalid. The provided component does not contain a property corresponding to this descriptor ({0}).</value>
  </data>
  <data name="InvalidEvaluationOrderValue" xml:space="preserve">
    <value>EvaluationOrder value is invalid. Evaluation order values must be zero based, increasing in order and unique. Use -1 to indicate that evaluation order is not set.</value>
  </data>
  <data name="InvalidExecutionCallback" xml:space="preserve">
    <value>'{0}' is not a valid activity execution callback. The execution callback used by '{1}' must be an instance method on '{1}'.</value>
  </data>
  <data name="InvalidExpressionForLocation" xml:space="preserve">
    <value>A Location cannot be generated from an Expression of type '{0}'.</value>
  </data>
  <data name="InvalidExpressionProperty" xml:space="preserve">
    <value>The 'Expression' property of type '{0}' is invalid.</value>
  </data>
  <data name="InvalidFileName" xml:space="preserve">
    <value>An invalid fileName was specified for activity {0}</value>
  </data>
  <data name="InvalidGenericTypeInfo" xml:space="preserve">
    <value>The type '{0}' contains some invalid generic type information.</value>
  </data>
  <data name="InvalidIdleAction" xml:space="preserve">
    <value>The PersistableIdleAction returned was out of range.  It must be either None, Unload, or Persist.</value>
  </data>
  <data name="InvalidImplementationAsWorkflowRoot" xml:space="preserve">
    <value>In order for an implementation map to be directly applied to a workflow instance, the root of the definition must not have any public/imported children or public/imported delegates.</value>
  </data>
  <data name="InvalidImplementationAsWorkflowRootForRuntimeState" xml:space="preserve">
    <value>In order for an implementation map to be directly applied to a workflow instance, the root of the definition must not have any public children. The instance currently has one or more public children running.</value>
  </data>
  <data name="InvalidImplementationAsWorkflowRootForRuntimeStateBecauseArgumentsChanged" xml:space="preserve">
    <value>In order for an implementation map to be directly applied to a workflow instance, the implementation map must indicate that there is no change to arguments. The implementation map indicates that arguments of the activity definition have changed.</value>
  </data>
  <data name="InvalidImplementationMap" xml:space="preserve">
    <value>The provided implementation map does not match the activity's definition. Please ensure that the version of the activity referenced by the updated workflow is the same version targeted by the provided map.]D;]A;    ]D;]A;Troubleshooting details: Member count in map: '{0}'; member count in definition: '{1}'.</value>
  </data>
  <data name="InvalidImplementationMapAssociation" xml:space="preserve">
    <value>The implementation map provided for activity '{0}' via DynamicUpdateMapBuilder.LookupImplementationMap cannot be used because the activity does not have any implementation children. Please verify that SetImplementationMap was called on the right activity.</value>
  </data>
  <data name="InvalidImplementationMapAssociationServices" xml:space="preserve">
    <value>The implementation map provided for activity '{0}' via DynamicUpdateServices.SetImplementationMap cannot be used because the activity does not have any implementation children. Please verify that SetImplementationMap was called on the right activity.</value>
  </data>
  <data name="InvalidImplementationMapRuntime" xml:space="preserve">
    <value>When building the update map, the wrong implementation map was provided for this activity.</value>
  </data>
  <data name="InvalidInstanceId" xml:space="preserve">
    <value>An invalid instance ID of all zeroes (Guid.Empty) was used to load an instance.</value>
  </data>
  <data name="InvalidInstanceState" xml:space="preserve">
    <value>The persistence provider implementation of InstanceStore in use is invalid. It reported loading an instance with an invalid InstanceState value.</value>
  </data>
  <data name="InvalidKey" xml:space="preserve">
    <value>An invalid key was used to load or create an instance.</value>
  </data>
  <data name="InvalidKeyArgument" xml:space="preserve">
    <value>An invalid key of all zeroes, such as Guid.Empty, was passed as an argument.</value>
  </data>
  <data name="InvalidLocationExpression" xml:space="preserve">
    <value>Invalid location expression: expected "[...]5D;".</value>
  </data>
  <data name="InvalidLockRenewalPeriod" xml:space="preserve">
    <value>The supplied lock renewal period {0} is less than the minimum lock renewal period {1}.</value>
  </data>
  <data name="InvalidLockToken" xml:space="preserve">
    <value>The instanceVersion passed to InstancePersistenceContext.BindAcquiredLock must be zero if the persistence provider doesn't implement lock versioning, or greater than zero if it does.</value>
  </data>
  <data name="InvalidLValueExpression" xml:space="preserve">
    <value>Invalid L-value expression.</value>
  </data>
  <data name="InvalidMergeMap" xml:space="preserve">
    <value>The map at position '{0}' (zero-based) for Activity ID '{1}' does not match the map(s) that preceded it. Please ensure that all maps represent successive updates to the same workflow definition.]D;]A;    ]D;]A;Troubleshooting details: {2}</value>
  </data>
  <data name="InvalidMergeMapArgumentCount" xml:space="preserve">
    <value>Expected Original Argument Count = '{0}', Actual = '{1}'.</value>
  </data>
  <data name="InvalidMergeMapArgumentsChanged" xml:space="preserve">
    <value>Unexpected change in arguments (name, direction, type, or order).</value>
  </data>
  <data name="InvalidMergeMapEnvironmentCount" xml:space="preserve">
    <value>Expected Original Argument Count = '{0}', Public Variable Count = '{1}', Private Variable Count = '{2}'. Actual Original Argument Count = '{3}', Public Variable Count = '{4}', Private Variable Count = '{5}'.</value>
  </data>
  <data name="InvalidMergeMapForImplementation" xml:space="preserve">
    <value>Expected ForImplementation = '{0}', Actual = '{1}'.</value>
  </data>
  <data name="InvalidMergeMapMemberCount" xml:space="preserve">
    <value>Expected Original Member Count = '{0}', Actual = '{1}'.</value>
  </data>
  <data name="InvalidMetadataValue" xml:space="preserve">
    <value>Specified value for metadata property '{0}' must be of type {1}.</value>
  </data>
  <data name="InvalidNullAsyncResult" xml:space="preserve">
    <value>A null value was returned from an async 'Begin' method or passed to an AsyncCallback. Async 'Begin' implementations must return a non-null IAsyncResult and pass the same IAsyncResult object as the parameter to the AsyncCallback.</value>
  </data>
  <data name="InvalidOriginalWorkflowDefinitionForImplementationMapCreation" xml:space="preserve">
    <value>The OriginalWorkflowDefinition provided to the map builder is invalid for implementation map creation because it does not have any implementation children.</value>
  </data>
  <data name="InvalidParameterInfo" xml:space="preserve">
    <value>The number {0} parameter information is invalid in type of '{1}'.</value>
  </data>
  <data name="InvalidPrepareForRuntimeValidationSettings" xml:space="preserve">
    <value>A workflow cannot be prepared for runtime if any of SingleLevel, SkipValidatingRootConfiguration or OnlyUseAdditionalConstraints is set on ValidationSettings.</value>
  </data>
  <data name="InvalidProperty" xml:space="preserve">
    <value>The property ({0}) is either invalid or not defined.</value>
  </data>
  <data name="InvalidPropertyType" xml:space="preserve">
    <value>The type ‘{0}’ of property ‘{1}’ could not be resolved.</value>
  </data>
  <data name="InvalidReceiveStateForDU" xml:space="preserve">
    <value>The Receive is in a state in which instance update is not supported.  Update can be made only when the Receive is waiting for a request message on the server side.</value>
  </data>
  <data name="InvalidRootMergeMap" xml:space="preserve">
    <value>The root map at position '{0}' (zero-based) does not match the map(s) that preceded it. Please ensure that all maps represent successive updates to the same workflow definition.]D;]A;    ]D;]A;Troubleshooting details: {1}</value>
  </data>
  <data name="InvalidRunnableInstancesDetectionPeriod" xml:space="preserve">
    <value>The supplied runnable instances detection period {0} is less than the minimum period allowed {1}.</value>
  </data>
  <data name="InvalidRuntimeState" xml:space="preserve">
    <value>The value supplied was not valid runtime state.</value>
  </data>
  <data name="InvalidSemaphoreExit" xml:space="preserve">
    <value>Object synchronization method was called from an unsynchronized block of code.</value>
  </data>
  <data name="InvalidServiceImplementation" xml:space="preserve">
    <value>WorkflowServiceHost requires that the serviceImplementation provided is an Activity or a WorkflowService.</value>
  </data>
  <data name="InvalidSourceLocationColumn" xml:space="preserve">
    <value>Column number should be greater than 0 (1-based).  {0} = {1} is invalid.</value>
  </data>
  <data name="InvalidSourceLocationLineNumber" xml:space="preserve">
    <value>Line number should be greater than 0 (1-based). {0} = {1} is invalid.</value>
  </data>
  <data name="InvalidStateForAsyncCallback" xml:space="preserve">
    <value>The IAsyncResult passed into the async callback does not have a valid AsyncState.</value>
  </data>
  <data name="InvalidStateInAsyncResult" xml:space="preserve">
    <value>The async result state context, which was provided, in invalid.</value>
  </data>
  <data name="InvalidTypeConverterUsage" xml:space="preserve">
    <value>Invalid TypeConverter usage.</value>
  </data>
  <data name="InvalidTypeForArgument" xml:space="preserve">
    <value>The type specified for the argument in collection '{0}' at position {1} does not match the expected type. The type specified is '{2}' and the expected type is '{3}'.</value>
  </data>
  <data name="InvalidUnhandledExceptionAction" xml:space="preserve">
    <value>The UnhandledExceptionAction returned was out of range.  It must be either Abort, Cancel, or Terminate.</value>
  </data>
  <data name="InvalidUpdatedWorkflowDefinitionForImplementationMapCreation" xml:space="preserve">
    <value>The UpdatedWorkflowDefinition provided to the map builder is invalid for implementation map creation because it does not have any implementation children.</value>
  </data>
  <data name="InvalidUpdateMap" xml:space="preserve">
    <value>The update map does not match the workflow definition. Please make sure that this is the correct map for this definition, and that the serialized map has not been manually altered.]D;]A;    ]D;]A;Troubleshooting details: {0}</value>
  </data>
  <data name="InvalidVisualBasicSettingsValue" xml:space="preserve">
    <value>The Settings property has invalid value. Set the Settings property to either an empty string or "Assembly references and imported namespaces serialized as XML namespaces" string.</value>
  </data>
  <data name="InvalidXamlMember" xml:space="preserve">
    <value>'{0}' is not a valid identifier in XAML.</value>
  </data>
  <data name="InvokedMethodThrewException" xml:space="preserve">
    <value>An exception was thrown in the method called by the activity '{0}'. {1}</value>
  </data>
  <data name="InvokeMethodDoesNotUseAsyncPattern" xml:space="preserve">
    <value>InvokeMethod '{0}' - method does not use asynchronous pattern.</value>
  </data>
  <data name="InvokeMethodIsNotStatic" xml:space="preserve">
    <value>InvokeMethod '{0}' - method is not Static.</value>
  </data>
  <data name="InvokeMethodIsStatic" xml:space="preserve">
    <value>InvokeMethod '{0}' - method is Static.</value>
  </data>
  <data name="InvokeMethodUseAsyncPattern" xml:space="preserve">
    <value>InvokeMethod '{0}' - method uses asynchronous pattern of '{1}' and '{2}'.</value>
  </data>
  <data name="IsolationLevelValidation" xml:space="preserve">
    <value>The IsolationLevel of a nested TransactionScope activity must be equal to that of its parent.</value>
  </data>
  <data name="ITextExpressionParameterMustBeActivity" xml:space="preserve">
    <value>'expression' parameter must be of type Activity.</value>
  </data>
  <data name="KeyAlreadyAssociated" xml:space="preserve">
    <value>The persistence provider implementation of InstanceStore in use is invalid. It reported associating a key to an instance which already had the key associated to it.</value>
  </data>
  <data name="KeyAlreadyCompleted" xml:space="preserve">
    <value>The persistence provider implementation of InstanceStore in use is invalid. It reported completing a key which was already completed.</value>
  </data>
  <data name="KeyAlreadyUnassociated" xml:space="preserve">
    <value>The persistence provider implementation of InstanceStore in use is invalid. It reported disassociating a key which was associated to the present instance nor completed.</value>
  </data>
  <data name="KeyCollectionUpdatesNotAllowed" xml:space="preserve">
    <value>Mutating a key collection derived from a dictionary is not allowed.</value>
  </data>
  <data name="KeyCollisionDefault" xml:space="preserve">
    <value>The execution of an InstancePersistenceCommand was interrupted by a key collision.</value>
  </data>
  <data name="KeyCollisionSpecific" xml:space="preserve">
    <value>The execution of an InstancePersistenceCommand was interrupted by a key collision. The instance key with value '{1}' could not be associated to instance '{0}' because it is already associated to a different instance, '{2}'.</value>
  </data>
  <data name="KeyCollisionSpecificKeyOnly" xml:space="preserve">
    <value>The execution of an InstancePersistenceCommand was interrupted by a key collision. The instance key with value '{0}' could not be associated to the instance because it is already associated to a different instance.</value>
  </data>
  <data name="KeyCompleteDefault" xml:space="preserve">
    <value>The execution of an InstancePersistenceCommand was interrupted because the instance key has already been completed.</value>
  </data>
  <data name="KeyCompleteSpecific" xml:space="preserve">
    <value>The execution of an InstancePersistenceCommand was interrupted because the instance key '{0}' has already been completed.</value>
  </data>
  <data name="KeyNotAssociated" xml:space="preserve">
    <value>The persistence provider implementation of InstanceStore in use is invalid. It reported completing or modifying a key which is not associated to the present instance.</value>
  </data>
  <data name="KeyNotCompleted" xml:space="preserve">
    <value>The persistence provider implementation of InstanceStore in use is invalid. It reported disassociating a key which was not yet completed.</value>
  </data>
  <data name="KeyNotFoundInDictionary" xml:space="preserve">
    <value>The given key was not present in the dictionary.</value>
  </data>
  <data name="KeyNotReadyDefault" xml:space="preserve">
    <value>The execution of an InstancePersistenceCommand was interrupted because the instance key was not associated to an instance. This can occur because the instance or key has been cleaned up, or because the key is invalid. The key may be invalid if the message it was generated from was sent at the wrong time or contained incorrect correlation data.</value>
  </data>
  <data name="KeyNotReadySpecific" xml:space="preserve">
    <value>The execution of an InstancePersistenceCommand was interrupted because the instance key '{0}' was not associated to an instance. This can occur because the instance or key has been cleaned up, or because the key is invalid. The key may be invalid if the message it was generated from was sent at the wrong time or contained incorrect correlation data.</value>
  </data>
  <data name="LambdaExpressionReturnTypeInvalid" xml:space="preserve">
    <value>The return type of the provided Lambda Expression should not be null or void.</value>
  </data>
  <data name="LambdaExpressionTypeRequired" xml:space="preserve">
    <value>The provided expression must be a LambdaExpression. </value>
  </data>
  <data name="LambdaNotXamlSerializable" xml:space="preserve">
    <value>This workflow contains lambda expressions specified in code. These expressions are not XAML serializable. In order to make your workflow XAML-serializable, either use VisualBasicValue/VisualBasicReference or ExpressionServices.Convert(lambda). This will convert your lambda expressions into expression activities.</value>
  </data>
  <data name="LegalCopyright" xml:space="preserve">
    <value>© .NET Foundation and Contributors</value>
  </data>
  <data name="LineNumberTooLarge" xml:space="preserve">
    <value>The specified line number for activity {0} is too large to be supported in Partial Trust</value>
  </data>
  <data name="LiteralsMustBeValueTypesOrImmutableTypes" xml:space="preserve">
    <value>Literal only supports value types and the immutable type {0}.  The type {1} cannot be used as a literal.</value>
  </data>
  <data name="LoadedWriteOnlyValue" xml:space="preserve">
    <value>The persistence provider implementation of InstanceStore in use is invalid. It reported loading an InstanceValue with InstanceValueOptions.WriteOnly set. Write-only values should not be loaded.</value>
  </data>
  <data name="LoadingAborted" xml:space="preserve">
    <value>An attempt to load an instance was aborted.</value>
  </data>
  <data name="LoadingWorkflowApplicationRequiresInstanceStore" xml:space="preserve">
    <value>WorkflowApplication requires a valid InstanceStore to be set before Load or LoadRunnableInstance can be called.</value>
  </data>
  <data name="LoadOpAssociateKeysCannotContainLookupKey" xml:space="preserve">
    <value>If LoadWorkflowByInstanceKeyCommand.AssociateLookupKeyToInstanceId is not specified, the LookupInstanceKey must already be associated to an instance, or the LoadWorkflowByInstanceKeyCommand will fail. For this reason, it is invalid to also specify the LookupInstanceKey in the InstanceKeysToAssociate collection if AssociateLookupKeyToInstanceId isn't set.</value>
  </data>
  <data name="LoadOpFreeKeyRequiresAcceptUninitialized" xml:space="preserve">
    <value>If LoadByKeyOperation.InstanceIdForFreeKey is specified, AcceptUninitializedInstance must be set to true. If the key is free, it will be associated to an uninitialized instance with the instance ID provided.</value>
  </data>
  <data name="LoadOpKeyMustBeValid" xml:space="preserve">
    <value>The key used to look up an instance, LoadByKeyOperation.LookupKey, must not be all-zeros, such as Guid.Empty.</value>
  </data>
  <data name="LocationExpressionCouldNotBeResolved" xml:space="preserve">
    <value>Location expression '{0}' could not be resolved to a variable or property.  Ensure location expression resolves to a Variable or Property defined in the scope hierarchy.</value>
  </data>
  <data name="LocationTypeMismatch" xml:space="preserve">
    <value>The location with name '{0}' cannot be retrieved as a Location of type '{1}' because it is a Location of type '{2}'.  The types must match exactly because a location provides both read and write access.</value>
  </data>
  <data name="LockRetryTimeout" xml:space="preserve">
    <value>Timeout trying to acquire the instance lock.  The operation did not complete within the allotted timeout of {0}. The time allotted to this operation may have been a portion of a longer timeout.</value>
  </data>
  <data name="LockTimeoutExceptionMessage" xml:space="preserve">
    <value>Cannot claim lock within the allotted timeout of {0}. The time allotted to this operation may have been a portion of a longer timeout.</value>
  </data>
  <data name="MapEntryNotFound" xml:space="preserve">
    <value>Update Map Entry not found for Activity '{0}'.</value>
  </data>
  <data name="MarkCanceledOnlyCallableIfCancelRequested" xml:space="preserve">
    <value>Only activities which have been requested to cancel can call MarkCanceled.  Check ActivityInstance.HasCancelBeenRequested before calling this method.</value>
  </data>
  <data name="MaximumRetriesExceededForSqlCommand" xml:space="preserve">
    <value>Giving up retrying a SQL command as the maximum number of retries have been performed.</value>
  </data>
  <data name="MaxInstancesExceeded" xml:space="preserve">
    <value>The system hit the limit set for throttle 'MaxConcurrentInstances'. Limit for this throttle was set to {0}. Throttle value can be changed by modifying attribute 'maxConcurrentInstances' in serviceThrottle element or by modifying 'MaxConcurrentInstances' property on behavior ServiceThrottlingBehavior.</value>
  </data>
  <data name="MaxPendingMessagesPerChannelExceeded" xml:space="preserve">
    <value>The throttle 'MaxPendingMessagesPerChannel' limit of  '{0}' was hit. To increase this limit, adjust the MaxPendingMessagesPerChannel property on BufferedReceiveServiceBehavior.</value>
  </data>
  <data name="MaxPendingMessagesPerChannelMustBeGreaterThanZero" xml:space="preserve">
    <value>Throttle limit must be greater than zero. To disable, set to Int32.MaxValue.</value>
  </data>
  <data name="MayBindLockCommandShouldValidateOwner" xml:space="preserve">
    <value>An InstancePersistenceCommand which returns true from AutomaticallyAcquiringLock must also override Validate to throw an InvalidOperationException if the command is executed using an InstanceHandle not bound to an InstanceOwner.</value>
  </data>
  <data name="MemberCannotBeNull" xml:space="preserve">
    <value>'{0}' in {1} activity '{2}' cannot be null.</value>
  </data>
  <data name="MemberIsReadOnly" xml:space="preserve">
    <value>The member '{0}' of type '{1}' is read only. It cannot be a LValue.</value>
  </data>
  <data name="MemberNotFound" xml:space="preserve">
    <value>Member named '{0}' is not found on type '{1}'.</value>
  </data>
  <data name="MemberNotSupportedByActivityXamlServices" xml:space="preserve">
    <value>ActivityXamlServices encountered a member ({0}) that is not supported by DynamicActivity.</value>
  </data>
  <data name="MessageCannotBeEmpty" xml:space="preserve">
    <value>The Message content is null, which does not match the operation '{0}' in contract '{1}'</value>
  </data>
  <data name="MessageContentCannotHaveMoreThanOneParameter" xml:space="preserve">
    <value>Operation '{0}' on implemented contract '{1}' cannot contain more than one parameter for message contract.</value>
  </data>
  <data name="MessageHeaderNotSupported" xml:space="preserve">
    <value>Custom message headers in MessageDescription is not supported. Please use a MessageContract-decorated type in operation '{0}', contract '{1}'.</value>
  </data>
  <data name="MessagePropertyIsNotSupported" xml:space="preserve">
    <value>Custom message properties in MessageDescription is not supported. Please use a MessageContract-decorated type in operation '{0}', contract '{1}'.</value>
  </data>
  <data name="MessageTypeMismatch" xml:space="preserve">
    <value>Receive specified a System.ServiceModel.Channels.Message type in ReceiveMessageContent which is different from  the message type '{0}' specified in operation '{1}' of the implemented contract '{2}'.</value>
  </data>
  <data name="MessageVersionInformationNotFound" xml:space="preserve">
    <value>Response message version information could not be found.</value>
  </data>
  <data name="MetadataCannotContainNullKey" xml:space="preserve">
    <value>A null name was provided in a named collection (dictionary) of InstanceValues. Null is not a valid name for an InstanceValue.</value>
  </data>
  <data name="MetadataCannotContainNullValue" xml:space="preserve">
    <value>A null value was provided in a named collection (dictionary) of InstanceValues. The name provided for the null value was {0}. Null is not a valid InstanceValue. To specify a null value, use an instance of InstanceValue with null data by passing null to the InstanceValue constructor. To indicate that a named value should be deleted, use InstanceValue.DeletedValue.</value>
  </data>
  <data name="MethodInfoRequired" xml:space="preserve">
    <value>Method property of type '{0}' is required.</value>
  </data>
  <data name="MethodNameRequired" xml:space="preserve">
    <value>Name property of type '{0}' is required.</value>
  </data>
  <data name="MissingArgument" xml:space="preserve">
    <value>The Argument associated with the name '{0}' is null in the '{1}' collection.</value>
  </data>
  <data name="MissingBindingInEndpoint" xml:space="preserve">
    <value>Endpoint with Name='{0}' and ServiceContract '{1}' has no Binding. Please provide a Binding to this Endpoint.</value>
  </data>
  <data name="MissingBodyInWorkflowService" xml:space="preserve">
    <value>The Body property of the current WorkflowService is null. Please provide a Body to this WorkflowService.</value>
  </data>
  <data name="MissingDisplayNameInRootActivity" xml:space="preserve">
    <value>Root activity has empty DisplayName. Please do not set root activity's DisplayName to null or empty string, or provide a Name for the WorkflowService.</value>
  </data>
  <data name="MissingKnownTypes" xml:space="preserve">
    <value>Missing known type '{0}' for operation '{1}' in contract '{2}'.</value>
  </data>
  <data name="MissingNameProperty" xml:space="preserve">
    <value>Argument of type '{0}' does not have a name. Name property should be specified for items in this collection.</value>
  </data>
  <data name="MissingOperationName" xml:space="preserve">
    <value>The OperationName property must be set in activity '{0}'.</value>
  </data>
  <data name="MissingParameter" xml:space="preserve">
    <value>Parameters collection does not contain parameter '{0}' which is specified on operation '{1}' in contract '{2}'.</value>
  </data>
  <data name="MissingServiceContractName" xml:space="preserve">
    <value>The ServiceContractName property must be set in activity '{0}' with OperationName='{1}'.</value>
  </data>
  <data name="MissingSetAccessorForIndexer" xml:space="preserve">
    <value>Indexer property {0} for type {1} does not expose a setter accessor.</value>
  </data>
  <data name="MissingUriInEndpoint" xml:space="preserve">
    <value>Endpoint with Name='{0}' and ServiceContract '{1}' has a null or empty Uri property. A Uri for this Endpoint must be provided.</value>
  </data>
  <data name="MisuseOfMessageContent" xml:space="preserve">
    <value>Data Contract is specified for operation '{0}' in contract '{1}', please use ReceiveParameterContent for Receive activity, and SendParameterContent for SendReply activity to match the contract definition.</value>
  </data>
  <data name="MisuseOfParameterContent" xml:space="preserve">
    <value>Message contract type is specified for operation '{0}' in contract '{1}', please use ReceiveMessageContent for Receive activity, and SendMessageContent for SendReply activity to match the contract definition. </value>
  </data>
  <data name="MovingActivitiesInStateBlockDU" xml:space="preserve">
    <value>StateMachine does not support Dynamic Update if the activity property in the original definition is reassigned to another property within the State or its Transition.</value>
  </data>
  <data name="MultiDimensionalArraysNotSupported" xml:space="preserve">
    <value>Multidimensional arrays are not supported.</value>
  </data>
  <data name="MultipleFlowNodesSharingSameChildBlockDU" xml:space="preserve">
    <value>Flowchart does not support Dynamic Update when more than one FlowNode shares the same child activity.</value>
  </data>
  <data name="MultipleLockOwnersNotSupported" xml:space="preserve">
    <value>SqlWorkflowInstanceStore does not support creating more than one lock owner concurrently. Consider setting InstanceStore.DefaultInstanceOwner to share the store among many applications.</value>
  </data>
  <data name="MultipleOverloadGroupsConfigured" xml:space="preserve">
    <value>The following overload groups are configured: {0}. Only one overload group should have its arguments configured.</value>
  </data>
  <data name="MustCallPrepareBeforeFinalize" xml:space="preserve">
    <value>The workflow definition does not have an attached copy of its original definition. Before making updates to the workflow, call DynamicUpdateServices.PrepareForUpdate to save a copy of the original definition.</value>
  </data>
  <data name="MustCancelOldTimer" xml:space="preserve">
    <value>You must cancel the previous timer before setting a new one.</value>
  </data>
  <data name="MustMatchReferenceExpressionReturnType" xml:space="preserve">
    <value>Reference expressions cannot end with Conversion. The provided expression's type must exactly match the type T of VisualBasicReference&lt;T&gt; or LambdaReference&lt;T&gt;.</value>
  </data>
  <data name="MustSetTransactionOnFirstCall" xml:space="preserve">
    <value>The persistence provider implementation of InstanceStore in use is invalid. An ambient transaction (System.Transactions.Transaction.Current) is set on the thread calling InstancePersistenceContext.Execute or InstancePersistenceContext.BeginExecute, but commands have already executed during this execution episode with no transaction set. An ambient transaction can only be set on the first call to Execute or BeginExecute (and only if no other transaction is already set for the episode).</value>
  </data>
  <data name="MustSpecifyConnectionStringOrName" xml:space="preserve">
    <value>Need to specify either connectionString or connectionStringName property.</value>
  </data>
  <data name="NameCollisionOnCollect" xml:space="preserve">
    <value>A name collision was detected for the name '{0}' provided by a persistence participant of type '{1}'. A value provided by the participant's CollectValues implementation uses the same name as another value provided by this participant or a different persistence participant. Fix the participant to use a different name to avoid the collision, or remove the participant from the workflow's extensions collection.</value>
  </data>
  <data name="NameCollisionOnMap" xml:space="preserve">
    <value>A name collision was detected for the name '{0}' provided by a persistence participant of type '{1}'. A value provided by the participant's MapValues implementation uses the same name as another value provided by this participant or a different persistence participant.  ix the participant to use a different name to avoid the collision, or remove the participant from the workflow's extensions collection.</value>
  </data>
  <data name="NativeActivityUpdateInstanceThrewException" xml:space="preserve">
    <value>The activity threw an exception from its UpdateInstance method: {0}</value>
  </data>
  <data name="NAUCDisposed" xml:space="preserve">
    <value>A NativeActivityUpdateContext can only be accessed within the scope of the function it was passed into.</value>
  </data>
  <data name="NewArrayBoundsRequiresIntegralArguments" xml:space="preserve">
    <value>The 'NewArrayBounds requires integral arguments.</value>
  </data>
  <data name="NewArrayRequiresArrayTypeAsResultType" xml:space="preserve">
    <value>The result type of 'NewArray' activity must be a concrete array type.</value>
  </data>
  <data name="NoAdditionalKeysOnInstanceIdLoad" xml:space="preserve">
    <value>When using an InstanceStore as a persistence provider, additional keys cannot be specified when loading an instance by its instance ID.</value>
  </data>
  <data name="NoCAInSecondaryRoot" xml:space="preserve">
    <value>A CompensableActivity cannot be nested inside the Compensation, Confirmation or Cancellation Handler of a parent CompensableActivity.</value>
  </data>
  <data name="NoChangesMapQueryNotSupported" xml:space="preserve">
    <value>Query on a NoChanges map is not supported.</value>
  </data>
  <data name="NoDynamicArgumentsInActivityDefinitionChange" xml:space="preserve">
    <value>There are conflicting changes to this activity from its provided implementation map and the current update. The activity's arguments changed in both updates.</value>
  </data>
  <data name="NoDynamicArgumentsInActivityDefinitionChangeRuntime" xml:space="preserve">
    <value>There are conflicting changes to this activity from an implementation update and larger workflow update. The activity's arguments changed in both updates.</value>
  </data>
  <data name="NoNamespace" xml:space="preserve">
    <value>Unable to resolve namespace '{0}:'.</value>
  </data>
  <data name="NonWASActivationNotSupported" xml:space="preserve">
    <value>SqlWorkflowInstanceStore only supports WAS activation.</value>
  </data>
  <data name="NoOutputLocationWasFound" xml:space="preserve">
    <value>The argument {0} couldn't be matched to a valid output location.</value>
  </data>
  <data name="NoOverloadGroupsAreConfigured" xml:space="preserve">
    <value>None of the overload groups have all their required/optional activity arguments configured.</value>
  </data>
  <data name="NoPersistScopeCannotContainPersist" xml:space="preserve">
    <value>NoPersistScope Activity '{0}' cannot contain Persist Activity '{1}'. </value>
  </data>
  <data name="NoPromotionsDefined" xml:space="preserve">
    <value>The named promotion {0} does not define any promotions.</value>
  </data>
  <data name="NoRunnableInstances" xml:space="preserve">
    <value>No runnable workflow instances were found in the InstanceStore to load.</value>
  </data>
  <data name="NoRuntimeTransactionExists" xml:space="preserve">
    <value>It is invalid to call CompleteTransaction when the runtime has no active transaction.</value>
  </data>
  <data name="NotSpecified" xml:space="preserve">
    <value>&lt;not specified&gt;</value>
  </data>
  <data name="NotSupportMoreThanOneParametersInMessageContract" xml:space="preserve">
    <value>Operations cannot contain more than one parameter when using MessageContracts for operation '{0}' in contract '{1}'. Please provide a valid contract definition. </value>
  </data>
  <data name="NullAssignedToValueType" xml:space="preserve">
    <value>A value of the wrong type was retrieved from the instance store.  A value of type {0} was expected, but null was encountered instead.</value>
  </data>
  <data name="NullCorrelationHandleInInitializeCorrelation" xml:space="preserve">
    <value>CorrelationHandle cannot be null in '{0}'.</value>
  </data>
  <data name="NullCorrelationHandleInMultipleQueryCorrelation" xml:space="preserve">
    <value>At least one QueryCorrelationInitializer does not have correlation handle set. CorrelationHandle needs to be specified when there is more than one QueryCorrelationInitializer in the CorrelationInitializers collection.</value>
  </data>
  <data name="NullKeyAlreadyPresent" xml:space="preserve">
    <value>An item with a null key has already been added.</value>
  </data>
  <data name="NullReferencedMemberAccess" xml:space="preserve">
    <value>Cannot dereference null object of type {0} by member {1}.</value>
  </data>
  <data name="NullReplyMessageContractMismatch" xml:space="preserve">
    <value>Received a null reply message from the server. This could be due to a Contract mismatch between the client and the server sides. Please verify that the server side workflow is configured for two way operation.</value>
  </data>
  <data name="OnCancelRequestedThrew" xml:space="preserve">
    <value>The persistence provider implementation of InstanceStore in use is invalid. Its handler for cancel threw an exception. The handler was specified through the InstancePersistenceContext.SetCancellationHandler method.</value>
  </data>
  <data name="OneOfTwoPropertiesMustBeSet" xml:space="preserve">
    <value>Either '{0}' property or '{1}' property is required for '{2}' in activity '{3}' .</value>
  </data>
  <data name="OnewayContractIsImplementedAsTwoWay" xml:space="preserve">
    <value>One way operation '{0}' in contract '{1}' should not have a SendReply activity. </value>
  </data>
  <data name="OnFreeInstanceHandleThrew" xml:space="preserve">
    <value>The persistence provider implementation of InstanceStore in use is invalid. Its implementation of OnFreeInstanceHandle threw an exception.</value>
  </data>
  <data name="OnlyBookmarkOwnerCanRemove" xml:space="preserve">
    <value>Bookmarks can only be removed by the activity instance that created them.</value>
  </data>
  <data name="OnlyOneOperationPerActivity" xml:space="preserve">
    <value>Only one operation can be active for an activity at a given time.  There is already another operation in progress.</value>
  </data>
  <data name="OnlyOneRequireTransactionContextAllowed" xml:space="preserve">
    <value>The runtime already is attempting to service a call to RequireTransactionContext.</value>
  </data>
  <data name="OnlySingleCastDelegatesAllowed" xml:space="preserve">
    <value>Only non-multicast delegates are allowed for WorkflowApplication events.  The provided delegate has an invocation list with a length greater than one.</value>
  </data>
  <data name="OperationAlreadyCompleted" xml:space="preserve">
    <value>The operation has already completed.</value>
  </data>
  <data name="OperationDoesNotExistInContract" xml:space="preserve">
    <value>Operation '{0}' does not exist in contract with Name='{1}' and Namespace='{2}'.</value>
  </data>
  <data name="OperationFormatterAndFaultFormatterIncorrectlySet" xml:space="preserve">
    <value>OperationFormatter and FaultFormatter cannot both be set.</value>
  </data>
  <data name="OperationFormatterAndFaultFormatterNotSet" xml:space="preserve">
    <value>OperationFormatter and FaultFormatter cannot both be null.</value>
  </data>
  <data name="OperationHasSerializerBehavior" xml:space="preserve">
    <value>Operation '{0}' in contract '{1}' already has a '{2}' behavior, so a new one cannot be added. This usually indicates that the IOperationSerializer.ApplyToOperation method has already been called for this operation.</value>
  </data>
  <data name="OperationIsNotImplemented" xml:space="preserve">
    <value>Operation '{0}' in contract '{1}' is not implemented in the workflow.</value>
  </data>
  <data name="OperationNotAvailable" xml:space="preserve">
    <value>Operation '{0}' on service instance with identifier '{1}' cannot be performed at this time. Please ensure that the operations are performed in the correct order and that the binding in use provides ordered delivery guarantees.</value>
  </data>
  <data name="OperationNotFound" xml:space="preserve">
    <value>A Receive with Contract {0} and Operation {1} cannot be found in the default WorkflowService. Please ensure all operations in other WorkflowService versions are first added in the default WorkflowService.</value>
  </data>
  <data name="OptionalExtensionTypeMatchedMultiple" xml:space="preserve">
    <value>Multiple extensions of type '{0}' were found. At most one extension of this type is allowed when running this workflow.</value>
  </data>
  <data name="OriginalActivityReusedInModifiedDefinition" xml:space="preserve">
    <value>The activity '{0}' in the original definition may not be reused in the updated definition.</value>
  </data>
  <data name="OriginalFilename" xml:space="preserve">
    <value>System.ServiceModel.Internals.dll</value>
  </data>
  <data name="OriginalVariableReusedInModifiedDefinition" xml:space="preserve">
    <value>The variable '{0}' in the original definition may not be reused in the updated definition.</value>
  </data>
  <data name="OriginCannotBeRuntimeIntrinsic" xml:space="preserve">
    <value>Object '{0}' cannot be used as an origin because it is already a workflow definition element (Activity, ActivityDelegate, Argument, or LocationReference).</value>
  </data>
  <data name="OutArgumentCannotHaveInputValue" xml:space="preserve">
    <value>OutArgument '{0}' cannot be configured with an input value.  The key '{0}' should be removed from the input dictionary.</value>
  </data>
  <data name="OutOfIdSpaceIds" xml:space="preserve">
    <value>The number of activities in this ID space has exceeded Int32.MaxValue.  Refactor some portion of the workflow into a new Activity subclass.</value>
  </data>
  <data name="OutOfInstanceIds" xml:space="preserve">
    <value>Can only execute long.MaxValue Activity instances in a workflow.</value>
  </data>
  <data name="OutOfInternalBookmarks" xml:space="preserve">
    <value>Can only generate long.MaxValue internal bookmarks for a workflow.</value>
  </data>
  <data name="OutOfRangeSourceLocationEndColumn" xml:space="preserve">
    <value>For single line SourceLocation, endColumn should be &gt;= startColumn (= {0}).</value>
  </data>
  <data name="OutOfRangeSourceLocationEndLine" xml:space="preserve">
    <value>SourceLocation's endLine should be &gt;= startLine (= {0}).</value>
  </data>
  <data name="OutsideInstanceExecutionScope" xml:space="preserve">
    <value>The persistence provider implementation of InstanceStore in use is invalid. The {0} method can only be called during the processing of a command. Do not attempt to preserve an instance of InstancePersistenceContext for later use. The InstancePersistenceContext provided to TryCommand and BeginTryCommand can only be used during the processing of that command.</value>
  </data>
  <data name="OutsideTransactionalCommand" xml:space="preserve">
    <value>The persistence provider implementation of InstanceStore in use is invalid. It called the method {0} on InstancePersistenceContext, which requires transactional consistency, as part of performing a command that should not require transactional consistency. This can result in data corruption. This error indicates an invalid persistence provider implementation.</value>
  </data>
  <data name="OverloadGroupHasSubsets" xml:space="preserve">
    <value>The following overload groups are a subset of group '{0}': {1}. It is an error to have an overload group as a subset of another.</value>
  </data>
  <data name="OverloadGroupsAreEquivalent" xml:space="preserve">
    <value>The following overload groups are equivalent: {0}. It is sufficient to define only one overload group here.</value>
  </data>
  <data name="OverloadingMethodMustBeStatic" xml:space="preserve">
    <value>The method to overload an operator must be static.</value>
  </data>
  <data name="OverloadOnlyCallableFromWorkflowThread" xml:space="preserve">
    <value>This method overload is only callable from a workflow thread.</value>
  </data>
  <data name="OwnerBelongsToWrongStore" xml:space="preserve">
    <value>An incorrect InstanceOwner was provided. The InstanceOwner provided to an InstanceStore method must belong to the InstanceStore. Only use an InstanceOwner object with the InstanceStore that created it.</value>
  </data>
  <data name="OwnerRequired" xml:space="preserve">
    <value>The instance persistence system is unable to process an invalid InstancePersistenceCommand. The command requires an instance owner, but no owner was bound to the InstanceHandle.</value>
  </data>
  <data name="ParallelForEachRequiresNonNullValues" xml:space="preserve">
    <value>Values must be bound to a non-null expression before ParallelForEach activity '{0}' can be used.</value>
  </data>
  <data name="ParameterNumberMismatch" xml:space="preserve">
    <value>Parameter '{0}' does not exist on operation '{1}' in contract '{2}'.</value>
  </data>
  <data name="ParameterPositionMismatch" xml:space="preserve">
    <value>Parameter '{0}' is not in the correct order for operation '{1}' in contract '{2}'. Please move it to position '{3}' in the parameters collection. </value>
  </data>
  <data name="ParameterTypeMismatch" xml:space="preserve">
    <value>The type of parameter '{0}' does not match the type '{1}' specified in operation '{2}' of the implemented contract '{3}'.</value>
  </data>
  <data name="PartialTrustPerformanceCounterNotEnabled" xml:space="preserve">
    <value>Access to performance counters is denied. Application may be running in partial trust. Either disable performance counters or configure the application to run in full trust.</value>
  </data>
  <data name="PauseWhenPersistableInvalidIfPersistable" xml:space="preserve">
    <value>PauseWhenPersistable can only be called when IsPersistable is false.</value>
  </data>
  <data name="PendingMessagesPerChannelRatio" xml:space="preserve">
    <value>Pending messages per channel ratio: {0}/{1}</value>
  </data>
  <data name="PermissionArgumentWrongType" xml:space="preserve">
    <value>The argument is of the wrong type. Expecting '{0}'.</value>
  </data>
  <data name="PersistenceInitializerThrew" xml:space="preserve">
    <value>An IPersistenceContextInitializer implementation threw an exception. A durable service instance, such as a WorkflowServiceInstance, could not be loaded or created. The InnerException property contains the original exception.</value>
  </data>
  <data name="PersistencePipelineAbortThrew" xml:space="preserve">
    <value>The Abort implementation of a persistence participant of type '{0}' threw an exception. Exceptions should not be thrown from Abort implementations.</value>
  </data>
  <data name="PersistenceProviderRequiredToPersist" xml:space="preserve">
    <value>Only workflow instances which have been configured with a PersistenceProvider extension can be persisted or unloaded.</value>
  </data>
  <data name="PersistenceTooLateToEnlist" xml:space="preserve">
    <value>It is too late to enlist in the transaction. It has already started committing or aborting.</value>
  </data>
  <data name="PersistenceViolationNoCreate" xml:space="preserve">
    <value>The persistence provider implementation of InstanceStore in use is invalid. A new instance was created when an InstanceNotReadyException should have been thrown.</value>
  </data>
  <data name="PickBranchRequiresTrigger" xml:space="preserve">
    <value>Trigger must be set before PickBranch '{0}' can be used.</value>
  </data>
  <data name="PickBranchTriggerActionSwapped" xml:space="preserve">
    <value>Pick does not support Dynamic Update when Trigger and Action of a PickBranch are swapped.</value>
  </data>
  <data name="PrepareForSerializationRequiresPersistability" xml:space="preserve">
    <value>PrepareForSerialization can only be called when IsPersistable is true.</value>
  </data>
  <data name="PrivateMembersHaveChanged" xml:space="preserve">
    <value>The private implementation of this activity has changed (by adding, removing or rearranging implementation children, delegates, variables or arguments). Dynamic Update only supports implementation changes that are specified in an implementation map, independently of the activity's public configuration.</value>
  </data>
  <data name="ProductVersion" xml:space="preserve">
    <value>4.6.1038.0</value>
  </data>
  <data name="PromotionAlreadyDefined" xml:space="preserve">
    <value>The promotion set {0} has already been defined.</value>
  </data>
  <data name="PromotionTooManyDefined" xml:space="preserve">
    <value>The promotion set {0} has defined {1} {2} promotions, which exceeds the maximum allowed promotions of {3}.</value>
  </data>
  <data name="PropertyCannotBeModified" xml:space="preserve">
    <value>{0} property cannot be modified after the SqlTrackingParticipant has started processing records.</value>
  </data>
  <data name="PropertyMemberNotSupportedByActivityXamlServices" xml:space="preserve">
    <value>ActivityXamlServices encountered an x:Property member ({0}) that is not supported by DynamicActivityProperty.</value>
  </data>
  <data name="PropertyMismatch" xml:space="preserve">
    <value>'{0}' does not match the '{1}' value '{2}' provided on operation '{3}' contract '{4}'.</value>
  </data>
  <data name="PropertyReadOnlyInWorkflowDataContext" xml:space="preserve">
    <value>Property '{0}' is read only in WorkflowDataContext.</value>
  </data>
  <data name="PropertyReferenceNotFound" xml:space="preserve">
    <value>PropertyReference is unable to resolve property '{0}'.</value>
  </data>
  <data name="ProtectionLevelIsNotSupported" xml:space="preserve">
    <value>Custom ProtectionLevel settings are only supported through MessageContract. Please specify a MessageContract type for operation '{0}' of implemented contract '{1}'.</value>
  </data>
  <data name="ProtectionLevelNotSupported" xml:space="preserve">
    <value>Workflow does not support custom ProtectionLevel settings on Faults. Please do not specify ProtectionLevel on FaultContract for operation '{0}' on implemented contract '{1}'.</value>
  </data>
  <data name="ProvidedStateInitializedForExecution" xml:space="preserve">
    <value>The runtime state has already been initialized for execution and cannot be updated.  Reload the state from persistence.</value>
  </data>
  <data name="ProviderDoesNotSupportCommand" xml:space="preserve">
    <value>The persistence provider implementation of InstanceStore doesn't support the command named {0}. Either choose a different provider, or ensure that this persistence command isn't attempted.</value>
  </data>
  <data name="PublicChildrenChangeBlockDU" xml:space="preserve">
    <value>This activity does not support changes to its public children (addition, removal, or rearrangement of Activities or ActivityDelegates).</value>
  </data>
  <data name="PublicEnvironmentAccessToNonGenericActivity" xml:space="preserve">
    <value>Public environment access is only available on activities that derive from CodeActivity&lt;TResult&gt;, not CodeActivity.</value>
  </data>
  <data name="PublicMethodWithMatchingParameterDoesNotExist" xml:space="preserve">
    <value>'{0}' does not have a public {1} method named '{2}' matching the parameter types, generic type arguments, and generic type constraints supplied to InvokeMethod '{3}'.</value>
  </data>
  <data name="PublicReferencesOnActivityRequiringArgumentResolution" xml:space="preserve">
    <value>Activity '{0}' cannot define arguments other than the built-in Result argument and also declare access to public locations via CodeActivityPublicEnvironmentAccessor. Either pass all data into the activity via arguments, or via CodeActivityPublicEnvironmentAccessor.TryGetAccessToPublicLocation and TryGetReferenceToPublicLocation.</value>
  </data>
  <data name="QueryActivityIsInImplementation" xml:space="preserve">
    <value>This activity is inside the implementation of composite activity '{0}'. To query its updateability, use the implementation map for the composite activity.</value>
  </data>
  <data name="QueryActivityIsNotInDefinition" xml:space="preserve">
    <value>This activity does not belong to either the original or updated workflow definitions.</value>
  </data>
  <data name="QueryActivityIsPublic" xml:space="preserve">
    <value>This activity is part of the root workflow definition. To query its updateability, use an update map for the workflow, instead of an implementation map for composite activity '{0}'.</value>
  </data>
  <data name="QueryCorrelationInitializerCannotBeInitialized" xml:space="preserve">
    <value>There is no correlation handle available to initialize the QueryCorrelationInitializer. This is because there is no explicit handle set on the query initializer and there is no handle available for use from the correlation scope."</value>
  </data>
  <data name="QueryCorrelationInitializerWithEmptyMessageQuerySet" xml:space="preserve">
    <value>The activity with DisplayName='{0}' and OperationName='{1}' has QueryCorrelationInitializer with empty MessageQuerySet.</value>
  </data>
  <data name="QueryVariableIsInImplementation" xml:space="preserve">
    <value>This variable is inside the implementation of composite activity '{0}'. To query its updateability, use the implementation map for the composite activity.</value>
  </data>
  <data name="QueryVariableIsNotInDefinition" xml:space="preserve">
    <value>This variable does not belong to either the original or updated workflow definitions.</value>
  </data>
  <data name="QueryVariableIsNotPublic" xml:space="preserve">
    <value>This variable is not public. Only public variables can be changed via Dynamic Update.</value>
  </data>
  <data name="QueryVariableIsPublic" xml:space="preserve">
    <value>This variable is part of the root workflow definition. To query its updateability, use an update map for the workflow, instead of an implementation map for composite activity '{0}'.</value>
  </data>
  <data name="QueuingSqlRetry" xml:space="preserve">
    <value>Queuing SQL retry with delay {0} milliseconds.</value>
  </data>
  <data name="ReadAccessToWriteOnlyPublicReference" xml:space="preserve">
    <value>Activity '{0}' cannot read from this public location reference because it was declared with ArgumentDirection.Out. To allow both reading and writing, declare the reference with ArgumentDirection.InOut.</value>
  </data>
  <data name="ReadNotSupported" xml:space="preserve">
    <value>Read not supported on this stream.</value>
  </data>
  <data name="ReadonlyNameScopeCannotBeUpdated" xml:space="preserve">
    <value>Operation cannot be used because name scope implementation is read only.</value>
  </data>
  <data name="ReadonlyPropertyCannotBeSet" xml:space="preserve">
    <value>The property or indexer '{0}.{1}' cannot be used in this context because the set accessor is inaccessible.</value>
  </data>
  <data name="ReceiveAndReceiveParametersHaveSameName" xml:space="preserve">
    <value>Two Receives with different ReceiveContent types have the same ServiceContractName and OperationName '{0}'.</value>
  </data>
  <data name="ReceiveContentChanged" xml:space="preserve">
    <value>This Receive activity's Content has changed between type-less and typed content.</value>
  </data>
  <data name="ReceiveCorrelationInitializiersChanged" xml:space="preserve">
    <value>This Receive activity's CorrelationInitializers have changed.</value>
  </data>
  <data name="ReceiveIsInTRSWhenTransactionFlowNotAllowed" xml:space="preserve">
    <value>Receive is in TransactedReceiveScope while the operation '{0}' in implemented contract '{1}' has TransactionFlowOption set to NotAllowed.</value>
  </data>
  <data name="ReceiveIsNotInTRS" xml:space="preserve">
    <value>The operation '{0}' in implemented contract '{1}' requires transaction to be flowed, but the Receive activity is NOT in TransactedReceiveScope.</value>
  </data>
  <data name="ReceiveMessageNeedsToPairWithSendMessageForTwoWayContract" xml:space="preserve">
    <value>The Receive activity is configured with a request/reply Operation '{0}', however, there is no SendReply paired with it. Please pair Receive with SendReply and correlate them using a CorrelationHandle.</value>
  </data>
  <data name="ReceiveNotWithinATransactedReceiveScope" xml:space="preserve">
    <value>The Receive activity that flowed in a transaction was not contained within a TransactedReceiveScope.</value>
  </data>
  <data name="ReceivePairedWithSendReplyAndSendReplyParameters" xml:space="preserve">
    <value>A SendReply with SendMessageContent and a SendReply with SendParametersContent are both paired with the same Receive with OperationName='{0}'. This is not allowed.</value>
  </data>
  <data name="ReceiveParametersContentDoesNotSupportMessage" xml:space="preserve">
    <value>Activity with DisplayName='{0}' has an argument named '{1}' that is a Message or MessageContract. ReceiveParametersContent does not support Message or MessageContract. Content property should be specified as ReceiveMessageContent for Message or MessageContract based content.</value>
  </data>
  <data name="ReceiveReplyRequestCannotBeNull" xml:space="preserve">
    <value>The Request property in activity '{0}' cannot be null. It must be set to the Send activity that belongs to this request/reply pair.</value>
  </data>
  <data name="ReferencedChildInIsNewlyAdded" xml:space="preserve">
    <value>This method cannot be called for activities that are references to imported children. Check NativeActivityUpdateContext.IsReferenceToImportedChild before calling this method.</value>
  </data>
  <data name="RegisteredBookmarkScopeRequired" xml:space="preserve">
    <value>Only registered bookmark scopes can be used for creating scoped bookmarks.</value>
  </data>
  <data name="RelativeUriRequiresBinding" xml:space="preserve">
    <value>Endpoint with Name='{0}' and ServiceContract '{1}' has relative Uri '{2}' that cannot be converted to an absolute Uri because the Endpoint's Binding property is null. Please set the Binding property or change the relative Uri to an absolute Uri.</value>
  </data>
  <data name="RelativeUriRequiresHost" xml:space="preserve">
    <value>Endpoint with Name='{0}' and ServiceContract '{1}' has relative Uri '{2}' that cannot be converted to an absolute Uri because the host argument of GetAddress method is null. Please provide the service host instance that will host the endpoint, or change the relative Uri to an absolute Uri.</value>
  </data>
  <data name="RemovingTransitionsBlockDU" xml:space="preserve">
    <value>StateMachine does not support Dynamic Update if a transition is removed from an executing State.</value>
  </data>
  <data name="RenewLockSystemError" xml:space="preserve">
    <value>Failed to extend lock expiration, lock expiration already passed or the lock owner was deleted. Aborting SqlWorkflowInstanceStore.</value>
  </data>
  <data name="ReplyShouldNotIncludeRequestReplyHandle" xml:space="preserve">
    <value>The activity '{0}' with OperationName='{1}' should not include the request/reply handle in additional correlations.</value>
  </data>
  <data name="RequestMustBeSpecified" xml:space="preserve">
    <value>The Request argument must be specified in activity '{0}'.</value>
  </data>
  <data name="RequestReplyHandleShouldNotBePresentForOneWay" xml:space="preserve">
    <value>RequestReplyCorrelationInitializer should not be specified on a one way Send or Receive activity. When initializing RequestReply correlation, Send should be paired with a ReceiveReply activity and Receive should be paired with a SendReply activity.</value>
  </data>
  <data name="RequiredArgumentValueNotSupplied" xml:space="preserve">
    <value>Value for a required activity argument '{0}' was not supplied.</value>
  </data>
  <data name="RequiredExtensionTypeNotFound" xml:space="preserve">
    <value>An extension of type '{0}' must be configured in order to run this workflow.</value>
  </data>
  <data name="RequiredVariableCoundNotBeExtracted" xml:space="preserve">
    <value>Required variable {0} is not available for extraction in activity: {1}.</value>
  </data>
  <data name="RequireExtensionOnlyAcceptsReferenceTypes" xml:space="preserve">
    <value>'{0}' is a value type. RequireExtension only accepts reference types.</value>
  </data>
  <data name="ResponseContextIsNotNull" xml:space="preserve">
    <value>ResponseContext is not null.</value>
  </data>
  <data name="ResultArgumentHasRequiredTypeAndDirection" xml:space="preserve">
    <value>The activity author supplied RuntimeArgument named 'Result' must have ArgumentDirection Out and type {0}.  Instead, it has ArgumentDirection {1} and type {2}.</value>
  </data>
  <data name="ResultArgumentMustBeBoundToResultProperty" xml:space="preserve">
    <value>The activity author supplied RuntimeArgument named 'Result' must be bound to the argument returned by the activity's Result property.</value>
  </data>
  <data name="ResultArgumentMustBeSpecificType" xml:space="preserve">
    <value>The Result OutArgument for this activity must be an OutArgument of {0}.</value>
  </data>
  <data name="ResultCannotBeSetOnArgumentExpressions" xml:space="preserve">
    <value>The Result OutArgument on an Activity&lt;T&gt; cannot be set when the Activity&lt;T&gt; is used as an argument's expression.</value>
  </data>
  <data name="ResultMustBeSpecified" xml:space="preserve">
    <value>The Result argument must be specified in activity '{0}'.</value>
  </data>
  <data name="RethrowMustBeAPublicChild" xml:space="preserve">
    <value>Rethrow activity '{0}' cannot be used in a private child of a TryCatch activity. Rethrow is only allowed under the public children of a TryCatch activity.</value>
  </data>
  <data name="RethrowNotInATryCatch" xml:space="preserve">
    <value>Rethrow activity '{0}' must be the child of a Catch handler of a TryCatch activity.</value>
  </data>
  <data name="RetryingSqlCommandDueToSqlError" xml:space="preserve">
    <value>Retrying a SQL command due to SQL error number {0}.</value>
  </data>
  <data name="ReturnTypeIncompatible" xml:space="preserve">
    <value>Type mismatch. The return type '{0}' of best-match method '{1}' on type '{2}' is not compatible with the 'Result' argument supplied to InvokeMethod '{3}', which expects return values of type '{4}'.</value>
  </data>
  <data name="ReturnValueMissing" xml:space="preserve">
    <value>Return value parameter of type '{0}' is missing for operation '{1}' in contract '{2}'. </value>
  </data>
  <data name="RootActivityAlreadyAssociatedWithInstance" xml:space="preserve">
    <value>The activity with display name '{0}' has already been associated with an instance.  Once associated with an instance an activity's metadata cannot be manipulated.  This error might also indicate that you are attempting to execute a workflow whose root activity is actually part of another workflow.</value>
  </data>
  <data name="RootActivityCannotBeReferenced" xml:space="preserve">
    <value>Activity '{0}' is a root activity, and cannot be referenced by activity '{1}'.</value>
  </data>
  <data name="RootArgumentViolationsFound" xml:space="preserve">
    <value>The values provided for the root activity's arguments did not satisfy the root activity's requirements:</value>
  </data>
  <data name="RootArgumentViolationsFoundNoInputs" xml:space="preserve">
    <value>The root activity's argument settings are incorrect.  Either fix the workflow definition or supply input values to fix these errors:</value>
  </data>
  <data name="RunnableInstancesDetectionError" xml:space="preserve">
    <value>Detection of runnable instances failed due to the following exception</value>
  </data>
  <data name="RuntimeArgumentBindingInvalid" xml:space="preserve">
    <value>RuntimeArgument '{0}' refers to an Argument which in turn is bound to RuntimeArgument named '{1}'. Please ensure that the Argument object is not bound to more than one RuntimeArgument object or shared by more than one public Argument property.</value>
  </data>
  <data name="RuntimeArgumentChangeBlockDU" xml:space="preserve">
    <value>Dynamic Update will not be allowed inside Activity '{0}' because its RuntimeArguments changed.  To enable dynamic update inside this activity, no RuntimeArguments can be added, removed and rearranged.  Also their Name, Type and Direction cannot change.</value>
  </data>
  <data name="RuntimeArgumentNotCreated" xml:space="preserve">
    <value>The RuntimeArgument instance is not created so far.</value>
  </data>
  <data name="RuntimeArgumentNotOpen" xml:space="preserve">
    <value>The argument '{0}' cannot be used.  Make sure that it is declared on an activity.</value>
  </data>
  <data name="RuntimeDelegateArgumentDirectionIncorrect" xml:space="preserve">
    <value>The direction of a RuntimeDelegateArgument must match the direction of the DelegateArgument it is binding to.</value>
  </data>
  <data name="RuntimeDelegateArgumentTypeIncorrect" xml:space="preserve">
    <value>The type of a RuntimeDelegateArgument must match the type of the DelegateArgument it is binding to.</value>
  </data>
  <data name="RuntimeOperationInProgress" xml:space="preserve">
    <value>A runtime operation is already in progress.  Access to WorkflowInstance must be synchronized by the caller.</value>
  </data>
  <data name="RuntimeRunning" xml:space="preserve">
    <value>The workflow runtime is currently executing a workflow and operations can only be performed while the workflow is paused.  Access to WorkflowInstance must be synchronized by the caller.</value>
  </data>
  <data name="RuntimeTransactionAlreadyExists" xml:space="preserve">
    <value>The runtime has already been configured with a transaction.  Only one transaction is allowed at a time.</value>
  </data>
  <data name="RuntimeTransactionComplete" xml:space="preserve">
    <value>The runtime transaction has completed with the state '{0}'.</value>
  </data>
  <data name="RuntimeTransactionCompletionRequested" xml:space="preserve">
    <value>Activity '{0}', DisplayName: '{1}', InstanceId: '{2}' has scheduled completion of the runtime transaction.</value>
  </data>
  <data name="RuntimeTransactionHandleNotRegisteredAsExecutionProperty" xml:space="preserve">
    <value>The method '{0}' can be called only if the corresponding RuntimeTransactionHandle object is registered as an execution property.</value>
  </data>
  <data name="RuntimeTransactionIsSuppressed" xml:space="preserve">
    <value>This operation is invalid when the runtime transaction is suppressed. The runtime transaction is suppressed because the SuppressTransaction property was set on the RuntimeTransactionHandle in the current environment.</value>
  </data>
  <data name="RuntimeTransactionSet" xml:space="preserve">
    <value>The runtime transaction has been set by Activity '{0}', DisplayName: '{1}', InstanceId: '{2}'.  Execution isolated to Activity '{3}', DisplayName: '{4}', InstanceId: '{5}'.</value>
  </data>
  <data name="SameUserStateUsedForMultipleInvokes" xml:space="preserve">
    <value>The same user state instance cannot be used for concurrent activity invocations.</value>
  </data>
  <data name="SavingActivityToXamlNotSupported" xml:space="preserve">
    <value>Saving DynamicActivity or Activity.Implementation to XAML is not supported.  If you are attempting to construct a parameterized workflow and save it to XAML, consider using the ActivityBuilder class.</value>
  </data>
  <data name="SavingFuncToXamlNotSupported" xml:space="preserve">
    <value>Saving a general Func&lt;T&gt; to XAML is not supported. To convert an object to a serializable Func, serialize the object to XAML and then call ActivityXamlServices.CreateFactory.</value>
  </data>
  <data name="ScheduleBookmarkWorkItem" xml:space="preserve">
    <value>A BookmarkWorkItem has been scheduled for Activity '{0}', DisplayName: '{1}', InstanceId: '{2}'.  BookmarkName: {3}, BookmarkScope: {4}.</value>
  </data>
  <data name="ScheduleCancelActivityWorkItem" xml:space="preserve">
    <value>A CancelActivityWorkItem has been scheduled for Activity '{0}', DisplayName: '{1}', InstanceId: '{2}'.</value>
  </data>
  <data name="ScheduleCompletionWorkItem" xml:space="preserve">
    <value>A CompletionWorkItem has been scheduled for parent Activity '{0}', DisplayName: '{1}', InstanceId: '{2}'.  Completed Activity '{3}', DisplayName: '{4}', InstanceId: '{5}'.</value>
  </data>
  <data name="ScheduleExecuteActivityWorkItem" xml:space="preserve">
    <value>An ExecuteActivityWorkItem has been scheduled for Activity '{0}', DisplayName: '{1}', InstanceId: '{2}'.</value>
  </data>
  <data name="ScheduleFaultWorkItem" xml:space="preserve">
    <value>A FaultWorkItem has been scheduled for Activity '{0}', DisplayName: '{1}', InstanceId: '{2}'.  The exception was propagated from Activity '{3}', DisplayName: '{4}', InstanceId: '{5}'.</value>
  </data>
  <data name="ScheduleRuntimeWorkItem" xml:space="preserve">
    <value>A runtime work item has been scheduled for Activity '{0}', DisplayName: '{1}', InstanceId: '{2}'.</value>
  </data>
  <data name="ScheduleTransactionContextWorkItem" xml:space="preserve">
    <value>A TransactionContextWorkItem has been scheduled for Activity '{0}', DisplayName: '{1}', InstanceId: '{2}'.</value>
  </data>
  <data name="SchemaContextFromBeforeInitializeComponentXBTExtensionCannotBeGeneric" xml:space="preserve">
    <value>The XAML Helper class name generated by the BeforeInitializeComponent XAML build task extension ({0}) cannot be a generic. The resource could not have been generated by the BeforeInitializeComponent XAML Build Task extension. Try rebuilding the project.</value>
  </data>
  <data name="SchemaContextFromBeforeInitializeComponentXBTExtensionNotFound" xml:space="preserve">
    <value>The XAML Helper class name generated by the BeforeInitializeComponent XAML build task extension ({0}) was not found. Try rebuilding the project.</value>
  </data>
  <data name="SeekNotSupported" xml:space="preserve">
    <value>Seek not supported on this stream.</value>
  </data>
  <data name="SendActivityCorrelationHandleNotFound" xml:space="preserve">
    <value>Unable to find a valid correlation handle associated with the Send activity named '{0}'.</value>
  </data>
  <data name="SendMessageChannelCacheMiss" xml:space="preserve">
    <value>SendMessageChannelCache miss</value>
  </data>
  <data name="SendMessageNeedsToPairWithReceiveMessageForTwoWayContract" xml:space="preserve">
    <value>The Send activity is configured with a request/reply Operation '{0}', however, there is no ReceiveReply activity paired with it. Please pair Send with ReceiveReply and correlate them using a CorrelationHandle.</value>
  </data>
  <data name="SendNotSupported" xml:space="preserve">
    <value>Send is not supported.</value>
  </data>
  <data name="SendParametersContentDoesNotSupportMessage" xml:space="preserve">
    <value>Activity with DisplayName='{0}' has an argument named '{1}' that is a Message or MessageContract. SendParametersContent does not support Message or MessageContract. Content property should be specified as SendMessageContent for Message or MessageContract based content.</value>
  </data>
  <data name="SendReceiveExtensionNotFound" xml:space="preserve">
    <value>Unable to find SendReceiveExtension, please make sure that the application hosting the workflow provides an implementation of the extension.</value>
  </data>
  <data name="SendRepliesHaveSameFaultTypeDifferentAction" xml:space="preserve">
    <value>Two SendReply activities have the same fault type but different Action.</value>
  </data>
  <data name="SendReplyRequestCannotBeNull" xml:space="preserve">
    <value>The Request property in activity '{0}' cannot be null. It must be set to the Receive activity that belongs to this request/reply pair</value>
  </data>
  <data name="SendWithUninitializedCorrelatesWith" xml:space="preserve">
    <value>Activity with operation name '{0}' has a CorrelatesWith handle that is not initialized.</value>
  </data>
  <data name="SequenceDuplicateReferences" xml:space="preserve">
    <value>Sequence does not support Dynamic Update when it contains more than one reference to the same imported child.</value>
  </data>
  <data name="ServiceEndpointAdded" xml:space="preserve">
    <value>A service endpoint has been added for address '{0}', binding '{1}', and contract '{2}'.</value>
  </data>
  <data name="ServiceHostExtensionAborted" xml:space="preserve">
    <value>The operation could not be completed because the service host or one of its extensions has been aborted.</value>
  </data>
  <data name="ServiceHostExtensionImmutable" xml:space="preserve">
    <value>An operation was attempted using a service host extension which is only allowed before the service host has been opened.</value>
  </data>
  <data name="ServiceInstanceTerminated" xml:space="preserve">
    <value>Service instance with the identifier '{0}' was terminated.</value>
  </data>
  <data name="ServiceInstanceUnloaded" xml:space="preserve">
    <value>Service instance with the identifier '{0}' was unloaded.</value>
  </data>
  <data name="ServiceMetadataBehaviorNotFoundForServiceMetadataEndpoint" xml:space="preserve">
    <value>The contract name 'IMetadataExchange' could not be found in the list of contracts implemented by the service {0}.  Add a ServiceMetadataBehavior to the configuration file or to the WorkflowServiceHost directly to enable support for this contract.</value>
  </data>
  <data name="SetupOrCleanupWorkflowThreadThrew" xml:space="preserve">
    <value>An IExecutionProperty threw an exception while setting up or cleaning up the workflow thread.  See the inner exception for more details.</value>
  </data>
  <data name="SFxTaskNotStarted" xml:space="preserve">
    <value>The given Task instance has not yet been started. Task instances must be started before they are returned from operations.</value>
  </data>
  <data name="ShipAssertExceptionMessage" xml:space="preserve">
    <value>An unexpected failure occurred. Applications should not attempt to handle this error. For diagnostic purposes, this English message is associated with the failure: {0}.</value>
  </data>
  <data name="SimpleStateMustHaveOneTransition" xml:space="preserve">
    <value>State '{0}' must have at least 1 transition.</value>
  </data>
  <data name="SpecialMethodNotFound" xml:space="preserve">
    <value>Special method '{0}' of type '{1}' is not found.</value>
  </data>
  <data name="SqlExceptionCaught" xml:space="preserve">
    <value>Caught SQL Exception number {0} message {1}.</value>
  </data>
  <data name="StartBookmarkWorkItem" xml:space="preserve">
    <value>Starting execution of a BookmarkWorkItem for Activity '{0}', DisplayName: '{1}', InstanceId: '{2}'.  BookmarkName: {3}, BookmarkScope: {4}.</value>
  </data>
  <data name="StartCancelActivityWorkItem" xml:space="preserve">
    <value>Starting execution of a CancelActivityWorkItem for Activity '{0}', DisplayName: '{1}', InstanceId: '{2}'.</value>
  </data>
  <data name="StartCompletionWorkItem" xml:space="preserve">
    <value>Starting execution of a CompletionWorkItem for parent Activity '{0}', DisplayName: '{1}', InstanceId: '{2}'. Completed Activity '{3}', DisplayName: '{4}', InstanceId: '{5}'.</value>
  </data>
  <data name="StartExecuteActivityWorkItem" xml:space="preserve">
    <value>Starting execution of an ExecuteActivityWorkItem for Activity '{0}', DisplayName: '{1}', InstanceId: '{2}'.</value>
  </data>
  <data name="StartFaultWorkItem" xml:space="preserve">
    <value>Starting execution of a FaultWorkItem for Activity '{0}', DisplayName: '{1}', InstanceId: '{2}'.  The exception was propagated from Activity '{3}', DisplayName: '{4}', InstanceId: '{5}'.</value>
  </data>
  <data name="StartRuntimeWorkItem" xml:space="preserve">
    <value>Starting execution of a runtime work item for Activity '{0}', DisplayName: '{1}', InstanceId: '{2}'.</value>
  </data>
  <data name="StartSignpostEvent" xml:space="preserve">
    <value>Activity boundary.</value>
  </data>
  <data name="StartSqlCommandExecute" xml:space="preserve">
    <value>Starting SQL command execution: {0}</value>
  </data>
  <data name="StartTransactionContextWorkItem" xml:space="preserve">
    <value>Starting execution of a TransactionContextWorkItem for Activity '{0}', DisplayName: '{1}', InstanceId: '{2}'.</value>
  </data>
  <data name="StateCannotBeAddedTwice" xml:space="preserve">
    <value>State '{0}' cannot be added to a state machine twice.  All states in a state machine should be unique.</value>
  </data>
  <data name="StateCannotBeSerialized" xml:space="preserve">
    <value>Instance '{0}' cannot be run or persisted because it had a failed Dynamic Update. To run the instance, reload a fresh copy from the persistence store.</value>
  </data>
  <data name="StateMachineMustHaveInitialState" xml:space="preserve">
    <value>StateMachine '{0}' must have an initial state.</value>
  </data>
  <data name="StateNotBelongToAnyParent" xml:space="preserve">
    <value>Target state '{1}' of transition '{0}' must belong to a state machine.</value>
  </data>
  <data name="StopSignpostEvent" xml:space="preserve">
    <value>Activity boundary.</value>
  </data>
  <data name="StoreReportedConflictingLockTokens" xml:space="preserve">
    <value>The persistence provider implementation of InstanceStore in use is invalid. It called BindInstanceOwner twice with the same instanceOwnerId value but different lockToken values. Use a persistence provider which always uses the same lockToken for a single instance owner.</value>
  </data>
  <data name="StoreViolationNoInstanceBound" xml:space="preserve">
    <value>The persistence provider implementation of InstanceStore in use is invalid. It failed to bind the InstanceHandle to an instance and set the InstanceState while processing a LoadWorkflowByInstanceKeyCommand, a LoadWorkflowCommand or a TryLoadRunnableWorkflowCommand.</value>
  </data>
  <data name="SubexpressionResultWasNotVisible" xml:space="preserve">
    <value>The sub-expression for the object of type '{0}' resulted in a location reference that is not visible at this scope.</value>
  </data>
  <data name="SubexpressionResultWasNull" xml:space="preserve">
    <value>The sub-expression for the object of type '{0}' resulted in a null value.</value>
  </data>
  <data name="SwitchCaseKeyTypesMustMatchExpressionType" xml:space="preserve">
    <value>Switch '{0}' cases contains {1} key(s) that are not compatible with the expression type of '{2}'.</value>
  </data>
  <data name="SwitchCaseNotFound" xml:space="preserve">
    <value>The Switch activity '{0}' could not find a Case activity matching the Expression result.</value>
  </data>
  <data name="SwitchCaseNullWithValueType" xml:space="preserve">
    <value>A null case key exists but the Switch Expression is the value type '{0}'.  Value types cannot be null.</value>
  </data>
  <data name="SwitchCaseTypeMismatch" xml:space="preserve">
    <value>Case key '{0}' is not of type '{1}' and may not ever match any value yielded by the Switch Expression of type 'InArgument&lt;{1}&gt;'.</value>
  </data>
  <data name="SymbolNamesMustBeUnique" xml:space="preserve">
    <value>A variable, RuntimeArgument or a DelegateArgument already exists with the name '{0}'. Names must be unique within an environment scope.</value>
  </data>
  <data name="SymbolResolverAlreadyExists" xml:space="preserve">
    <value>A workflow instance can only be configured with a single SymbolResolver.  There is already a SymbolResolver in the WorkflowInstanceExtensionManager.</value>
  </data>
  <data name="SymbolResolverDoesNotHaveSymbol" xml:space="preserve">
    <value>The symbol '{0}' with type '{1}' could not be found in the SymbolResolver extension for this instance.</value>
  </data>
  <data name="SymbolResolverMustBeSingleton" xml:space="preserve">
    <value>SymbolResolver cannot be used as a per-instance extension. Use the singletonObject overload to add a SymbolResolver to your WorkflowInstanceExtensionManager.</value>
  </data>
  <data name="TargetContractCannotBeOneWayWithTransactionFlow" xml:space="preserve">
    <value>Invalid contract definition: one-way operation has TransactionFlowOption set to Mandatory in operation '{0}' of contract '{1}'.</value>
  </data>
  <data name="TargetTypeAndTargetObjectAreMutuallyExclusive" xml:space="preserve">
    <value>TargetType and TargetObject are mutually exclusive for {0} '{1}'.</value>
  </data>
  <data name="TargetTypeCannotBeEnum" xml:space="preserve">
    <value>The type of operand in {0} '{1}' cannot be enum type.</value>
  </data>
  <data name="TargetTypeIsValueType" xml:space="preserve">
    <value>The type of operand is a value type. The modification to field in '{0}' '{1}' won't take effect.</value>
  </data>
  <data name="TaskTimedOutError" xml:space="preserve">
    <value>The task timed out after {0}. The time allotted to this operation may have been a portion of a longer timeout.</value>
  </data>
  <data name="TextExpressionCompilerActivityNameRequired" xml:space="preserve">
    <value>TextExpressionCompilerSettings.ActivityName must be supplied.</value>
  </data>
  <data name="TextExpressionCompilerActivityNamespaceRequired" xml:space="preserve">
    <value>TextExpressionCompilerSettings.ActivityNamespace must be supplied.</value>
  </data>
  <data name="TextExpressionCompilerActivityRequired" xml:space="preserve">
    <value>TextExpressionCompilerSettings.Activity must be supplied.</value>
  </data>
  <data name="TextExpressionCompilerAddGeneratedFileRequired" xml:space="preserve">
    <value>TextExpressionCompilerSettings.AddGeneratedFile must be supplied.</value>
  </data>
  <data name="TextExpressionCompilerLanguageRequired" xml:space="preserve">
    <value>TextExpressionCompilerSettings.Language must be supplied.</value>
  </data>
  <data name="TextExpressionCompilerNoCodebase" xml:space="preserve">
    <value>The assembly loaded for the name '{0}' does not contain a CodeBase value.  CodeBase is required for compilation.</value>
  </data>
  <data name="TextExpressionCompilerOutputPathRequired" xml:space="preserve">
    <value>TextExpressionCompilerSettings.OutputPath must be supplied.</value>
  </data>
  <data name="TextExpressionCompilerUnableToLoadAssembly" xml:space="preserve">
    <value>Unable to load assembly '{0}'.</value>
  </data>
  <data name="TextExpressionMetadataRequiresCompilation" xml:space="preserve">
    <value>Expression Activity type '{0}' requires compilation in order to run.  Please ensure that the workflow has been compiled.</value>
  </data>
  <data name="ThreadNeutralSemaphoreAborted" xml:space="preserve">
    <value>ThreadNeutralSemaphore has been aborted.</value>
  </data>
  <data name="ThrowingEtwException" xml:space="preserve">
    <value>Throwing an exception. Source: {0}. Exception details: {1}</value>
  </data>
  <data name="ThrowingEtwExceptionVerbose" xml:space="preserve">
    <value>Throwing an exception. Source: {0}. Exception details: {1}</value>
  </data>
  <data name="ThrowingException" xml:space="preserve">
    <value>Throwing an exception. Source: {0}. Exception details: {1}</value>
  </data>
  <data name="ThrowingExceptionVerbose" xml:space="preserve">
    <value>Throwing an exception. Source: {0}. Exception details: {1}</value>
  </data>
  <data name="TimedOutWaitingForLockResolution" xml:space="preserve">
    <value>The persistence provider was unable to reclaim the lock within the timeout provided. This may indicate a deadlock in the pattern of commands simultaneously being executed on different InstanceHandles owned by the same InstanceOwner. This can be alleviated by using multiple InstanceOwners or by ensuring that InstancePersistenceCommand.AutomaticallyAcquiringLock returns false for commands which do not potentially acquire a lock the instance.</value>
  </data>
  <data name="TimeoutInputQueueDequeue" xml:space="preserve">
    <value>A Dequeue operation timed out after {0}. The time allotted to this operation may have been a portion of a longer timeout.</value>
  </data>
  <data name="TimeoutMustBeNonNegative" xml:space="preserve">
    <value>Argument {0} must be a non-negative timeout value. Provided value was {1}.</value>
  </data>
  <data name="TimeoutMustBePositive" xml:space="preserve">
    <value>Argument {0} must be a positive timeout value. Provided value was {1}.</value>
  </data>
  <data name="TimeoutOnOperation" xml:space="preserve">
    <value>The operation did not complete within the allotted timeout of {0}. The time allotted to this operation may have been a portion of a longer timeout.</value>
  </data>
  <data name="TimeoutOnSqlOperation" xml:space="preserve">
    <value>The operation did not complete within the allotted timeout of {0}. The time allotted to this operation may have been a portion of a longer timeout.</value>
  </data>
  <data name="TimeoutOpeningSqlConnection" xml:space="preserve">
    <value>Timeout trying to open a SQL connection. The operation did not complete within the allotted timeout of {0}. The time allotted to this operation may have been a portion of a longer timeout.</value>
  </data>
  <data name="TimerExtensionAlreadyAttached" xml:space="preserve">
    <value>This TimerExtension has already been attached to a workflow instance.</value>
  </data>
  <data name="TimerExtensionRequiresWorkflowInstance" xml:space="preserve">
    <value>TimerExtension can only be used while it is attached to a workflow instance.</value>
  </data>
  <data name="TooManyViolationsForExceptionMessage" xml:space="preserve">
    <value>&lt;truncated&gt; The exception message has been truncated due to size.  Use ActivityValidationServices to see all violations.</value>
  </data>
  <data name="TraceCodeEventLogCritical" xml:space="preserve">
    <value>Wrote to the EventLog.</value>
  </data>
  <data name="TraceCodeEventLogError" xml:space="preserve">
    <value>Wrote to the EventLog.</value>
  </data>
  <data name="TraceCodeEventLogInfo" xml:space="preserve">
    <value>Wrote to the EventLog.</value>
  </data>
  <data name="TraceCodeEventLogVerbose" xml:space="preserve">
    <value>Wrote to the EventLog.</value>
  </data>
  <data name="TraceCodeEventLogWarning" xml:space="preserve">
    <value>Wrote to the EventLog.</value>
  </data>
  <data name="TraceCorrelationKeys" xml:space="preserve">
    <value>Calculated correlation key '{0}' using values '{1}' in parent scope '{2}'.</value>
  </data>
  <data name="TrackingDataExtracted" xml:space="preserve">
    <value>Tracking data {0} extracted in activity {1}.</value>
  </data>
  <data name="TrackingProfileNotFound" xml:space="preserve">
    <value>TrackingProfile '{0}' for the ActivityDefinitionId '{1}' not found. Either the TrackingProfile is not found in the config file or the ActivityDefinitionId does not match.</value>
  </data>
  <data name="TrackingRecordDropped" xml:space="preserve">
    <value>Size of tracking record {0} exceeds maximum allowed by the ETW session for provider {1}</value>
  </data>
  <data name="TrackingRecordRaised" xml:space="preserve">
    <value>Tracking Record {0} raised to {1}.</value>
  </data>
  <data name="TrackingRecordTruncated" xml:space="preserve">
    <value>Truncated tracking record {0} written to ETW session with provider {1}. Variables/annotations/user data have been removed</value>
  </data>
  <data name="TrackingRelatedWorkflowAbort" xml:space="preserve">
    <value>An error occurred while calling tracking participants causing the instance to be aborted.  See the inner exception for more details.</value>
  </data>
  <data name="TrackingValueNotSerializable" xml:space="preserve">
    <value>The extracted argument/variable '{0}' is not serializable.</value>
  </data>
  <data name="TransactedReceiveScopeEndCommitFailed" xml:space="preserve">
    <value>The call to EndCommit on the CommittableTransaction with id = '{0}' threw a TransactionException with the following message: '{1}'.</value>
  </data>
  <data name="TransactedReceiveScopeMustHaveValidReceive" xml:space="preserve">
    <value>The Request property of the TransactedReceiveScope '{0}' must be set to a valid Receive activity.</value>
  </data>
  <data name="TransactedReceiveScopeRequiresReceive" xml:space="preserve">
    <value>ReceiveActivity property must be set before TransactedReceiveScope '{0}'can be used.</value>
  </data>
  <data name="TransactionHandleAlreadyHasTransaction" xml:space="preserve">
    <value>The TransactionHandle already has a transaction.  A new transaction cannot be configured.</value>
  </data>
  <data name="TransactionInDoubtNonHost" xml:space="preserve">
    <value>Although no ambient transaction was present when InstanceStore.Execute or BeginExecute was invoked, an internal transaction was used in the processing of the command. The internal transaction entered the InDoubt state.</value>
  </data>
  <data name="TransactionPersistenceTimeout" xml:space="preserve">
    <value>The request timed out because the instance was locked by other transactions.</value>
  </data>
  <data name="TransactionRolledBackNonHost" xml:space="preserve">
    <value>Although no ambient transaction was present when InstanceStore.Execute or BeginExecute was invoked, an internal transaction was used in the processing of the command. The internal transaction was aborted.</value>
  </data>
  <data name="TransitionCannotBeAddedTwice" xml:space="preserve">
    <value>Transition '{0}' cannot be added to state '{1}' because it has been added to state '{2}'.</value>
  </data>
  <data name="TransitionTargetCannotBeNull" xml:space="preserve">
    <value>'To' property of transition '{0}' of state '{1}' must not be null.</value>
  </data>
  <data name="TriggerOrConditionChangedDuringTransitioning" xml:space="preserve">
    <value>StateMachine does not support Dynamic Update if the Trigger or Condition activity of the executing transition has been changed.</value>
  </data>
  <data name="TriggerOrConditionIsReferenced" xml:space="preserve">
    <value>StateMachine does not support Dynamic Update when any of its Trigger or Condition is a reference to an imported child.</value>
  </data>
  <data name="TryCatchExceptionDuringCancelation" xml:space="preserve">
    <value>A child activity of the TryCatch activity '{0}' has thrown an exception during cancelation.</value>
  </data>
  <data name="TryCatchExceptionFromCatchOrFinally" xml:space="preserve">
    <value>A Catch or Finally activity that is associated with the TryCatch activity '{0}' has thrown an exception.</value>
  </data>
  <data name="TryCatchExceptionFromTry" xml:space="preserve">
    <value>The TryCatch activity '{0}' has caught an exception of type '{1}'.</value>
  </data>
  <data name="TryCatchInvalidStateForUpdate" xml:space="preserve">
    <value>Cannot update inside TryCatch because an exception of type '{0}' has been caught but the matching catch block has been removed.</value>
  </data>
  <data name="TryCommandCannotExecuteSubCommandsAndReduce" xml:space="preserve">
    <value>The persistence provider implementation of InstanceStore in use is invalid. It returned false from TryCommand (or EndTryCommand) after executing a nested command using InstancePersistenceContext.Execute (or BeginExecute). If a persistence provider understands and acts upon a command, it must return true.</value>
  </data>
  <data name="TryLoadRequiresOwner" xml:space="preserve">
    <value>The WorkflowApplication.LoadRunnableInstance operation requires an explicitly created InstanceOwner. To use this method, create an instance owner that has a workflow host type and set it as the DefaultInstanceOwner of the InstanceStore.</value>
  </data>
  <data name="TryLoadRequiresWorkflowType" xml:space="preserve">
    <value>In order to match and load a runnable instance in the store, the requesting InstanceOwner must have specified a workflow host type when it was created. To do so, add a key-value pair to the CreateWorkflowOwnerCommand.InstanceOwnerMetadata property bag when issuing the command. The key is the WorkflowHostType key provided in the documentation. The value must be an XName and match that of the instances being loaded.</value>
  </data>
  <data name="TryRegisterRequestContextFailed" xml:space="preserve">
    <value>Some context on the correlation handler was not consumed properly. Make sure that the handler was initialized properly by the runtime and the workflow has a Send followed by Receive or ReceiveReply activity.</value>
  </data>
  <data name="TwoReceiveParametersWithSameNameButDifferentParameterCount" xml:space="preserve">
    <value>Two ReceiveParametersContent objects with same ServiceContractName and OperationName '{0}' have different number of parameters.</value>
  </data>
  <data name="TwoReceiveParametersWithSameNameButDifferentParameterName" xml:space="preserve">
    <value>Two ReceiveParametersContent objects with same ServiceContractName and OperationName '{0}' have different parameter names.</value>
  </data>
  <data name="TwoReceiveParametersWithSameNameButDifferentParameterType" xml:space="preserve">
    <value>Two ReceiveParametersContent objects with same ServiceContractName and OperationName '{0}' have different parameter types.</value>
  </data>
  <data name="TwoReceivesWithSameNameButDifferentAction" xml:space="preserve">
    <value>Two Receive objects with same ServiceContractName and OperationName '{0}' have different Action.</value>
  </data>
  <data name="TwoReceivesWithSameNameButDifferentIsOneWay" xml:space="preserve">
    <value>Two Receive objects with same ServiceContractName and OperationName '{0}' have different IsOneWay values.</value>
  </data>
  <data name="TwoReceivesWithSameNameButDifferentTxProperties" xml:space="preserve">
    <value>Two Receive objects with same ServiceContractName and OperationName '{0}' have different transaction properties.</value>
  </data>
  <data name="TwoReceivesWithSameNameButDifferentValueType" xml:space="preserve">
    <value>Two Receive objects with same ServiceContractName and OperationName '{0}' have different ValueType.</value>
  </data>
  <data name="TwoSendRepliesWithSameNameButDifferentAction" xml:space="preserve">
    <value>Two SendReply objects with same ServiceContractName and OperationName '{0}' have different Action.</value>
  </data>
  <data name="TwoSendRepliesWithSameNameButDifferentValueType" xml:space="preserve">
    <value>Two SendReply objects with same ServiceContractName and OperationName '{0}' have different ValueType.</value>
  </data>
  <data name="TwoSendReplyParametersWithSameNameButDifferentParameterCount" xml:space="preserve">
    <value>Two SendParametersContent objects with same ServiceContractName and OperationName '{0}' have different number of parameters.</value>
  </data>
  <data name="TwoSendReplyParametersWithSameNameButDifferentParameterName" xml:space="preserve">
    <value>Two SendParameters objects with same ServiceContractName and OperationName '{0}' have different parameter names.</value>
  </data>
  <data name="TwoSendReplyParametersWithSameNameButDifferentParameterType" xml:space="preserve">
    <value>Two SendParameters objects with same ServiceContractName and OperationName '{0}' have different parameter types.</value>
  </data>
  <data name="TwoWayIsImplementedAsOneWay" xml:space="preserve">
    <value>Operation '{0}' in contract '{1}' is specified as two-way, but is missing a SendReply. Please add a SendReply activity for the operation.</value>
  </data>
  <data name="TypeConverterHelperCacheAddFailed" xml:space="preserve">
    <value>Failed adding a TypeConverterHelper for type '{0}' to the internal cache of helpers.</value>
  </data>
  <data name="TypeMismatchForAssign" xml:space="preserve">
    <value>Cannot assign from type '{0}' to type '{1}' in Assign activity '{2}'.</value>
  </data>
  <data name="TypeMustbeValueType" xml:space="preserve">
    <value>The type '{0}' must be value type.</value>
  </data>
  <data name="TypeNotAssignableTo" xml:space="preserve">
    <value>{0} is not assignable to {1}.</value>
  </data>
  <data name="UnableToDeserializeHttpResponseContent" xml:space="preserve">
    <value>Unable to deserialize ResponseContent of type '{0}'.</value>
  </data>
  <data name="UnableToLocateCompiledLocationContext" xml:space="preserve">
    <value>Unable to locate the ICompiledExpressionRoot for compiled location '{0}'.  Make sure that the definition for the activity containing this expression has been compiled.</value>
  </data>
  <data name="UnableToOpenAndRegisterStore" xml:space="preserve">
    <value>The InstanceStore could not be initialized.</value>
  </data>
  <data name="UnconditionalTransitionShouldNotShareNullTriggersWithOthers" xml:space="preserve">
    <value>Trigger-less transition '{0}' of state '{1}' must contain a condition.  A state can only have one unconditional transition that has no trigger.</value>
  </data>
  <data name="UnconditionalTransitionShouldNotShareTriggersWithOthers" xml:space="preserve">
    <value>Transition '{0}' of state '{1}' is an unconditional transition. It may not share the same trigger '{2}' with other transition(s).</value>
  </data>
  <data name="UnexpectedArgumentCount" xml:space="preserve">
    <value>The number of arguments specified in the collection '{0}' is '{1}' whereas the expected count is '{2}'. </value>
  </data>
  <data name="UnexpectedExpressionNodeType" xml:space="preserve">
    <value>Expression node of type '{0}' is expected, but expression node of type '{1}' was provided.</value>
  </data>
  <data name="UnhandledException" xml:space="preserve">
    <value>Unhandled exception.  Exception details: {0}</value>
  </data>
  <data name="UninitializedCannotHaveData" xml:space="preserve">
    <value>The persistence provider implementation of InstanceStore in use is invalid. It reported loading an instance with InstanceState.Uninitialized that contained instance data. Uninitialized instances may not contain instance data.</value>
  </data>
  <data name="UnInitializedRuntimeTransactionHandle" xml:space="preserve">
    <value>The specified RuntimeTransactionHandle was not properly initialized.</value>
  </data>
  <data name="UnknownCompressionOption" xml:space="preserve">
    <value>The requested compression option {0} is not a valid option.</value>
  </data>
  <data name="UnknownDatabaseVersion" xml:space="preserve">
    <value>The version of the database cannot be determined as no rows were found in System.Activities.DurableInstancing.SqlWorkflowInstanceStoreVersionTable.  This table should contain a single row that corresponds to the version of the framework that it was created with or upgraded to.</value>
  </data>
  <data name="UnknownExpressionCompilationError" xml:space="preserve">
    <value>There was an unknown error processing the expression "{0}". Processing the expression text did not cause an exception but also did not create an executable expression.</value>
  </data>
  <data name="UnknownLanguage" xml:space="preserve">
    <value>Unable to use '{0}' as a language for expressions.</value>
  </data>
  <data name="UnknownSprocResult" xml:space="preserve">
    <value>Stored procedure returned unknown execution result {0}.</value>
  </data>
  <data name="UnlockInstanceException" xml:space="preserve">
    <value>Encountered exception {0} while attempting to unlock instance.</value>
  </data>
  <data name="UnmatchedNoPersistExit" xml:space="preserve">
    <value>There was an unmatched exit on the NoPersistHandle.  Exit can only be called once per enter.</value>
  </data>
  <data name="UnopenedActivitiesCannotBeExecuted" xml:space="preserve">
    <value>Only opened activities can be executed.  Activity '{0}' has not been opened.</value>
  </data>
  <data name="UnsupportedExpressionType" xml:space="preserve">
    <value>Expression of type '{0}' is not supported.</value>
  </data>
  <data name="UnsupportedLocationReferenceValue" xml:space="preserve">
    <value>LocationReference value must be either a Variable, a RuntimeArgument or a DelegateArgument.</value>
  </data>
  <data name="UnsupportedMemberExpressionWithType" xml:space="preserve">
    <value>MemberExpression retrieving a member of type '{0}' is not supported.</value>
  </data>
  <data name="UnsupportedReferenceExpressionType" xml:space="preserve">
    <value>Expression of type '{0}' is not supported for LValue.</value>
  </data>
  <data name="UnusedInputArguments" xml:space="preserve">
    <value>The following keys from the input dictionary do not map to arguments and must be removed: {0}.  Please note that argument names are case sensitive.</value>
  </data>
  <data name="UnwrappedMessageNotSupported" xml:space="preserve">
    <value>Unwrapped messages are only supported using MessageContracts. Please use MessageContract type for operation '{0}' of implemented contract '{1}'.</value>
  </data>
  <data name="UpdateDefinitionNotFound" xml:space="preserve">
    <value>WorkflowIdentity '{0}' does not match any of the hosted WorkflowServices.</value>
  </data>
  <data name="UpdateMapBuilderRequiredProperty" xml:space="preserve">
    <value>Property '{0}' on DynamicUpdateMapBuilder must be set.</value>
  </data>
  <data name="UpdateMapNotFound" xml:space="preserve">
    <value>There is no DynamicUpdateMap available for updating from WorkflowIdentity '{0}' to '{1}'.</value>
  </data>
  <data name="UpdateSymbolsMustMatch" xml:space="preserve">
    <value>The original and updated workflow must have the same count, name, type and order of external symbols.</value>
  </data>
  <data name="UriBaseMustBeSpecified" xml:space="preserve">
    <value>The UriBase argument must be specified in activity '{0}'.</value>
  </data>
  <data name="UseInstanceStoreInsteadOfPersistenceProvider" xml:space="preserve">
    <value>System.ServiceModel.Activities.WorkflowServiceHost is incompatible with System.ServiceModel.Persistence.PersistenceProviderBehavior.  The PersistenceProviderBehavior or derived class, such as SqlPersistenceProviderBehavior, should be removed.  To enable persistence with WorkflowServiceHost, a behavior which installs a System.Runtime.DurableInstancing.InstanceStore should be used instead, such as SqlInstanceStoreBehavior.</value>
  </data>
  <data name="ValidateUnlockInstance" xml:space="preserve">
    <value>The instance persistence system is unable to process an invalid InstancePersistenceCommand. The command requires the UnlockInstance property to be set to be true if CompleteInstance property is set to true.</value>
  </data>
  <data name="ValidationContextCannotBeNull" xml:space="preserve">
    <value>The ToValidateContext argument of the {0} named '{1}' resolved to null.  A non-null validation context object must be provided.</value>
  </data>
  <data name="ValidationErrorPrefixForHiddenActivity" xml:space="preserve">
    <value>The private implementation of activity '{0}' has the following validation error:   </value>
  </data>
  <data name="ValidationErrorPrefixForPublicActivityWithHiddenParent" xml:space="preserve">
    <value>The private implementation of activity '{0}' has the following validation error in the activity '{1}':   </value>
  </data>
  <data name="ValueArgumentTypeNotDerivedFromValueType" xml:space="preserve">
    <value>The ArgumentType of Message is not a derived type from DeclaredMessageType in activity '{0}' with OperationName='{1}'.</value>
  </data>
  <data name="ValueCannotBeNegative" xml:space="preserve">
    <value>'{0}' should be greater than or equal to zero.</value>
  </data>
  <data name="ValueCannotBeNull" xml:space="preserve">
    <value>The Content property must be set in activity '{0}' with OperationName='{1}'.</value>
  </data>
  <data name="ValueCollectionUpdatesNotAllowed" xml:space="preserve">
    <value>Mutating a value collection derived from a dictionary is not allowed.</value>
  </data>
  <data name="ValueMustBeAssignableToType" xml:space="preserve">
    <value>The provided value must be assignable to the provided type.</value>
  </data>
  <data name="ValueMustBeNonNegative" xml:space="preserve">
    <value>Value must be non-negative.</value>
  </data>
  <data name="ValueTooLarge" xml:space="preserve">
    <value>'{0}' bigger than Int32.MaxValue is not honored. To disable timeout, specify TimeSpan.MaxValue.</value>
  </data>
  <data name="VariableAlreadyInUseOnActivity" xml:space="preserve">
    <value>Variable '{0}' can not be used on Activity '{1}' because it is already in use by Activity '{2}'.</value>
  </data>
  <data name="VariableCannotBePopulatedInLocationEnvironment" xml:space="preserve">
    <value>Variable {0} cannot be populated in the LocationEnvironment.</value>
  </data>
  <data name="VariableDoesNotExist" xml:space="preserve">
    <value>Variable '{0}' does not exist in this environment.</value>
  </data>
  <data name="VariableExpressionTypeMismatch" xml:space="preserve">
    <value>The Default of Variable '{0}' requires type '{1}', but an Activity with result type '{2}' is provided.</value>
  </data>
  <data name="VariableIsReadOnly" xml:space="preserve">
    <value>Variable '{0}' is read only and cannot be modified.</value>
  </data>
  <data name="VariableMustBeSet" xml:space="preserve">
    <value>Variable must be set before CacheMetadata is called.</value>
  </data>
  <data name="VariableNameNotAnIdentifier" xml:space="preserve">
    <value>Variable name '{0}' can not be serialized as it does not represent a valid identifier.</value>
  </data>
  <data name="VariableNotOpen" xml:space="preserve">
    <value>Variable '{0}' of type '{1}' cannot be used. Please make sure it is declared in an Activity or SymbolResolver.</value>
  </data>
  <data name="VariableNotVisible" xml:space="preserve">
    <value>The referenced Variable object (Name = '{0}') is not visible at this scope.  There may be another location reference with the same name that is visible at this scope, but it does not reference the same location.</value>
  </data>
  <data name="VariableOnlyAccessibleAtScopeOfDeclaration" xml:space="preserve">
    <value>Activity '{0}' cannot access this variable because it is declared at the scope of activity '{1}'.  An activity can only access its own implementation variables.</value>
  </data>
  <data name="VariableOrArgumentAdditionToReferencedEnvironmentNoDUSupported" xml:space="preserve">
    <value>Adding variables or arguments to an already completed activity that can be referenced by the compensation handler or the confirmation handler is not supported.</value>
  </data>
  <data name="VariableOrArgumentDoesNotExist" xml:space="preserve">
    <value>Variable or argument '{0}' does not exist in this environment.</value>
  </data>
  <data name="VariableShouldBeOpen" xml:space="preserve">
    <value>Variable '{0}' must be included in an activity before it is used.</value>
  </data>
  <data name="VariableTypeInvalid" xml:space="preserve">
    <value>Variable '{0}' cannot be used in an expression of type '{1}', since it is of type '{2}' which is not compatible.</value>
  </data>
  <data name="VariableTypeNotMatchLocationType" xml:space="preserve">
    <value>Variable type '{0}' does not match Location type '{1}'.</value>
  </data>
  <data name="ExpressionTamperedSinceLastCompiled" xml:space="preserve">
    <value>GetExpressionTree failed to get an expression tree because the expression text or the LocationReferenceEnvironment visible to it has been altered since it was cached.  The compile error message is : {0}.</value>
  </data>
  <data name="WaitAlreadyInProgress" xml:space="preserve">
    <value>An InstanceHandle can have at most one outstanding WaitForEvents or BeginWaitForEvents operation in progress at a time. A second operation was attempted. Only call WaitForEvents / BeginWaitForEvents once the previous operation has completed.</value>
  </data>
  <data name="WaitForEventsTimedOut" xml:space="preserve">
    <value>A WaitForEvents or BeginWaitForEvents operation timed out after {0}. The time allotted to this operation may have been a portion of a longer timeout.</value>
  </data>
  <data name="WDCDisposed" xml:space="preserve">
    <value>A WorkflowDataContext can only be accessed within the scope of the activity it was obtained in.</value>
  </data>
  <data name="WfMessageReceived" xml:space="preserve">
    <value>Message received by workflow</value>
  </data>
  <data name="WfMessageSent" xml:space="preserve">
    <value>Message sent from workflow</value>
  </data>
  <data name="WhileRequiresCondition" xml:space="preserve">
    <value>Condition must be set before While activity '{0}' can be used.</value>
  </data>
  <data name="WindowsGroupNotFound" xml:space="preserve">
    <value>Could not find the windows group '{0}'.</value>
  </data>
  <data name="WorkflowAbortedReason" xml:space="preserve">
    <value>{0} InnerException Message: {1}</value>
  </data>
  <data name="WorkflowActivityResume" xml:space="preserve">
    <value>WorkflowInstance Id: '{0}' E2E Activity</value>
  </data>
  <data name="WorkflowActivityStart" xml:space="preserve">
    <value>WorkflowInstance Id: '{0}' E2E Activity</value>
  </data>
  <data name="WorkflowActivityStop" xml:space="preserve">
    <value>WorkflowInstance Id: '{0}' E2E Activity</value>
  </data>
  <data name="WorkflowActivitySuspend" xml:space="preserve">
    <value>WorkflowInstance Id: '{0}' E2E Activity</value>
  </data>
  <data name="WorkflowApplicationAborted" xml:space="preserve">
    <value>The operation could not be performed because WorkflowApplication {0} is aborted.</value>
  </data>
  <data name="WorkflowApplicationAlreadyHasId" xml:space="preserve">
    <value>An instance ID has been generated for the WorkflowApplication because the 'Id' property was read. WorkflowApplication cannot be used to load an instance once an ID has been generated.</value>
  </data>
  <data name="WorkflowApplicationCompleted" xml:space="preserve">
    <value>WorkflowInstance Id: '{0}' has completed in the Closed state.</value>
  </data>
  <data name="WorkflowApplicationIdled" xml:space="preserve">
    <value>WorkflowApplication Id: '{0}' went idle.</value>
  </data>
  <data name="WorkflowApplicationInstanceAbandoned" xml:space="preserve">
    <value>This WorkflowApplicationInstance has already been abandoned, or is in the process of abandoning. No further operations may be performed on it.</value>
  </data>
  <data name="WorkflowApplicationInstanceLoaded" xml:space="preserve">
    <value>This WorkflowApplicationInstance has already been associated with a WorkflowApplication. To control the instance, use that WorkflowApplication.</value>
  </data>
  <data name="WorkflowApplicationPersistableIdle" xml:space="preserve">
    <value>WorkflowApplication Id: '{0}' is idle and persistable.  The following action will be taken: {1}.</value>
  </data>
  <data name="WorkflowApplicationPersisted" xml:space="preserve">
    <value>WorkflowApplication Id: '{0}' was Persisted.</value>
  </data>
  <data name="WorkflowApplicationTerminated" xml:space="preserve">
    <value>WorkflowApplication Id: '{0}' was terminated. It has completed in the Faulted state with an exception.</value>
  </data>
  <data name="WorkflowApplicationUnhandledException" xml:space="preserve">
    <value>WorkflowInstance Id: '{0}' has encountered an unhandled exception.  The exception originated from Activity '{1}', DisplayName: '{2}'.  The following action will be taken: {3}.</value>
  </data>
  <data name="WorkflowApplicationUnloaded" xml:space="preserve">
    <value>WorkflowInstance Id: '{0}' was Unloaded.</value>
  </data>
  <data name="WorkflowBehaviorWithNonWorkflowHost" xml:space="preserve">
    <value>The '{0}' behavior must be applied to a WorkflowServiceHost.</value>
  </data>
  <data name="WorkflowCompletionAsyncResultCannotBeNull" xml:space="preserve">
    <value>The AsyncResult returned from OnBeginWorkflowCompleted cannot be null.</value>
  </data>
  <data name="WorkflowControlEndpointDefaultBaseUriNotSupportedInPartialTrust" xml:space="preserve">
    <value>The default value for WorkflowControlEndpoint.DefaultBaseUri is not supported in Partial Trust. Use configuration or the non-default constructor to specify the binding and address for the WorkflowControlEndpoint.</value>
  </data>
  <data name="WorkflowIdentityNullHostId" xml:space="preserve">
    <value>An instance that persisted with a WorkflowIdentity ('{0}') cannot be loaded in a host with no WorkflowIdentity specified.</value>
  </data>
  <data name="WorkflowIdentityNullStateId" xml:space="preserve">
    <value>An instance that persisted without a WorkflowIdentity cannot be loaded in a host that has WorkflowIdentity ('{0}') specified. The instance can be loaded using a different definition, or updated using Dynamic Update.</value>
  </data>
  <data name="WorkflowIdentityStateIdHostIdMismatch" xml:space="preserve">
    <value>The WorkflowIdentity ('{0}') of the loaded instance does not match the WorkflowIdentity ('{1}') of the provided workflow definition. The instance can be loaded using a different definition, or updated using Dynamic Update.</value>
  </data>
  <data name="WorkflowInstanceAborted" xml:space="preserve">
    <value>The operation could not be performed because WorkflowInstance '{0}' was aborted.</value>
  </data>
  <data name="WorkflowInstanceAbortedRecordWithId" xml:space="preserve">
    <value>TrackRecord = WorkflowInstanceAbortedRecord, InstanceID = {0}, RecordNumber = {1}, EventTime = {2}, ActivityDefinitionId = {3}, Reason = {4},  Annotations = {5}, ProfileName = {6}, WorkflowDefinitionIdentity = {7}</value>
  </data>
  <data name="WorkflowInstanceCanceled" xml:space="preserve">
    <value>WorkflowInstance Id: '{0}' has completed in the Canceled state.</value>
  </data>
  <data name="WorkflowInstanceCompleted" xml:space="preserve">
    <value>The operation could not be performed because WorkflowInstance '{0}' has completed.</value>
  </data>
  <data name="WorkflowInstanceIsReadOnly" xml:space="preserve">
    <value>WorkflowInstance '{0}' cannot be modified after it has started running.</value>
  </data>
  <data name="WorkflowInstanceNotFoundInStore" xml:space="preserve">
    <value>The instance '{0}' was found in the instance store, but the instance does not contain a workflow.</value>
  </data>
  <data name="WorkflowInstanceRecordWithId" xml:space="preserve">
    <value>TrackRecord= WorkflowInstanceRecord, InstanceID = {0}, RecordNumber = {1}, EventTime = {2}, ActivityDefinitionId = {3}, State = {4}, Annotations = {5}, ProfileName = {6}, WorkflowDefinitionIdentity = {7}</value>
  </data>
  <data name="WorkflowInstanceSuspendedRecord" xml:space="preserve">
    <value>TrackRecord = WorkflowInstanceSuspendedRecord, InstanceID = {0}, RecordNumber = {1}, EventTime = {2}, ActivityDefinitionId = {3}, Reason = {4}, Annotations = {5}, ProfileName = {6}</value>
  </data>
  <data name="WorkflowInstanceSuspendedRecordWithId" xml:space="preserve">
    <value>TrackRecord = WorkflowInstanceSuspendedRecord, InstanceID = {0}, RecordNumber = {1}, EventTime = {2}, ActivityDefinitionId = {3}, Reason = {4}, Annotations = {5}, ProfileName = {6}, WorkflowDefinitionIdentity = {7}</value>
  </data>
  <data name="WorkflowInstanceTerminated" xml:space="preserve">
    <value>The operation could not be performed because WorkflowInstance '{0}' has terminated.</value>
  </data>
  <data name="WorkflowInstanceTerminatedRecord" xml:space="preserve">
    <value>TrackRecord = WorkflowInstanceTerminatedRecord, InstanceID = {0}, RecordNumber = {1}, EventTime = {2}, ActivityDefinitionId = {3}, Reason = {4}, Annotations = {5}, ProfileName = {6}</value>
  </data>
  <data name="WorkflowInstanceTerminatedRecordWithId" xml:space="preserve">
    <value>TrackRecord = WorkflowInstanceTerminatedRecord, InstanceID = {0}, RecordNumber = {1}, EventTime = {2}, ActivityDefinitionId = {3}, Reason = {4},  Annotations = {5}, ProfileName = {6}, WorkflowDefinitionIdentity = {7}</value>
  </data>
  <data name="WorkflowInstanceUnhandledExceptionRecordWithId" xml:space="preserve">
    <value>TrackRecord = WorkflowInstanceUnhandledExceptionRecord, InstanceID = {0}, RecordNumber = {1}, EventTime = {2}, ActivityDefinitionId = {3}, SourceName = {4}, SourceId = {5}, SourceInstanceId = {6}, SourceTypeName={7}, Exception={8},  Annotations= {9}, ProfileName = {10}, WorkflowDefinitionIdentity = {11}</value>
  </data>
  <data name="WorkflowInstanceUnloaded" xml:space="preserve">
    <value>The operation could not be performed because WorkflowInstance '{0}' was unloaded.</value>
  </data>
  <data name="WorkflowInstanceUnlocked" xml:space="preserve">
    <value>The operation could not be performed because WorkflowInstance {0} is unlocked.</value>
  </data>
  <data name="WorkflowInstanceUpdatedRecord" xml:space="preserve">
    <value>TrackRecord= WorkflowInstanceUpdatedRecord, InstanceID = {0}, RecordNumber = {1}, EventTime = {2}, ActivityDefinitionId = {3}, State = {4}, OriginalDefinitionIdentity = {5}, UpdatedDefinitionIdentity = {6}, Annotations = {7}, ProfileName = {8}</value>
  </data>
  <data name="WorkflowInstanceUpdateFailed" xml:space="preserve">
    <value>WorkflowInstance '{0}' could not be updated to identity '{1}'. Review the tracking output for a list of executing activities that could not be updated.</value>
  </data>
  <data name="WorkflowMustBeHosted" xml:space="preserve">
    <value>Please make sure that a Receive activity is hosted within a WorkflowServiceHost.</value>
  </data>
  <data name="WorkflowServiceDefinitionIdentityNotMatched" xml:space="preserve">
    <value>The WorkflowIdentity ('{0}') of the loaded instance does not match any of the hosted WorkflowServices.</value>
  </data>
  <data name="WorkflowServiceHostCannotAddOrRemoveServiceDefinitionAfterOpen" xml:space="preserve">
    <value>WorkflowService definitions cannot be added or removed after the WorkflowServiceHost has been opened, faulted, aborted or closed.</value>
  </data>
  <data name="WorkflowTerminatedExceptionDefaultMessage" xml:space="preserve">
    <value>The workflow was terminated by a Terminate activity.</value>
  </data>
  <data name="WorkItemAbortedInstance" xml:space="preserve">
    <value>An error processing the current work item has caused the workflow to abort.  See the inner exception for details.</value>
  </data>
  <data name="WrapperNotSupportedInMessageContract" xml:space="preserve">
    <value>Custom wrapper names and namespaces are only supported using MessageContracts. Please use a MessageContract type for operation '{0}' in implemented contract '{1}'.</value>
  </data>
  <data name="WriteAccessToReadOnlyPublicReference" xml:space="preserve">
    <value>Activity '{0}' cannot write to this public location reference because it was declared with ArgumentDirection.In. To allow both reading and writing, declare the reference with ArgumentDirection.InOut.</value>
  </data>
  <data name="WriteonlyPropertyCannotBeRead" xml:space="preserve">
    <value>The property or indexer '{0}.{1}' cannot be used in this context because the get accessor is inaccessible.</value>
  </data>
  <data name="WrongArgumentType" xml:space="preserve">
    <value>The argument has the wrong type.  It is of type '{0}' but must be assignable to '{1}'.</value>
  </data>
  <data name="WrongCacheMetadataForCodeActivity" xml:space="preserve">
    <value>The CacheMetadata method which takes an ActivityMetadata parameter must not be called on a CodeActivity or AsyncCodeActivity.  The correct CacheMetadata for these classes takes a CodeActivityMetadata parameter.</value>
  </data>
  <data name="WrongCacheMetadataForNativeActivity" xml:space="preserve">
    <value>The CacheMetadata method which takes an ActivityMetadata parameter must not be called on a NativeActivity.  The correct CacheMetadata for NativeActivity takes a NativeActivityMetadata parameter.</value>
  </data>
  <data name="WrongEnvironmentCount" xml:space="preserve">
    <value>Expected activity '{0}' to have '{1}' argument(s), '{2}' public variable(s), '{3}' private variable(s), and '{4}' runtime delegate argument(s). Actual: '{5}' arguments, '{6}' public variable(s), '{7}' private variable(s), '{8}' runtime delegate argument(s).</value>
  </data>
  <data name="WrongMemberCount" xml:space="preserve">
    <value>IdSpace with owner '{0}' has '{1}' members; expected '{2}'.</value>
  </data>
  <data name="WrongNumberOfArgumentsForActivityDelegate" xml:space="preserve">
    <value>ActivityDelegate arguments don't match. Check your activity configuration to make sure it is in sync with the declared ActivityDelegate.</value>
  </data>
  <data name="WrongOnCreateDynamicUpdateMapForNativeActivity" xml:space="preserve">
    <value>The OnCreateDynamicUpdateMap method which takes an UpdateMapMetadata parameter must not be called on a NativeActivity.  The correct OnCreateDynamicUpdateMap for NativeActivity takes a NativeActivityUpdateMapMetadata parameter.</value>
  </data>
  <data name="WrongOriginalEnvironmentCount" xml:space="preserve">
    <value>Expected the original environment of activity '{0}' to have '{1}' argument(s), '{2}' public variable(s), '{3}' private variable(s), and '{4}' runtime delegate argument(s), for a total of '{5}'. Actual total of locations is '{6}'.</value>
  </data>
  <data name="XamlBuildTaskResourceNotFound" xml:space="preserve">
    <value>The XAML resource expected to be generated by the XAML build task ({0}) was not found. Try rebuilding the project.</value>
  </data>
  <data name="XamlElementExpected" xml:space="preserve">
    <value>Element representation is expected.</value>
  </data>
  <data name="XamlElementExpectedAt" xml:space="preserve">
    <value>Element representation is expected at line ({0}, {1}).</value>
  </data>
</root>