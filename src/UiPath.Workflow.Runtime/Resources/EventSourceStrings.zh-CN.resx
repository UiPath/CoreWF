<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="event_ActionItemCallbackInvoked" xml:space="preserve">
    <value>已调用 IO 线程调度程序回调。</value>
  </data>
  <data name="event_ActionItemScheduled" xml:space="preserve">
    <value>已调用 IO 线程调度程序回调。</value>
  </data>
  <data name="event_ActivityCompleted" xml:space="preserve">
    <value>Activity“{0}”、DisplayName“{1}”、InstanceId“{2}”在“{3}”状态下完成。</value>
  </data>
  <data name="event_ActivityScheduled" xml:space="preserve">
    <value>父 Activity“{0}”、DisplayName“{1}”、InstanceId“{2}”安排了子 Activity“{3}”、DisplayName“{4}”、InstanceId“{5}”。</value>
  </data>
  <data name="event_AppDomainUnload" xml:space="preserve">
    <value>AppDomain 正在卸载。AppDomain.FriendlyName {0}，ProcessName {1}，ProcessId {2}。</value>
  </data>
  <data name="event_AspNetRoute" xml:space="preserve">
    <value>添加了 serviceType 为“{1}”和 serviceHostFactoryType 为“{2}”的新 ASP.NET 路由“{0}”。</value>
  </data>
  <data name="event_AspNetRoutingService" xml:space="preserve">
    <value>传入请求与带有地址 {0} 的 ASP.NET 路由中定义的某个 WCF 服务匹配。</value>
  </data>
  <data name="event_BinaryMessageDecodingStart" xml:space="preserve">
    <value>BinaryMessageEncoder 已开始解码消息。</value>
  </data>
  <data name="event_BinaryMessageEncodingStart" xml:space="preserve">
    <value>BinaryMessageEncoder 已开始编码消息。</value>
  </data>
  <data name="event_BookmarkScopeInitialized" xml:space="preserve">
    <value>TemporaryId 为“{0}”的 BookmarkScope 已初始化，ID 为“{1}”。</value>
  </data>
  <data name="event_BufferedAsyncWriteStart" xml:space="preserve">
    <value>BufferId:{0} 已完成将“{1}”个字节写入基础流。</value>
  </data>
  <data name="event_BufferedAsyncWriteStop" xml:space="preserve">
    <value>编码器已以异步方式写入消息。</value>
  </data>
  <data name="event_BufferOutOfOrderMessageNoBookmark" xml:space="preserve">
    <value>此时不能执行服务实例“{0}”上的操作“{1}”。服务实例准备好处理此特定操作时，将进行另一个尝试。</value>
  </data>
  <data name="event_BufferOutOfOrderMessageNoInstance" xml:space="preserve">
    <value>此时不能执行操作“{0}”。服务实例准备好处理此特定操作时，将进行另一个尝试。</value>
  </data>
  <data name="event_BufferPoolAllocation" xml:space="preserve">
    <value>池正在分配 {0} 个字节。</value>
  </data>
  <data name="event_BufferPoolChangeQuota" xml:space="preserve">
    <value>BufferPool 的大小为 {0}，按 {1} 更改配额。</value>
  </data>
  <data name="event_CacheRootMetadataStart" xml:space="preserve">
    <value>已在活动“{0}”上启动 CacheRootMetadata</value>
  </data>
  <data name="event_CacheRootMetadataStop" xml:space="preserve">
    <value>已在活动 {0} 上停止 CacheRootMetadata。</value>
  </data>
  <data name="event_CBAEntryRead" xml:space="preserve">
    <value>已处理的 ServiceActivation 元素的相对地址为“{0}”，规范化的相对地址为“{1}”。</value>
  </data>
  <data name="event_CBAMatchFound" xml:space="preserve">
    <value>传入请求与带有地址“{0}”的 ServiceActivation 元素相匹配。</value>
  </data>
  <data name="event_ChannelFactoryCreated" xml:space="preserve">
    <value>已创建 ChannelFactory。</value>
  </data>
  <data name="event_ChannelInitializationTimeout" xml:space="preserve">
    <value>{0}</value>
  </data>
  <data name="event_ChannelReceiveStart" xml:space="preserve">
    <value>ChannelHandlerId:{0} - 消息接收循环已启动。</value>
  </data>
  <data name="event_ChannelReceiveStop" xml:space="preserve">
    <value>ChannelHandlerId:{0} - 消息接收循环已停止。</value>
  </data>
  <data name="event_ClientBaseCachedChannelFactoryCount" xml:space="preserve">
    <value>缓存的通道工厂数量为:“{0}”。最多可以缓存“{1}”个通道工厂。</value>
  </data>
  <data name="event_ClientBaseChannelFactoryAgedOutofCache" xml:space="preserve">
    <value>通道工厂在缓存中已到期，因为缓存已达到其限制“{0}”。</value>
  </data>
  <data name="event_ClientBaseChannelFactoryCacheHit" xml:space="preserve">
    <value>使用了在缓存中找到的匹配通道工厂。</value>
  </data>
  <data name="event_ClientBaseUsingLocalChannelFactory" xml:space="preserve">
    <value>不使用缓存中的通道工厂，即禁用实例缓存。</value>
  </data>
  <data name="event_ClientChannelOpenStart" xml:space="preserve">
    <value>ServiceChannel 打开启动。</value>
  </data>
  <data name="event_ClientChannelOpenStop" xml:space="preserve">
    <value>ServiceChannel 打开停止。</value>
  </data>
  <data name="event_ClientFormatterDeserializeReplyStart" xml:space="preserve">
    <value>客户端已开始反序列化答复消息。</value>
  </data>
  <data name="event_ClientFormatterDeserializeReplyStop" xml:space="preserve">
    <value>客户端已完成反序列化答复消息。</value>
  </data>
  <data name="event_ClientFormatterSerializeRequestStart" xml:space="preserve">
    <value>已开始客户端请求序列化。</value>
  </data>
  <data name="event_ClientFormatterSerializeRequestStop" xml:space="preserve">
    <value>客户端已完成序列化请求消息。</value>
  </data>
  <data name="event_ClientMessageInspectorAfterReceiveInvoked" xml:space="preserve">
    <value>调度程序对“{0}”类型的 ClientMessageInspector 调用了“AfterReceiveReply”。</value>
  </data>
  <data name="event_ClientMessageInspectorBeforeSendInvoked" xml:space="preserve">
    <value>调度程序对“{0}”类型的 ClientMessageInspector 调用了“BeforeSendRequest”。</value>
  </data>
  <data name="event_ClientOperationPrepared" xml:space="preserve">
    <value>客户端正在执行与协定“{1}”相关的操作“{0}”。消息将发送到“{2}”。</value>
  </data>
  <data name="event_ClientParameterInspectorAfterCallInvoked" xml:space="preserve">
    <value>调度程序对“{0}”类型的 ClientParameterInspector 调用了“AfterCall”。</value>
  </data>
  <data name="event_ClientParameterInspectorBeforeCallInvoked" xml:space="preserve">
    <value>调度程序对“{0}”类型的 ClientParameterInspector 调用了“BeforeCall”。</value>
  </data>
  <data name="event_ClientReliableSessionReconnect" xml:space="preserve">
    <value>SessionId:{0} 正在重新连接。</value>
  </data>
  <data name="event_ClientSendPreambleStart" xml:space="preserve">
    <value>客户端开始发送报头。</value>
  </data>
  <data name="event_ClientSendPreambleStop" xml:space="preserve">
    <value>客户端停止发送报头。</value>
  </data>
  <data name="event_CloseTimeout" xml:space="preserve">
    <value>{0}</value>
  </data>
  <data name="event_CompensationState" xml:space="preserve">
    <value>CompensableActivity“{0}”的状态为“{1}”。</value>
  </data>
  <data name="event_CompilationStart" xml:space="preserve">
    <value>开始编译</value>
  </data>
  <data name="event_CompilationStop" xml:space="preserve">
    <value>结束编译</value>
  </data>
  <data name="event_CompileVbExpressionStart" xml:space="preserve">
    <value>正在编译 VB 表达式“{0}”</value>
  </data>
  <data name="event_CompileVbExpressionStop" xml:space="preserve">
    <value>已完成编译 VB 表达式。</value>
  </data>
  <data name="event_CompleteBookmarkWorkItem" xml:space="preserve">
    <value>Activity“{0}”、DisplayName“{1}”、InstanceId“{2}”的 BookmarkWorkItem 已经完成。BookmarkName: {3}，BookmarkScope: {4}。</value>
  </data>
  <data name="event_CompleteCancelActivityWorkItem" xml:space="preserve">
    <value>Activity“{0}”、DisplayName“{1}”、InstanceId“{2}”的 CancelActivityWorkItem 已经完成。</value>
  </data>
  <data name="event_CompleteCompletionWorkItem" xml:space="preserve">
    <value>父 Activity“{0}”、DisplayName“{1}”、InstanceId“{2}”的 CompletionWorkItem 已经完成。完成了 Activity“{3}”、DisplayName“{4}”、InstanceId“{5}”。</value>
  </data>
  <data name="event_CompleteExecuteActivityWorkItem" xml:space="preserve">
    <value>Activity“{0}”、DisplayName“{1}”、InstanceId“{2}”的 ExecuteActivityWorkItem 已经完成。</value>
  </data>
  <data name="event_CompleteFaultWorkItem" xml:space="preserve">
    <value>Activity“{0}”、DisplayName“{1}”、InstanceId“{2}”的 FaultWorkItem 已经完成。异常是从 Activity“{3}”、DisplayName“{4}”、InstanceId“{5}”传播的。</value>
  </data>
  <data name="event_CompleteRuntimeWorkItem" xml:space="preserve">
    <value>Activity“{0}”、DisplayName“{1}”、InstanceId“{2}”的运行时工作项已经完成。</value>
  </data>
  <data name="event_CompleteTransactionContextWorkItem" xml:space="preserve">
    <value>Activity“{0}”、DisplayName“{1}”、InstanceId“{2}”的 TransactionContextWorkItem 已经完成。</value>
  </data>
  <data name="event_ConcurrentCallsRatio" xml:space="preserve">
    <value>并发调用比率: {0}/{1}</value>
  </data>
  <data name="event_ConcurrentInstancesRatio" xml:space="preserve">
    <value>并发实例比率: {0}/{1}</value>
  </data>
  <data name="event_ConcurrentSessionsRatio" xml:space="preserve">
    <value>并发会话比率: {0}/{1}</value>
  </data>
  <data name="event_ConnectionPoolMiss" xml:space="preserve">
    <value>{0} 的池没有可用的连接，{1} 个连接忙。</value>
  </data>
  <data name="event_ConnectionPoolPreambleFailed" xml:space="preserve">
    <value>ConnectionPoolPreambleFailed。</value>
  </data>
  <data name="event_ConnectionReaderSendFault" xml:space="preserve">
    <value>连接读取器发送错误“{0}”。</value>
  </data>
  <data name="event_CreateBookmark" xml:space="preserve">
    <value>已为 Activity“{0}”、DisplayName“{1}”、InstanceId“{2}”创建了书签。BookmarkName: {3}，BookmarkScope: {4}。</value>
  </data>
  <data name="event_CreateBookmarkScope" xml:space="preserve">
    <value>已创建 BookmarkScope: {0}。</value>
  </data>
  <data name="event_CreateServiceHostStart" xml:space="preserve">
    <value>开始 CreateServiceHost</value>
  </data>
  <data name="event_CreateServiceHostStop" xml:space="preserve">
    <value>结束 CreateServiceHost</value>
  </data>
  <data name="event_CreateWorkflowServiceHostStart" xml:space="preserve">
    <value>CreateWorkflowServiceHost 开始</value>
  </data>
  <data name="event_CreateWorkflowServiceHostStop" xml:space="preserve">
    <value>CreateWorkflowServiceHost 停止</value>
  </data>
  <data name="event_DCDeserializeWithSurrogateStart" xml:space="preserve">
    <value>DataContract 开始使用代理项反序列化 {0}。</value>
  </data>
  <data name="event_DCDeserializeWithSurrogateStop" xml:space="preserve">
    <value>DataContract 停止使用代理项反序列化。</value>
  </data>
  <data name="event_DCGenReaderStart" xml:space="preserve">
    <value>DataContract 开始为 {1} 生成 {0} 读取器。</value>
  </data>
  <data name="event_DCGenReaderStop" xml:space="preserve">
    <value>DataContract 生成停止。</value>
  </data>
  <data name="event_DCGenWriterStart" xml:space="preserve">
    <value>DataContract 开始为 {1} 生成 {0} 编写器。</value>
  </data>
  <data name="event_DCGenWriterStop" xml:space="preserve">
    <value>DataContract 停止生成编写器。</value>
  </data>
  <data name="event_DCJsonGenReaderStart" xml:space="preserve">
    <value>Json 开始为 {1} 生成 {0} 读取器。</value>
  </data>
  <data name="event_DCJsonGenReaderStop" xml:space="preserve">
    <value>Json 读取器生成停止。</value>
  </data>
  <data name="event_DCJsonGenWriterStart" xml:space="preserve">
    <value>Json 开始为 {1} 生成 {0} 编写器。</value>
  </data>
  <data name="event_DCJsonGenWriterStop" xml:space="preserve">
    <value>Json 生成编写器停止。</value>
  </data>
  <data name="event_DCResolverResolve" xml:space="preserve">
    <value>DataContract 解析程序开始解析 {0}。</value>
  </data>
  <data name="event_DCSerializeWithSurrogateStart" xml:space="preserve">
    <value>DataContract 开始使用代理项序列化 {0}。</value>
  </data>
  <data name="event_DCSerializeWithSurrogateStop" xml:space="preserve">
    <value>DataContract 停止使用代理项序列化。</value>
  </data>
  <data name="event_DecrementBusyCount" xml:space="preserve">
    <value>调用了 DecrementBusyCount。源: {0}</value>
  </data>
  <data name="event_DiscoveryClientInClientChannelFailedToClose" xml:space="preserve">
    <value>在 DiscoveryClientChannel 内部创建的 DiscoveryClient 无法关闭，因此已中止。</value>
  </data>
  <data name="event_DiscoveryClientProtocolExceptionSuppressed" xml:space="preserve">
    <value>关闭 DiscoveryClient 时，ProtocolException 被禁止。这可能是由于 DiscoveryService 仍在尝试向 DiscoveryClient 发送响应。</value>
  </data>
  <data name="event_DiscoveryClientReceivedMulticastSuppression" xml:space="preserve">
    <value>DiscoveryClient 收到来自 DiscoveryProxy 的多播禁止消息。</value>
  </data>
  <data name="event_DiscoveryMessageReceivedAfterOperationCompleted" xml:space="preserve">
    <value>messageId 为“{1}”的 {0} 消息被 DiscoveryClient 丢弃，因为相应的 {2} 操作已完成。</value>
  </data>
  <data name="event_DiscoveryMessageWithInvalidContent" xml:space="preserve">
    <value>messageId 为“{1}”的 {0} 消息由于具有无效内容而被丢弃。</value>
  </data>
  <data name="event_DiscoveryMessageWithInvalidRelatesToOrOperationCompleted" xml:space="preserve">
    <value>messageId 为“{1}”和 relatesTo 为“{2}”的 {0} 消息被 DiscoveryClient 丢弃，因为相应的 {3} 操作已完成或 relatesTo 值无效。</value>
  </data>
  <data name="event_DiscoveryMessageWithInvalidReplyTo" xml:space="preserve">
    <value>messageId 为“{0}”的发现请求消息由于具有无效的 ReplyTo 地址而被丢弃。</value>
  </data>
  <data name="event_DiscoveryMessageWithNoContent" xml:space="preserve">
    <value>{0} 消息由于没有任何内容而被丢弃。</value>
  </data>
  <data name="event_DiscoveryMessageWithNullMessageId" xml:space="preserve">
    <value>{0} 消息由于消息标头不包含所需 MessageId 属性而被丢弃。</value>
  </data>
  <data name="event_DiscoveryMessageWithNullMessageSequence" xml:space="preserve">
    <value>messageId 为“{1}”的 {0} 消息由于没有 DiscoveryMessageSequence 属性而被 DiscoveryClient 丢弃。</value>
  </data>
  <data name="event_DiscoveryMessageWithNullRelatesTo" xml:space="preserve">
    <value>messageId 为“{1}”的 {0} 消息由于消息标头不包含所需的 RelatesTo 属性而被 DiscoveryClient 丢弃。</value>
  </data>
  <data name="event_DiscoveryMessageWithNullReplyTo" xml:space="preserve">
    <value>messageId 为“{0}”的发现请求消息由于没有 ReplyTo 地址而被丢弃。</value>
  </data>
  <data name="event_DispatchFailed" xml:space="preserve">
    <value>已调度“{0}”操作，但出现错误。</value>
  </data>
  <data name="event_DispatchFormatterDeserializeRequestStart" xml:space="preserve">
    <value>调度程序已开始反序列化请求消息。</value>
  </data>
  <data name="event_DispatchFormatterDeserializeRequestStop" xml:space="preserve">
    <value>调度程序已完成反序列化请求消息。</value>
  </data>
  <data name="event_DispatchFormatterSerializeReplyStart" xml:space="preserve">
    <value>调度程序已开始序列化答复消息。</value>
  </data>
  <data name="event_DispatchFormatterSerializeReplyStop" xml:space="preserve">
    <value>调度程序已完成序列化答复消息。</value>
  </data>
  <data name="event_DispatchMessageBeforeAuthorization" xml:space="preserve">
    <value>启动授权以进行消息调度</value>
  </data>
  <data name="event_DispatchMessageStart" xml:space="preserve">
    <value>消息调度已启动。</value>
  </data>
  <data name="event_DispatchMessageStop" xml:space="preserve">
    <value>消息调度已完成</value>
  </data>
  <data name="event_DispatchSessionFailed" xml:space="preserve">
    <value>会话调度失败。</value>
  </data>
  <data name="event_DispatchSessionStart" xml:space="preserve">
    <value>会话调度已启动。</value>
  </data>
  <data name="event_DispatchSessionSuccess" xml:space="preserve">
    <value>会话调度成功。</value>
  </data>
  <data name="event_DispatchSuccessful" xml:space="preserve">
    <value>已成功调度“{0}”操作。</value>
  </data>
  <data name="event_DuplicateCorrelationQuery" xml:space="preserve">
    <value>找到了含有 Where='{0}' 的重复 CorrelationQuery。计算相关性时将不使用此重复查询。</value>
  </data>
  <data name="event_DuplicateDiscoveryMessage" xml:space="preserve">
    <value>messageId 为“{1}”的 {0} 消息由于重复而被丢弃。</value>
  </data>
  <data name="event_EncryptedDataProcessingStart" xml:space="preserve">
    <value>加密的数据处理已开始。</value>
  </data>
  <data name="event_EncryptedDataProcessingSuccess" xml:space="preserve">
    <value>加密的数据处理已成功。</value>
  </data>
  <data name="event_EndpointDiscoverabilityDisabled" xml:space="preserve">
    <value>已禁用 EndpointAddress 为“{0}”且 ListenUri 为“{1}”的终结点的可发现性。</value>
  </data>
  <data name="event_EndpointDiscoverabilityEnabled" xml:space="preserve">
    <value>已启用 EndpointAddress 为“{0}”且 ListenUri 为“{1}”的终结点的可发现性。</value>
  </data>
  <data name="event_EndSqlCommandExecute" xml:space="preserve">
    <value>结束 SQL 命令执行: {0}</value>
  </data>
  <data name="event_EnterNoPersistBlock" xml:space="preserve">
    <value>正在进入非持久块。</value>
  </data>
  <data name="event_ErrorHandlerInvoked" xml:space="preserve">
    <value>调度程序使用“{2}”类型的异常调用了“{0}”类型的 ErrorHandler。ErrorHandled 为“{1}”。</value>
  </data>
  <data name="event_EstablishConnectionStart" xml:space="preserve">
    <value>已为 {0} 开始建立连接。</value>
  </data>
  <data name="event_EstablishConnectionStop" xml:space="preserve">
    <value>已建立连接。</value>
  </data>
  <data name="event_EtwUnhandledException" xml:space="preserve">
    <value>未经处理的异常。异常的详细信息: {0}</value>
  </data>
  <data name="event_ExecuteWorkItemStart" xml:space="preserve">
    <value>执行工作项启动</value>
  </data>
  <data name="event_ExecuteWorkItemStop" xml:space="preserve">
    <value>执行工作项停止</value>
  </data>
  <data name="event_ExitNoPersistBlock" xml:space="preserve">
    <value>正在退出非持久块。</value>
  </data>
  <data name="event_FailFastException" xml:space="preserve">
    <value>FailFastException。</value>
  </data>
  <data name="event_FaultProviderInvoked" xml:space="preserve">
    <value>调度程序使用“{1}”类型的异常调用了“{0}”类型的 FaultProvider。</value>
  </data>
  <data name="event_FederationMessageCreationStarted" xml:space="preserve">
    <value>从窗体发布创建联合身份验证消息已开始。</value>
  </data>
  <data name="event_FederationMessageCreationSuccess" xml:space="preserve">
    <value>从窗体发布创建联合身份验证消息已成功。</value>
  </data>
  <data name="event_FederationMessageProcessingStarted" xml:space="preserve">
    <value>联合身份验证消息处理已开始。</value>
  </data>
  <data name="event_FederationMessageProcessingSuccess" xml:space="preserve">
    <value>联合身份验证消息处理已成功。</value>
  </data>
  <data name="event_FindInitiatedInDiscoveryClientChannel" xml:space="preserve">
    <value>在 DiscoveryClientChannel 中启动了一个 Find 操作以发现终结点。</value>
  </data>
  <data name="event_FlowchartEmpty" xml:space="preserve">
    <value>Flowchart“{0}”- 在无节点的情况下执行。</value>
  </data>
  <data name="event_FlowchartNextNull" xml:space="preserve">
    <value>Flowchart“{0}”/FlowStep - 下一个节点为 null。Flowchart 执行将结束。</value>
  </data>
  <data name="event_FlowchartStart" xml:space="preserve">
    <value>Flowchart“{0}”- 已安排启动。</value>
  </data>
  <data name="event_FlowchartSwitchCase" xml:space="preserve">
    <value>Flowchart“{0}”/FlowSwitch - 选择 Case“{1}”。</value>
  </data>
  <data name="event_FlowchartSwitchCaseNotFound" xml:space="preserve">
    <value>Flowchart“{0}”/FlowSwitch - 找不到 Case 活动，也找不到与 Expression 结果匹配的 Default Case。Flowchart 执行将结束。</value>
  </data>
  <data name="event_FlowchartSwitchDefault" xml:space="preserve">
    <value>Flowchart“{0}”/FlowSwitch - 选择了 Default Case。</value>
  </data>
  <data name="event_FoundProcessingError" xml:space="preserve">
    <value>命令失败: {0}</value>
  </data>
  <data name="event_GenXmlSerializableStart" xml:space="preserve">
    <value>开始为“{0}”生成 Xml 可序列化内容。</value>
  </data>
  <data name="event_GenXmlSerializableStop" xml:space="preserve">
    <value>生成 Xml 可序列化内容停止。</value>
  </data>
  <data name="event_GetIssuerNameFailure" xml:space="preserve">
    <value>从 tokenId {0} 检索颁发者名称已失败。</value>
  </data>
  <data name="event_GetIssuerNameSuccess" xml:space="preserve">
    <value>从 tokenId {1} 检索颁发者名称 {0} 已成功。</value>
  </data>
  <data name="event_GetServiceInstanceStart" xml:space="preserve">
    <value>服务实例检索已启动。</value>
  </data>
  <data name="event_GetServiceInstanceStop" xml:space="preserve">
    <value>已检索服务实例。</value>
  </data>
  <data name="event_HandledException" xml:space="preserve">
    <value>正在处理异常。异常的详细信息: {0}</value>
  </data>
  <data name="event_HandledExceptionError" xml:space="preserve">
    <value>正在处理异常。异常的详细信息: {0}</value>
  </data>
  <data name="event_HandledExceptionVerbose" xml:space="preserve">
    <value>正在处理异常。异常的详细信息: {0}</value>
  </data>
  <data name="event_HandledExceptionWarning" xml:space="preserve">
    <value>正在处理异常。异常的详细信息: {0}</value>
  </data>
  <data name="event_HostedTransportConfigurationManagerConfigInitStart" xml:space="preserve">
    <value>HostedTransportConfigurationManager 开始配置初始化</value>
  </data>
  <data name="event_HostedTransportConfigurationManagerConfigInitStop" xml:space="preserve">
    <value>HostedTransportConfigurationManager 结束配置初始化</value>
  </data>
  <data name="event_HttpAuthFailed" xml:space="preserve">
    <value>Http 身份验证失败。</value>
  </data>
  <data name="event_HttpChannelRequestAborted" xml:space="preserve">
    <value>Http 通道请求已中止。</value>
  </data>
  <data name="event_HttpChannelResponseAborted" xml:space="preserve">
    <value>Http 通道响应已中止。</value>
  </data>
  <data name="event_HttpContextBeforeProcessAuthentication" xml:space="preserve">
    <value>启动身份验证以进行消息调度</value>
  </data>
  <data name="event_HttpGetContextStart" xml:space="preserve">
    <value>HttpGetContext 启动。</value>
  </data>
  <data name="event_HttpHandlerPickedForUrl" xml:space="preserve">
    <value>URL“{0}”承载含有根元素类型“{1}”的 XAML 文档。选取 HTTP 处理程序类型“{2}”为对此 URL 做出的所有请求提供服务。</value>
  </data>
  <data name="event_HttpMessageReceiveFailed" xml:space="preserve">
    <value>Http 消息接收失败。</value>
  </data>
  <data name="event_HttpMessageReceiveStart" xml:space="preserve">
    <value>已从 http 传输接收消息。</value>
  </data>
  <data name="event_HttpPipelineBeginProcessInboundRequestStart" xml:space="preserve">
    <value>Http 消息处理程序已开始以异步方式处理入站请求。</value>
  </data>
  <data name="event_HttpPipelineBeginProcessResponseStart" xml:space="preserve">
    <value>Http 消息处理程序已开始以异步方式处理响应。</value>
  </data>
  <data name="event_HttpPipelineFaulted" xml:space="preserve">
    <value>Http 消息处理程序出错。</value>
  </data>
  <data name="event_HttpPipelineProcessInboundRequestStart" xml:space="preserve">
    <value>Http 消息处理程序已开始处理入站请求。</value>
  </data>
  <data name="event_HttpPipelineProcessInboundRequestStop" xml:space="preserve">
    <value>Http 消息处理程序已完成处理入站请求。</value>
  </data>
  <data name="event_HttpPipelineProcessResponseStart" xml:space="preserve">
    <value>Http 消息处理程序已开始处理响应。</value>
  </data>
  <data name="event_HttpPipelineProcessResponseStop" xml:space="preserve">
    <value>Http 消息处理程序已完成处理响应。</value>
  </data>
  <data name="event_HttpPipelineTimeoutException" xml:space="preserve">
    <value>WebSocket 连接超时。</value>
  </data>
  <data name="event_HttpResponseReceiveStart" xml:space="preserve">
    <value>Http 传输已开始接收消息。</value>
  </data>
  <data name="event_HttpSendMessageStart" xml:space="preserve">
    <value>Http 发送请求启动。</value>
  </data>
  <data name="event_HttpSendStop" xml:space="preserve">
    <value>Http 发送请求停止。</value>
  </data>
  <data name="event_HttpSendStreamedMessageStart" xml:space="preserve">
    <value>Http 发送流处理消息已启动。</value>
  </data>
  <data name="event_IdleServicesClosed" xml:space="preserve">
    <value>总计 {1} 个已激活服务中的 {0} 个空闲服务已关闭。</value>
  </data>
  <data name="event_IdleTimeout" xml:space="preserve">
    <value>{0} 连接池键: {1}</value>
  </data>
  <data name="event_ImportKnownTypesStart" xml:space="preserve">
    <value>ImportKnownTypes 开始。</value>
  </data>
  <data name="event_ImportKnownTypesStop" xml:space="preserve">
    <value>ImportKnownTypes 停止。</value>
  </data>
  <data name="event_InactivityTimeout" xml:space="preserve">
    <value>{0}</value>
  </data>
  <data name="event_InArgumentBound" xml:space="preserve">
    <value>Activity“{1}”、DisplayName“{2}”、InstanceId“{3}”的 In 参数“{0}”已经与值 {4} 绑定。</value>
  </data>
  <data name="event_IncomingMessageVerified" xml:space="preserve">
    <value>已验证传入消息。</value>
  </data>
  <data name="event_IncrementBusyCount" xml:space="preserve">
    <value>调用了 IncrementBusyCount。源: {0}</value>
  </data>
  <data name="event_InferredContractDescription" xml:space="preserve">
    <value>已从 WorkflowService 中推断出含有 Name='{0}' 和 Namespace='{1}' 的 ContractDescription。</value>
  </data>
  <data name="event_InferredOperationDescription" xml:space="preserve">
    <value>已从 WorkflowService 中推断出协定“{1}”中含有 Name='{0}' 的 OperationDescription。IsOneWay={2}。</value>
  </data>
  <data name="event_InnerChannelCreationFailed" xml:space="preserve">
    <value>DiscoveryClientChannel 无法使用 EndpointAddress 为“{0}”且 Via 为“{1}”的已发现终结点创建通道。DiscoveryClientChannel 现在将尝试使用下一个可用的已发现终结点。</value>
  </data>
  <data name="event_InnerChannelOpenFailed" xml:space="preserve">
    <value>DiscoveryClientChannel 无法使用 EndpointAddress 为“{0}”且 Via 为“{1}”的已发现终结点打开通道。DiscoveryClientChannel 现在将尝试使用下一个可用的已发现终结点。</value>
  </data>
  <data name="event_InnerChannelOpenSucceeded" xml:space="preserve">
    <value>DiscoveryClientChannel 成功发现了一个终结点并使用它打开了通道。客户端使用 EndpointAddress 为“{0}”且 Via 为“{1}”的终结点连接到服务。</value>
  </data>
  <data name="event_InstanceLocksRecoveryError" xml:space="preserve">
    <value>由于下列异常，导致实例锁恢复失败</value>
  </data>
  <data name="event_InternalCacheMetadataStart" xml:space="preserve">
    <value>已在活动“{0}”上启动 InternalCacheMetadata。</value>
  </data>
  <data name="event_InternalCacheMetadataStop" xml:space="preserve">
    <value>已在活动“{0}”上停止 InternalCacheMetadata。</value>
  </data>
  <data name="event_InvokedMethodThrewException" xml:space="preserve">
    <value>在活动“{0}”调用的方法中，引发了异常。{1}</value>
  </data>
  <data name="event_InvokeMethodDoesNotUseAsyncPattern" xml:space="preserve">
    <value>InvokeMethod“{0}”- 方法不使用异步模式。</value>
  </data>
  <data name="event_InvokeMethodIsNotStatic" xml:space="preserve">
    <value>InvokeMethod“{0}”- 方法非静态。</value>
  </data>
  <data name="event_InvokeMethodIsStatic" xml:space="preserve">
    <value>InvokeMethod“{0}”- 方法为静态。</value>
  </data>
  <data name="event_InvokeMethodUseAsyncPattern" xml:space="preserve">
    <value>InvokeMethod“{0}”- 方法使用“{1}”和“{2}”的异步模式。</value>
  </data>
  <data name="event_JsonMessageDecodingStart" xml:space="preserve">
    <value>JsonMessageEncoder 已开始解码消息。</value>
  </data>
  <data name="event_JsonMessageEncodingStart" xml:space="preserve">
    <value>JsonMessageEncoder 已开始编码消息。</value>
  </data>
  <data name="event_LeaseTimeout" xml:space="preserve">
    <value>{0} 连接池键: {1}</value>
  </data>
  <data name="event_ListenerOpenStart" xml:space="preserve">
    <value>正在为“{0}”打开侦听器。</value>
  </data>
  <data name="event_ListenerOpenStop" xml:space="preserve">
    <value>侦听器打开已完成。</value>
  </data>
  <data name="event_LockRetryTimeout" xml:space="preserve">
    <value>尝试获取实例锁时超时。操作在分配的超时 {0} 内没有完成。分配给该操作的时间可能已经是更长超时的一部分。</value>
  </data>
  <data name="event_MaximumRetriesExceededForSqlCommand" xml:space="preserve">
    <value>正在放弃重试 SQL 命令，因为执行次数已达到了允许的最多重试次数。</value>
  </data>
  <data name="event_MaxInstancesExceeded" xml:space="preserve">
    <value>系统达到了所设置的中止值“MaxConcurrentInstances”。将中止值设置为 {0}。通过修改 serviceThrottle 元素中的特性“maxConcurrentInstances”或通过修改行为 ServiceThrottlingBehavior 中的“MaxConcurrentInstances”属性，可更改中止值。</value>
  </data>
  <data name="event_MaxOutboundConnectionsPerEndpointExceeded" xml:space="preserve">
    <value>{0}</value>
  </data>
  <data name="event_MaxPendingConnectionsExceeded" xml:space="preserve">
    <value>{0}</value>
  </data>
  <data name="event_MaxPendingMessagesPerChannelExceeded" xml:space="preserve">
    <value>达到了“{0}”的中止值“MaxPendingMessagesPerChannel”。若要增加此限制，请调整 BufferedReceiveServiceBehavior 中的 MaxPendingMessagesPerChannel 属性。</value>
  </data>
  <data name="event_MaxReceivedMessageSizeExceeded" xml:space="preserve">
    <value>{0}</value>
  </data>
  <data name="event_MaxRetryCyclesExceededMsmq" xml:space="preserve">
    <value>对于 id 为“{0}”的 MSMQ 消息，已超过最大重试周期数</value>
  </data>
  <data name="event_MaxSentMessageSizeExceeded" xml:space="preserve">
    <value>{0}</value>
  </data>
  <data name="event_MaxSessionSizeReached" xml:space="preserve">
    <value>{0}</value>
  </data>
  <data name="event_MessageInspectorAfterReceiveInvoked" xml:space="preserve">
    <value>调度程序对“{0}”类型的 MessageInspector 调用了“AfterReceiveReply”。</value>
  </data>
  <data name="event_MessageInspectorBeforeSendInvoked" xml:space="preserve">
    <value>调度程序对“{0}”类型的 MessageInspector 调用了“BeforeSendRequest”。</value>
  </data>
  <data name="event_MessageLogEventSizeExceeded" xml:space="preserve">
    <value>无法记录消息，因为它超出了 ETW 事件大小</value>
  </data>
  <data name="event_MessageLogInfo" xml:space="preserve">
    <value>{0}</value>
  </data>
  <data name="event_MessageLogWarning" xml:space="preserve">
    <value>{0}</value>
  </data>
  <data name="event_MessageQueueDuplicatedSocketComplete" xml:space="preserve">
    <value>MessageQueueDuplicatedSocketComplete</value>
  </data>
  <data name="event_MessageQueueDuplicatedSocketError" xml:space="preserve">
    <value>消息队列无法复制套接字。</value>
  </data>
  <data name="event_MessageQueueRegisterAbort" xml:space="preserve">
    <value>URI“{1}”的消息队列注册已中止，状态为“{0}”。</value>
  </data>
  <data name="event_MessageQueueRegisterCompleted" xml:space="preserve">
    <value>URI“{0}”的消息队列注册已完成。</value>
  </data>
  <data name="event_MessageQueueRegisterFailed" xml:space="preserve">
    <value>URI“{0}”的消息队列注册已失败，状态为“{1}”。</value>
  </data>
  <data name="event_MessageQueueRegisterStart" xml:space="preserve">
    <value>消息队列注册开始。</value>
  </data>
  <data name="event_MessageQueueUnregisterSucceeded" xml:space="preserve">
    <value>URI“{0}”的消息队列注销已成功。</value>
  </data>
  <data name="event_MessageReadByEncoder" xml:space="preserve">
    <value>编码器已读取大小为“{0}”字节的消息。</value>
  </data>
  <data name="event_MessageReceivedByTransport" xml:space="preserve">
    <value>传输从“{0}”收到了一条消息。</value>
  </data>
  <data name="event_MessageReceivedFromTransport" xml:space="preserve">
    <value>调度程序从传输收到一条消息。相关 ID 为“{0}”。</value>
  </data>
  <data name="event_MessageSentByTransport" xml:space="preserve">
    <value>传输向“{0}”发送了一条消息。</value>
  </data>
  <data name="event_MessageSentToTransport" xml:space="preserve">
    <value>调度程序向传输发送了一条消息。相关 ID 为“{0}”。</value>
  </data>
  <data name="event_MessageThrottleAtSeventyPercent" xml:space="preserve">
    <value>“{1}”的中止值“{0}”为 70%%。</value>
  </data>
  <data name="event_MessageThrottleExceeded" xml:space="preserve">
    <value>达到了“{1}”的中止值“{0}”。</value>
  </data>
  <data name="event_MessageWrittenAsynchronouslyByEncoder" xml:space="preserve">
    <value>编码器已以异步方式写入消息。</value>
  </data>
  <data name="event_MessageWrittenByEncoder" xml:space="preserve">
    <value>编码器已写入大小为“{0}”字节的消息。</value>
  </data>
  <data name="event_MtomMessageDecodingStart" xml:space="preserve">
    <value>MtomMessageEncoder 已开始解码消息。</value>
  </data>
  <data name="event_MtomMessageEncodingStart" xml:space="preserve">
    <value>MtomMessageEncoder 已开始编码消息。</value>
  </data>
  <data name="event_NamedPipeCreated" xml:space="preserve">
    <value>已创建 NamedPipe“{0}”。</value>
  </data>
  <data name="event_NegotiateTokenAuthenticatorStateCacheExceeded" xml:space="preserve">
    <value>{0}</value>
  </data>
  <data name="event_NegotiateTokenAuthenticatorStateCacheRatio" xml:space="preserve">
    <value>协商令牌身份验证器状态缓存的比率: {0}/{1}</value>
  </data>
  <data name="event_OpenListenerChannelInstanceFailed" xml:space="preserve">
    <value>错误代码: {0}</value>
  </data>
  <data name="event_OpenTimeout" xml:space="preserve">
    <value>{0}</value>
  </data>
  <data name="event_OperationCompleted" xml:space="preserve">
    <value>OperationInvoker 已完成对“{0}”方法的调用。该方法调用持续了“{1}”毫秒。</value>
  </data>
  <data name="event_OperationFailed" xml:space="preserve">
    <value>“{0}”方法在由 OperationInvoker 调用时引发了未经处理的异常。该方法调用持续了“{1}”毫秒。</value>
  </data>
  <data name="event_OperationFaulted" xml:space="preserve">
    <value>“{0}”方法在由 OperationInvoker 调用时引发了 FaultException。该方法调用持续了“{1}”毫秒。</value>
  </data>
  <data name="event_OperationInvoked" xml:space="preserve">
    <value>OperationInvoker 调用了“{0}”方法。调用方信息: “{1}”。</value>
  </data>
  <data name="event_OutboundConnectionsPerEndpointRatio" xml:space="preserve">
    <value>每个终结点的出站连接比率: {0}/{1}</value>
  </data>
  <data name="event_OutgoingMessageSecured" xml:space="preserve">
    <value>已保护传出消息的安全。</value>
  </data>
  <data name="event_ParameterInspectorAfterCallInvoked" xml:space="preserve">
    <value>调度程序对“{0}”类型的 ParameterInspector 调用了“AfterCall”。</value>
  </data>
  <data name="event_ParameterInspectorBeforeCallInvoked" xml:space="preserve">
    <value>调度程序对“{0}”类型的 ParameterInspector 调用了“BeforeCall”。</value>
  </data>
  <data name="event_PendingAcceptsAtZero" xml:space="preserve">
    <value>剩下零个挂起的接受</value>
  </data>
  <data name="event_PendingConnectionsRatio" xml:space="preserve">
    <value>挂起的连接比率: {0}/{1}</value>
  </data>
  <data name="event_PendingMessagesPerChannelRatio" xml:space="preserve">
    <value>每个通道的挂起消息比率: {0}/{1}</value>
  </data>
  <data name="event_PendingSessionQueueFull" xml:space="preserve">
    <value>对“{0}”的会话调度失败，因为挂起的会话队列已满，其中包含“{1}”个挂起项目。</value>
  </data>
  <data name="event_PendingSessionQueueRatio" xml:space="preserve">
    <value>挂起会话队列比率: {0}/{1}</value>
  </data>
  <data name="event_PipeConnectionAcceptStart" xml:space="preserve">
    <value>已在 {0} 上启动管道连接接受。</value>
  </data>
  <data name="event_PipeConnectionAcceptStop" xml:space="preserve">
    <value>已接受管道连接。</value>
  </data>
  <data name="event_PipeSharedMemoryCreated" xml:space="preserve">
    <value>已在“{0}”处创建管道共享内存。</value>
  </data>
  <data name="event_PipeTransportListenerListeningStart" xml:space="preserve">
    <value>管道传输侦听器开始侦听 URI“{0}”。</value>
  </data>
  <data name="event_PipeTransportListenerListeningStop" xml:space="preserve">
    <value>管道传输侦听器停止侦听。</value>
  </data>
  <data name="event_PortSharingDuplicatedSocket" xml:space="preserve">
    <value>已为 {0} 复制套接字。</value>
  </data>
  <data name="event_PrincipalSettingFromSessionTokenStarted" xml:space="preserve">
    <value>基于会话令牌的主体设置已开始。</value>
  </data>
  <data name="event_PrincipalSettingFromSessionTokenSuccess" xml:space="preserve">
    <value>基于会话令牌的主体设置已成功。</value>
  </data>
  <data name="event_QueryCompositionExecuted" xml:space="preserve">
    <value>对请求 URI“{1}”执行了使用“{0}”的查询组合。</value>
  </data>
  <data name="event_QueuingSqlRetry" xml:space="preserve">
    <value>正在排队 SQL 重试操作，延迟为 {0} 毫秒。</value>
  </data>
  <data name="event_ReadPoolMiss" xml:space="preserve">
    <value>已新建“{0}”</value>
  </data>
  <data name="event_ReceiveContextAbandonFailed" xml:space="preserve">
    <value>未能放弃 {0}。</value>
  </data>
  <data name="event_ReceiveContextAbandonWithException" xml:space="preserve">
    <value>放弃了 {0}，返回异常 {1}。</value>
  </data>
  <data name="event_ReceiveContextCompleteFailed" xml:space="preserve">
    <value>未能完成 {0}。</value>
  </data>
  <data name="event_ReceiveContextFaulted" xml:space="preserve">
    <value>接收上下文出错。</value>
  </data>
  <data name="event_ReceiveRetryCountReached" xml:space="preserve">
    <value>对于 id 为“{0}”的 MSMQ 消息，已达到接收重试计数限制</value>
  </data>
  <data name="event_ReceiveTimeout" xml:space="preserve">
    <value>{0}</value>
  </data>
  <data name="event_ReliableSessionChannelFaulted" xml:space="preserve">
    <value>SessionId:{0} 出错。</value>
  </data>
  <data name="event_RenewLockSystemError" xml:space="preserve">
    <value>未能延长锁定到期日，锁定到期日已过，或者已删除锁定所有者。正在中止 SqlWorkflowInstanceStore。</value>
  </data>
  <data name="event_ResumeSignpostEvent" xml:space="preserve">
    <value>活动边界。</value>
  </data>
  <data name="event_RetryingSqlCommandDueToSqlError" xml:space="preserve">
    <value>正在由于 SQL 错误号 {0} 而重试 SQL 命令。</value>
  </data>
  <data name="event_RoutingServiceAbandoningReceiveContext" xml:space="preserve">
    <value>路由服务正在为 ID 是“{0}”的消息调用 ReceiveContext.Abandon。</value>
  </data>
  <data name="event_RoutingServiceAbortingChannel" xml:space="preserve">
    <value>路由服务正在通道“{0}”上调用中止。</value>
  </data>
  <data name="event_RoutingServiceChannelFaulted" xml:space="preserve">
    <value>路由服务客户端“{0}”出错。</value>
  </data>
  <data name="event_RoutingServiceCloseFailed" xml:space="preserve">
    <value>关闭出站客户端“{0}”时，路由服务失败。</value>
  </data>
  <data name="event_RoutingServiceClosingClient" xml:space="preserve">
    <value>路由服务正在关闭客户端“{0}”。</value>
  </data>
  <data name="event_RoutingServiceCommittingTransaction" xml:space="preserve">
    <value>路由服务正在提交 ID 为“{0}”的事务。</value>
  </data>
  <data name="event_RoutingServiceCompletingOneWay" xml:space="preserve">
    <value>路由服务单向消息正在完成。</value>
  </data>
  <data name="event_RoutingServiceCompletingReceiveContext" xml:space="preserve">
    <value>路由服务正在为 ID 是“{0}”的消息调用 ReceiveContext.Complete。</value>
  </data>
  <data name="event_RoutingServiceCompletingTwoWay" xml:space="preserve">
    <value>路由服务请求答复消息正在完成。</value>
  </data>
  <data name="event_RoutingServiceConfigurationApplied" xml:space="preserve">
    <value>一个新的 RoutingConfiguration 已应用于路由服务。</value>
  </data>
  <data name="event_RoutingServiceCreatingClientForEndpoint" xml:space="preserve">
    <value>路由服务正在为终结点“{0}”创建客户端。</value>
  </data>
  <data name="event_RoutingServiceCreatingTransaction" xml:space="preserve">
    <value>路由服务创建了一个 ID 为“{0}”的新事务来处理消息。</value>
  </data>
  <data name="event_RoutingServiceDisplayConfig" xml:space="preserve">
    <value>对路由服务进行了如下配置: RouteOnHeadersOnly: {0}，SoapProcessingEnabled: {1}，EnsureOrderedDispatch: {2}。</value>
  </data>
  <data name="event_RoutingServiceDuplexCallbackException" xml:space="preserve">
    <value>路由服务组件 {0} 遇到了双工回调异常。</value>
  </data>
  <data name="event_RoutingServiceFilterTableMatchStart" xml:space="preserve">
    <value>路由服务 MessageFilterTable 匹配开始。</value>
  </data>
  <data name="event_RoutingServiceFilterTableMatchStop" xml:space="preserve">
    <value>路由服务 MessageFilterTable 匹配停止。</value>
  </data>
  <data name="event_RoutingServiceHandledException" xml:space="preserve">
    <value>路由服务已处理异常。</value>
  </data>
  <data name="event_RoutingServiceMessageRoutedToEndpoints" xml:space="preserve">
    <value>路由服务已将 ID 为“{0}”的消息路由到 {1} 个终结点列表。</value>
  </data>
  <data name="event_RoutingServiceProcessingFailure" xml:space="preserve">
    <value>在地址为“{0}”的终结点上处理消息时，路由服务失败。</value>
  </data>
  <data name="event_RoutingServiceProcessingMessage" xml:space="preserve">
    <value>路由服务正在处理事务 {3} 中收到的 ID 为“{0}”、操作为“{1}”、入站 URL 为“{2}”的消息。</value>
  </data>
  <data name="event_RoutingServiceSendingFaultResponse" xml:space="preserve">
    <value>路由服务正在发回含有 Action“{0}”的错误响应消息。</value>
  </data>
  <data name="event_RoutingServiceSendingResponse" xml:space="preserve">
    <value>路由服务正在发回含有 Action“{0}”的响应消息。</value>
  </data>
  <data name="event_RoutingServiceTransmitFailed" xml:space="preserve">
    <value>向“{0}”发送时，路由服务失败。</value>
  </data>
  <data name="event_RoutingServiceUsingExistingTransaction" xml:space="preserve">
    <value>路由服务将使用现有事务“{0}”发送消息。</value>
  </data>
  <data name="event_RoutingTableLookupStart" xml:space="preserve">
    <value>已开始路由表查找。</value>
  </data>
  <data name="event_RoutingTableLookupStop" xml:space="preserve">
    <value>已完成路由表查找。</value>
  </data>
  <data name="event_RunnableInstancesDetectionError" xml:space="preserve">
    <value>由于下列异常，导致可运行实例检测失败</value>
  </data>
  <data name="event_RuntimeTransactionComplete" xml:space="preserve">
    <value>运行时事务已在状态“{0}”下完成。</value>
  </data>
  <data name="event_RuntimeTransactionCompletionRequested" xml:space="preserve">
    <value>Activity“{0}”、DisplayName“{1}”、InstanceId“{2}”已安排了运行时事务的完成。</value>
  </data>
  <data name="event_RuntimeTransactionSet" xml:space="preserve">
    <value>运行时事务已经由 Activity“{0}”、DisplayName“{1}”、InstanceId“{2}”设置。执行独立于 Activity“{3}”、DisplayName“{4}”、InstanceId“{5}”。</value>
  </data>
  <data name="event_ScheduleBookmarkWorkItem" xml:space="preserve">
    <value>已为 Activity“{0}”、DisplayName“{1}”、InstanceId“{2}”安排了 BookmarkWorkItem。BookmarkName: {3}，BookmarkScope: {4}。</value>
  </data>
  <data name="event_ScheduleCancelActivityWorkItem" xml:space="preserve">
    <value>已为 Activity“{0}”、DisplayName“{1}”、InstanceId“{2}”安排了 CancelActivityWorkItem。</value>
  </data>
  <data name="event_ScheduleCompletionWorkItem" xml:space="preserve">
    <value>已为父 Activity“{0}”、DisplayName“{1}”、InstanceId“{2}”安排了 CompletionWorkItem。完成了 Activity“{3}”、DisplayName“{4}”、InstanceId“{5}”。</value>
  </data>
  <data name="event_ScheduleExecuteActivityWorkItem" xml:space="preserve">
    <value>已为 Activity“{0}”、DisplayName“{1}”、InstanceId“{2}”安排了 ExecuteActivityWorkItem。</value>
  </data>
  <data name="event_ScheduleFaultWorkItem" xml:space="preserve">
    <value>已为 Activity“{0}”、DisplayName“{1}”、InstanceId“{2}”安排了 FaultWorkItem。异常是从 Activity“{3}”、DisplayName“{4}”、InstanceId“{5}”传播的。</value>
  </data>
  <data name="event_ScheduleRuntimeWorkItem" xml:space="preserve">
    <value>已为 Activity“{0}”、DisplayName“{1}”、InstanceId“{2}”安排了运行时工作项。</value>
  </data>
  <data name="event_ScheduleTransactionContextWorkItem" xml:space="preserve">
    <value>已为 Activity“{0}”、DisplayName“{1}”、InstanceId“{2}”安排了 TransactionContextWorkItem。</value>
  </data>
  <data name="event_SecurityIdentityVerificationFailure" xml:space="preserve">
    <value>安全验证失败。</value>
  </data>
  <data name="event_SecurityIdentityVerificationSuccess" xml:space="preserve">
    <value>安全验证成功。</value>
  </data>
  <data name="event_SecurityImpersonationFailure" xml:space="preserve">
    <value>安全模拟失败。</value>
  </data>
  <data name="event_SecurityImpersonationSuccess" xml:space="preserve">
    <value>安全模拟成功。</value>
  </data>
  <data name="event_SecurityNegotiationProcessingFailure" xml:space="preserve">
    <value>安全协商处理失败。</value>
  </data>
  <data name="event_SecurityNegotiationStart" xml:space="preserve">
    <value>安全协商已启动。</value>
  </data>
  <data name="event_SecurityNegotiationStop" xml:space="preserve">
    <value>安全协商已完成。</value>
  </data>
  <data name="event_SecuritySessionRatio" xml:space="preserve">
    <value>安全会话比率: {0}/{1}</value>
  </data>
  <data name="event_SecurityTokenProviderOpened" xml:space="preserve">
    <value>SecurityTokenProvider 打开已完成。</value>
  </data>
  <data name="event_SendMessageChannelCacheMiss" xml:space="preserve">
    <value>SendMessageChannelCache 未命中</value>
  </data>
  <data name="event_SendTimeout" xml:space="preserve">
    <value>{0}</value>
  </data>
  <data name="event_SequenceAcknowledgementSent" xml:space="preserve">
    <value>SessionId:{0} 确认已发送。</value>
  </data>
  <data name="event_ServerMaxPooledConnectionsQuotaReached" xml:space="preserve">
    <value>达到了服务器的最大池连接配额。</value>
  </data>
  <data name="event_ServiceActivationAvailableMemory" xml:space="preserve">
    <value>可用内存(字节): {0}</value>
  </data>
  <data name="event_ServiceActivationException" xml:space="preserve">
    <value>无法激活该服务。异常的详细信息: {0}</value>
  </data>
  <data name="event_ServiceActivationStart" xml:space="preserve">
    <value>服务激活开始</value>
  </data>
  <data name="event_ServiceActivationStop" xml:space="preserve">
    <value>服务激活停止</value>
  </data>
  <data name="event_ServiceChannelBeginCallStart" xml:space="preserve">
    <value>ServiceChannel 异步调用已启动。</value>
  </data>
  <data name="event_ServiceChannelCallStart" xml:space="preserve">
    <value>ServiceChannelCall 已启动。</value>
  </data>
  <data name="event_ServiceChannelCallStop" xml:space="preserve">
    <value>客户端已执行完与协定“{1}”相关的操作“{0}”。消息已发送到“{2}”。</value>
  </data>
  <data name="event_ServiceChannelOpenStart" xml:space="preserve">
    <value>ServiceChannelOpen 已启动。</value>
  </data>
  <data name="event_ServiceChannelOpenStop" xml:space="preserve">
    <value>ServiceChannelOpen 已完成。</value>
  </data>
  <data name="event_ServiceEndpointAdded" xml:space="preserve">
    <value>已为地址“{0}”、绑定“{1}”和协定“{2}”添加了一个服务终结点。</value>
  </data>
  <data name="event_ServiceException" xml:space="preserve">
    <value>消息处理过程中出现了“{1}”类型的未经处理的异常。完整异常详细信息: {0}。</value>
  </data>
  <data name="event_ServiceHostFactoryCreationStart" xml:space="preserve">
    <value>ServiceHostFactory 开始创建</value>
  </data>
  <data name="event_ServiceHostFactoryCreationStop" xml:space="preserve">
    <value>ServiceHostFactory 结束创建</value>
  </data>
  <data name="event_ServiceHostFaulted" xml:space="preserve">
    <value>服务主机出现故障。</value>
  </data>
  <data name="event_ServiceHostOpenStart" xml:space="preserve">
    <value>ServiceHost 已开始打开。</value>
  </data>
  <data name="event_ServiceHostOpenStop" xml:space="preserve">
    <value>ServiceHost 已完成打开。</value>
  </data>
  <data name="event_ServiceHostStarted" xml:space="preserve">
    <value>ServiceHost 已启动:“{0}”。</value>
  </data>
  <data name="event_ServiceSecurityNegotiationCompleted" xml:space="preserve">
    <value>服务安全协商已完成。</value>
  </data>
  <data name="event_ServiceStartPipeError" xml:space="preserve">
    <value>服务启动管道出错。</value>
  </data>
  <data name="event_SessionCookieReadingStarted" xml:space="preserve">
    <value>从会话 Cookie 读取会话令牌已开始。</value>
  </data>
  <data name="event_SessionCookieReadingSuccess" xml:space="preserve">
    <value>从会话 Cookie 读取会话令牌已成功。</value>
  </data>
  <data name="event_SessionIdleTimeout" xml:space="preserve">
    <value>会话正在中止 URI“{0}”的空闲通道。</value>
  </data>
  <data name="event_SessionPreambleUnderstood" xml:space="preserve">
    <value>已理解“{0}”的会话报头。</value>
  </data>
  <data name="event_SharedListenerProxyRegisterFailed" xml:space="preserve">
    <value>SharedListenerProxy 注册失败，状态为“{0}”。</value>
  </data>
  <data name="event_SharedListenerProxyRegisterStart" xml:space="preserve">
    <value>已对 URI“{0}”启动 SharedListenerProxy 注册。</value>
  </data>
  <data name="event_SharedListenerProxyRegisterStop" xml:space="preserve">
    <value>SharedListenerProxy 注册停止。</value>
  </data>
  <data name="event_ShipAssertExceptionMessage" xml:space="preserve">
    <value>发生了意外失败。应用程序不应尝试处理此错误。出于诊断目的，此英语消息与下列失败关联: {0}。</value>
  </data>
  <data name="event_SignatureVerificationStart" xml:space="preserve">
    <value>签名验证已开始。</value>
  </data>
  <data name="event_SignatureVerificationSuccess" xml:space="preserve">
    <value>签名验证已成功</value>
  </data>
  <data name="event_SocketAcceptClosed" xml:space="preserve">
    <value>套接字接受已关闭。</value>
  </data>
  <data name="event_SocketAccepted" xml:space="preserve">
    <value>ListenerId:{0} 接受了 SocketId:{1}。</value>
  </data>
  <data name="event_SocketAcceptEnqueued" xml:space="preserve">
    <value>连接接受已启动。</value>
  </data>
  <data name="event_SocketAsyncReadStop" xml:space="preserve">
    <value>SocketId:{0} 从“{2}”读取“{1}”个字节。</value>
  </data>
  <data name="event_SocketAsyncWriteStart" xml:space="preserve">
    <value>SocketId:{0} 正在将“{1}”个字节写入“{2}”。</value>
  </data>
  <data name="event_SocketConnectionAbort" xml:space="preserve">
    <value>SocketId:{0} 正在中止。</value>
  </data>
  <data name="event_SocketReadStop" xml:space="preserve">
    <value>SocketId:{0} 从“{2}”读取“{1}”个字节。</value>
  </data>
  <data name="event_SocketWriteStart" xml:space="preserve">
    <value>SocketId:{0} 正在将“{1}”个字节写入“{2}”。</value>
  </data>
  <data name="event_SqlExceptionCaught" xml:space="preserve">
    <value>已捕获 SQL 异常编号 {0} 消息 {1}。</value>
  </data>
  <data name="event_SslOnAcceptUpgrade" xml:space="preserve">
    <value>SslOnAcceptUpgradeStop</value>
  </data>
  <data name="event_SslOnInitiateUpgrade" xml:space="preserve">
    <value>SslOnAcceptUpgradeStart</value>
  </data>
  <data name="event_StartBookmarkWorkItem" xml:space="preserve">
    <value>开始为 Activity“{0}”、DisplayName“{1}”、InstanceId“{2}”执行 BookmarkWorkItem。BookmarkName: {3}，BookmarkScope: {4}。</value>
  </data>
  <data name="event_StartCancelActivityWorkItem" xml:space="preserve">
    <value>开始为 Activity“{0}”、DisplayName“{1}”、InstanceId“{2}”执行 CancelActivityWorkItem。</value>
  </data>
  <data name="event_StartCompletionWorkItem" xml:space="preserve">
    <value>开始为父 Activity“{0}”、DisplayName“{1}”、InstanceId“{2}”执行 CompletionWorkItem。完成了 Activity“{3}”、DisplayName“{4}”、InstanceId“{5}”。</value>
  </data>
  <data name="event_StartExecuteActivityWorkItem" xml:space="preserve">
    <value>开始为 Activity“{0}”、DisplayName“{1}”、InstanceId“{2}”执行 ExecuteActivityWorkItem。</value>
  </data>
  <data name="event_StartFaultWorkItem" xml:space="preserve">
    <value>开始为 Activity“{0}”、DisplayName“{1}”、InstanceId“{2}”执行 FaultWorkItem。异常是从 Activity“{3}”、DisplayName“{4}”、InstanceId“{5}”传播的。</value>
  </data>
  <data name="event_StartRuntimeWorkItem" xml:space="preserve">
    <value>开始为 Activity“{0}”、DisplayName“{1}”、InstanceId“{2}”执行运行时工作项。</value>
  </data>
  <data name="event_StartSignpostEvent" xml:space="preserve">
    <value>活动边界。</value>
  </data>
  <data name="event_StartSignpostEvent1" xml:space="preserve">
    <value>活动边界。</value>
  </data>
  <data name="event_StartSqlCommandExecute" xml:space="preserve">
    <value>正在开始 SQL 命令执行: {0}</value>
  </data>
  <data name="event_StartTransactionContextWorkItem" xml:space="preserve">
    <value>开始为 Activity“{0}”、DisplayName“{1}”、InstanceId“{2}”执行 TransactionContextWorkItem。</value>
  </data>
  <data name="event_StopSignpostEvent" xml:space="preserve">
    <value>活动边界。</value>
  </data>
  <data name="event_StopSignpostEvent1" xml:space="preserve">
    <value>活动边界。</value>
  </data>
  <data name="event_StreamedMessageReadByEncoder" xml:space="preserve">
    <value>编码器已读取流处理消息。</value>
  </data>
  <data name="event_StreamedMessageWrittenByEncoder" xml:space="preserve">
    <value>编码器已写入流处理消息。</value>
  </data>
  <data name="event_SuspendSignpostEvent" xml:space="preserve">
    <value>活动边界。</value>
  </data>
  <data name="event_SwitchCaseNotFound" xml:space="preserve">
    <value>Switch 活动“{0}”找不到与 Expression 结果匹配的 Case 活动。</value>
  </data>
  <data name="event_SynchronizationContextReset" xml:space="preserve">
    <value>SynchronizationContext 已由 DiscoveryClientChannel 重置为其原始值 {0}。</value>
  </data>
  <data name="event_SynchronizationContextSetToNull" xml:space="preserve">
    <value>在初始化 Find 操作之前，SynchronizationContext 已由 DiscoveryClientChannel 设置为 null。</value>
  </data>
  <data name="event_TcpConnectionResetError" xml:space="preserve">
    <value>SocketId:{0} 到远程地址 {1} 出现连接重置错误。</value>
  </data>
  <data name="event_TcpConnectionTimedOut" xml:space="preserve">
    <value>SocketId:{0} 到远程地址 {1} 超时。</value>
  </data>
  <data name="event_TcpTransportListenerListeningStart" xml:space="preserve">
    <value>Tcp 传输侦听器正在开始侦听 URI“{0}”。</value>
  </data>
  <data name="event_TcpTransportListenerListeningStop" xml:space="preserve">
    <value>Tcp 传输侦听器正在侦听。</value>
  </data>
  <data name="event_TextMessageDecodingStart" xml:space="preserve">
    <value>TextMessageEncoder 已开始解码消息。</value>
  </data>
  <data name="event_TextMessageEncodingStart" xml:space="preserve">
    <value>TextMessageEncoder 已开始编码消息。</value>
  </data>
  <data name="event_ThrowingEtwException" xml:space="preserve">
    <value>正在引发异常。源: {0}。异常的详细信息: {1}</value>
  </data>
  <data name="event_ThrowingEtwExceptionVerbose" xml:space="preserve">
    <value>正在引发异常。源: {0}。异常的详细信息: {1}</value>
  </data>
  <data name="event_ThrowingException" xml:space="preserve">
    <value>正在引发异常。源: {0}。异常的详细信息: {1}</value>
  </data>
  <data name="event_ThrowingExceptionVerbose" xml:space="preserve">
    <value>正在引发异常。源: {0}。异常的详细信息: {1}</value>
  </data>
  <data name="event_TimeoutOpeningSqlConnection" xml:space="preserve">
    <value>尝试打开 SQL 连接时超时。操作在分配的超时 {0} 内没有完成。分配给该操作的时间可能已经是更长超时的一部分。</value>
  </data>
  <data name="event_TokenValidationFailure" xml:space="preserve">
    <value>SecurityToken (类型为“{0}”，ID 为“{1}”)验证已失败。{2}</value>
  </data>
  <data name="event_TokenValidationStarted" xml:space="preserve">
    <value>SecurityToken (类型为“{0}”，ID 为“{1}”)验证已开始。</value>
  </data>
  <data name="event_TokenValidationSuccess" xml:space="preserve">
    <value>SecurityToken (类型为“{0}”，ID 为“{1}”)验证已成功。</value>
  </data>
  <data name="event_TraceCodeEventLogCritical" xml:space="preserve">
    <value>已写入 EventLog。</value>
  </data>
  <data name="event_TraceCodeEventLogError" xml:space="preserve">
    <value>已写入 EventLog。</value>
  </data>
  <data name="event_TraceCodeEventLogInfo" xml:space="preserve">
    <value>已写入 EventLog。</value>
  </data>
  <data name="event_TraceCodeEventLogVerbose" xml:space="preserve">
    <value>已写入 EventLog。</value>
  </data>
  <data name="event_TraceCodeEventLogWarning" xml:space="preserve">
    <value>已写入 EventLog。</value>
  </data>
  <data name="event_TraceCorrelationKeys" xml:space="preserve">
    <value>使用父作用域“{2}”中的值“{1}”计算出的相关键“{0}”。</value>
  </data>
  <data name="event_TrackingDataExtracted" xml:space="preserve">
    <value>正在跟踪在活动 {1} 中提取的数据 {0}。</value>
  </data>
  <data name="event_TrackingProfileNotFound" xml:space="preserve">
    <value>未找到 ActivityDefinitionId“{1}”的 TrackingProfile“{0}”。在配置文件中找不到 TrackingProfile，或 ActivityDefinitionId 不匹配。</value>
  </data>
  <data name="event_TrackingRecordDropped" xml:space="preserve">
    <value>跟踪记录 {0} 的大小超出了 ETW 会话对提供程序 {1} 允许的最大值</value>
  </data>
  <data name="event_TrackingRecordRaised" xml:space="preserve">
    <value>跟踪记录 {0} 已提升为 {1}。</value>
  </data>
  <data name="event_TrackingRecordTruncated" xml:space="preserve">
    <value>用提供程序 {1} 向 ETW 会话写入了截断的跟踪记录 {0}。已移除了变量/批注/用户数据</value>
  </data>
  <data name="event_TrackingValueNotSerializable" xml:space="preserve">
    <value>所提取的参数/变量“{0}”不可序列化。</value>
  </data>
  <data name="event_TransactedReceiveScopeEndCommitFailed" xml:space="preserve">
    <value>ID 为“{0}”的 CommittableTransaction 上的 EndCommit 调用引发了具有以下消息的 TransactionException:“{1}”。</value>
  </data>
  <data name="event_TransactionScopeCreate" xml:space="preserve">
    <value>正在使用 LocalIdentifier“{0}”和 DistributedIdentifier“{1}”创建 TransactionScope。</value>
  </data>
  <data name="event_TransferEmitted" xml:space="preserve">
    <value>发出了传输事件。</value>
  </data>
  <data name="event_TransportListenerSessionsReceived" xml:space="preserve">
    <value>已通过中转“{0}”接收传输侦听器会话</value>
  </data>
  <data name="event_TryCatchExceptionDuringCancelation" xml:space="preserve">
    <value>TryCatch 活动“{0}”的子活动在取消过程中引发了异常。</value>
  </data>
  <data name="event_TryCatchExceptionFromCatchOrFinally" xml:space="preserve">
    <value>与 TryCatch 活动“{0}”关联的 Catch 或 Finally 活动引发了异常。</value>
  </data>
  <data name="event_TryCatchExceptionFromTry" xml:space="preserve">
    <value>TryCatch 活动“{0}”捕获了“{1}”类型的异常。</value>
  </data>
  <data name="event_UnhandledException" xml:space="preserve">
    <value>未经处理的异常。异常的详细信息: {0}</value>
  </data>
  <data name="event_UnlockInstanceException" xml:space="preserve">
    <value>尝试解除锁定实例时遇到异常 {0}。</value>
  </data>
  <data name="event_UserEvents" xml:space="preserve">
    <value>Name“{0}”、Reference“{1}”、Payload: {2}</value>
  </data>
  <data name="event_WasCloseAllListenerChannelInstancesCompleted" xml:space="preserve">
    <value>正在关闭所有已完成的侦听器通道实例。</value>
  </data>
  <data name="event_WasCloseAllListenerChannelInstancesFailed" xml:space="preserve">
    <value>错误代码: {0}</value>
  </data>
  <data name="event_WasConnected" xml:space="preserve">
    <value>WAS 已连接。</value>
  </data>
  <data name="event_WasConnectionTimedout" xml:space="preserve">
    <value>WAS 连接超时。</value>
  </data>
  <data name="event_WasDisconnected" xml:space="preserve">
    <value>WAS 已断开连接。</value>
  </data>
  <data name="event_WebHostRequestStart" xml:space="preserve">
    <value>从 AppDomain“{0}”收到了虚拟路径为“{1}”的请求。</value>
  </data>
  <data name="event_WebHostRequestStop" xml:space="preserve">
    <value>WebHostRequest 停止。</value>
  </data>
  <data name="event_WebhostUnregisterProtocolFailed" xml:space="preserve">
    <value>错误代码: {0}</value>
  </data>
  <data name="event_WebSocketAsyncReadStart" xml:space="preserve">
    <value>WebSocketId:{0} 读取开始。</value>
  </data>
  <data name="event_WebSocketAsyncReadStop" xml:space="preserve">
    <value>WebSocketId:{0} 从“{2}”读取“{1}”个字节。</value>
  </data>
  <data name="event_WebSocketAsyncWriteStart" xml:space="preserve">
    <value>WebSocketId:{0} 正在将“{1}”个字节写入“{2}”。</value>
  </data>
  <data name="event_WebSocketAsyncWriteStop" xml:space="preserve">
    <value>WebSocketId:{0} 异步写入停止。</value>
  </data>
  <data name="event_WebSocketCloseOutputSent" xml:space="preserve">
    <value>WebSocketId:{0} 正在向“{1}”发送关闭输出消息，关闭状态为“{2}”。</value>
  </data>
  <data name="event_WebSocketCloseSent" xml:space="preserve">
    <value>WebSocketId:{0} 正在向“{1}”发送关闭消息，关闭状态为“{2}”。</value>
  </data>
  <data name="event_WebSocketCloseStatusReceived" xml:space="preserve">
    <value>收到 WebSocketId:{0} 连接关闭消息，状态为“{1}”。</value>
  </data>
  <data name="event_WebSocketConnectionAborted" xml:space="preserve">
    <value>WebSocketId:{0} 连接已中止。</value>
  </data>
  <data name="event_WebSocketConnectionAccepted" xml:space="preserve">
    <value>WebSocketId:{0} 连接已接受。</value>
  </data>
  <data name="event_WebSocketConnectionAcceptStart" xml:space="preserve">
    <value>WebSocket 连接接受开始。</value>
  </data>
  <data name="event_WebSocketConnectionClosed" xml:space="preserve">
    <value>WebSocketId:{0} 连接已关闭。</value>
  </data>
  <data name="event_WebSocketConnectionDeclined" xml:space="preserve">
    <value>WebSocket 连接被拒绝，状态代码为“{0}”</value>
  </data>
  <data name="event_WebSocketConnectionFailed" xml:space="preserve">
    <value>WebSocket 连接请求失败:“{0}”</value>
  </data>
  <data name="event_WebSocketConnectionRequestSendStart" xml:space="preserve">
    <value>针对“{0}”的 WebSocket 连接请求发送开始。</value>
  </data>
  <data name="event_WebSocketConnectionRequestSendStop" xml:space="preserve">
    <value>WebSocketId:{0} 连接请求已发送。</value>
  </data>
  <data name="event_WebSocketCreateClientWebSocketWithFactory" xml:space="preserve">
    <value>正在创建包含类型为“{0}”的工厂的客户端 WebSocket。</value>
  </data>
  <data name="event_WebSocketUseVersionFromClientWebSocketFactory" xml:space="preserve">
    <value>正在使用来自类型为“{0}”的客户端 WebSocket 工厂的 WebSocketVersion。</value>
  </data>
  <data name="event_WfMessageReceived" xml:space="preserve">
    <value>工作流已接收消息</value>
  </data>
  <data name="event_WfMessageSent" xml:space="preserve">
    <value>已从工作流发送消息</value>
  </data>
  <data name="event_WindowsStreamSecurityOnAcceptUpgrade" xml:space="preserve">
    <value>Windows 正在对接受升级的安全性进行流式处理。</value>
  </data>
  <data name="event_WindowsStreamSecurityOnInitiateUpgrade" xml:space="preserve">
    <value>WindowsStreamSecurity 正在启动安全升级。</value>
  </data>
  <data name="event_WorkflowActivityResume" xml:space="preserve">
    <value>WorkflowInstance Id“{0}”E2E 活动</value>
  </data>
  <data name="event_WorkflowActivityStart" xml:space="preserve">
    <value>WorkflowInstance Id“{0}”E2E 活动</value>
  </data>
  <data name="event_WorkflowActivityStop" xml:space="preserve">
    <value>WorkflowInstance Id“{0}”E2E 活动</value>
  </data>
  <data name="event_WorkflowActivitySuspend" xml:space="preserve">
    <value>WorkflowInstance Id“{0}”E2E 活动</value>
  </data>
  <data name="event_WorkflowApplicationCompleted" xml:space="preserve">
    <value>WorkflowInstance Id“{0}”在“已关闭”状态下完成。</value>
  </data>
  <data name="event_WorkflowApplicationIdled" xml:space="preserve">
    <value>WorkflowApplication ID“{0}”变为空闲状态。</value>
  </data>
  <data name="event_WorkflowApplicationPersistableIdle" xml:space="preserve">
    <value>WorkflowApplication ID“{0}”空闲且可持久化。将进行以下操作: {1}。</value>
  </data>
  <data name="event_WorkflowApplicationPersisted" xml:space="preserve">
    <value>WorkflowApplication Id“{0}”已持久化。</value>
  </data>
  <data name="event_WorkflowApplicationTerminated" xml:space="preserve">
    <value>WorkflowApplication Id“{0}”已终止。该应用程序因出现异常而在“出错”状态下完成。</value>
  </data>
  <data name="event_WorkflowApplicationUnhandledException" xml:space="preserve">
    <value>WorkflowInstance Id“{0}”遇到了未经处理的异常。该异常来自 Activity“{1}”、DisplayName“{2}”。将进行以下操作: {3}。</value>
  </data>
  <data name="event_WorkflowApplicationUnloaded" xml:space="preserve">
    <value>WorkflowInstance Id“{0}”已卸载。</value>
  </data>
  <data name="event_WorkflowInstanceAborted" xml:space="preserve">
    <value>WorkflowInstance Id“{0}”因出现异常而中止。</value>
  </data>
  <data name="event_WorkflowInstanceAbortedRecordWithId" xml:space="preserve">
    <value>TrackRecord = WorkflowInstanceAbortedRecord，InstanceID = {0}，RecordNumber = {1}，EventTime = {2}，ActivityDefinitionId = {3}，Reason = {4}，Annotations = {5}，ProfileName = {6}，WorkflowDefinitionIdentity = {7}</value>
  </data>
  <data name="event_WorkflowInstanceCanceled" xml:space="preserve">
    <value>WorkflowInstance Id“{0}”在“已取消”状态下完成。</value>
  </data>
  <data name="event_WorkflowInstanceRecordWithId" xml:space="preserve">
    <value>TrackRecord= WorkflowInstanceRecord，InstanceID = {0}，RecordNumber = {1}，EventTime = {2}，ActivityDefinitionId = {3}，State = {4}，Annotations = {5}，ProfileName = {6}，WorkflowDefinitionIdentity = {7}</value>
  </data>
  <data name="event_WorkflowInstanceSuspendedRecord" xml:space="preserve">
    <value>TrackRecord = WorkflowInstanceSuspendedRecord，InstanceID = {0}，RecordNumber = {1}，EventTime = {2}，ActivityDefinitionId = {3}，Reason = {4}，Annotations = {5}，ProfileName = {6}</value>
  </data>
  <data name="event_WorkflowInstanceSuspendedRecordWithId" xml:space="preserve">
    <value>TrackRecord = WorkflowInstanceSuspendedRecord，InstanceID = {0}，RecordNumber = {1}，EventTime = {2}，ActivityDefinitionId = {3}，Reason = {4}，Annotations = {5}，ProfileName = {6}，WorkflowDefinitionIdentity = {7}</value>
  </data>
  <data name="event_WorkflowInstanceTerminatedRecord" xml:space="preserve">
    <value>TrackRecord = WorkflowInstanceTerminatedRecord, InstanceID = {0}, RecordNumber = {1}, EventTime = {2}, ActivityDefinitionId = {3}, Reason = {4}, Annotations = {5}, ProfileName = {6}</value>
  </data>
  <data name="event_WorkflowInstanceTerminatedRecordWithId" xml:space="preserve">
    <value>TrackRecord = WorkflowInstanceTerminatedRecord，InstanceID = {0}，RecordNumber = {1}，EventTime = {2}，ActivityDefinitionId = {3}，Reason = {4}，Annotations = {5}，ProfileName = {6}，WorkflowDefinitionIdentity = {7}</value>
  </data>
  <data name="event_WorkflowInstanceUnhandledExceptionRecordWithId" xml:space="preserve">
    <value>TrackRecord = WorkflowInstanceUnhandledExceptionRecord，InstanceID = {0}，RecordNumber = {1}，EventTime = {2}，ActivityDefinitionId = {3}，SourceName = {4}，SourceId = {5}，SourceInstanceId = {6}，SourceTypeName={7}，Exception={8}，Annotations= {9}，ProfileName = {10}，WorkflowDefinitionIdentity = {11}</value>
  </data>
  <data name="event_WorkflowInstanceUpdatedRecord" xml:space="preserve">
    <value>TrackRecord= WorkflowInstanceUpdatedRecord，InstanceID = {0}，RecordNumber = {1}，EventTime = {2}，ActivityDefinitionId = {3}，State = {4}，OriginalDefinitionIdentity = {5}，UpdatedDefinitionIdentity = {6}，Annotations = {7}，ProfileName = {8}</value>
  </data>
  <data name="event_WrappedKeyDecryptionStart" xml:space="preserve">
    <value>封装的密钥解密已开始。</value>
  </data>
  <data name="event_WrappedKeyDecryptionSuccess" xml:space="preserve">
    <value>封装的密钥解密已成功。</value>
  </data>
  <data name="event_WritePoolMiss" xml:space="preserve">
    <value>已新建“{0}”</value>
  </data>
  <data name="event_XamlServicesLoadStart" xml:space="preserve">
    <value>XamlServicesLoad 开始</value>
  </data>
  <data name="event_XamlServicesLoadStop" xml:space="preserve">
    <value>XamlServicesLoad 停止</value>
  </data>
  <data name="keyword_ActivationServices" xml:space="preserve">
    <value>激活服务</value>
  </data>
  <data name="keyword_Channel" xml:space="preserve">
    <value>通道</value>
  </data>
  <data name="keyword_Discovery" xml:space="preserve">
    <value>发现</value>
  </data>
  <data name="keyword_EndToEndMonitoring" xml:space="preserve">
    <value>端对端监控</value>
  </data>
  <data name="keyword_HealthMonitoring" xml:space="preserve">
    <value>运行状况监视</value>
  </data>
  <data name="keyword_HTTP" xml:space="preserve">
    <value>HTTP 传输</value>
  </data>
  <data name="keyword_Infrastructure" xml:space="preserve">
    <value>基础结构</value>
  </data>
  <data name="keyword_Quota" xml:space="preserve">
    <value>配额</value>
  </data>
  <data name="keyword_RoutingServices" xml:space="preserve">
    <value>路由服务</value>
  </data>
  <data name="keyword_Security" xml:space="preserve">
    <value>安全</value>
  </data>
  <data name="keyword_Serialization" xml:space="preserve">
    <value>序列化</value>
  </data>
  <data name="keyword_ServiceHost" xml:space="preserve">
    <value>服务主机</value>
  </data>
  <data name="keyword_ServiceModel" xml:space="preserve">
    <value>ServiceModel</value>
  </data>
  <data name="keyword_TCP" xml:space="preserve">
    <value>TCP 传输</value>
  </data>
  <data name="keyword_Threading" xml:space="preserve">
    <value>线程处理</value>
  </data>
  <data name="keyword_Transaction" xml:space="preserve">
    <value>事务</value>
  </data>
  <data name="keyword_TransportGeneral" xml:space="preserve">
    <value>常规传输</value>
  </data>
  <data name="keyword_Troubleshooting" xml:space="preserve">
    <value>疑难解答</value>
  </data>
  <data name="keyword_UserEvents" xml:space="preserve">
    <value>用户事件</value>
  </data>
  <data name="keyword_WCFMessageLogging" xml:space="preserve">
    <value>WCF 消息日志记录</value>
  </data>
  <data name="keyword_WebHost" xml:space="preserve">
    <value>Web 主机</value>
  </data>
  <data name="keyword_WebHTTP" xml:space="preserve">
    <value>Web HTTP</value>
  </data>
  <data name="keyword_WFActivities" xml:space="preserve">
    <value>工作流活动</value>
  </data>
  <data name="keyword_WFInstanceStore" xml:space="preserve">
    <value>工作流 InstanceStore</value>
  </data>
  <data name="keyword_WFRuntime" xml:space="preserve">
    <value>工作流运行时</value>
  </data>
  <data name="keyword_WFServices" xml:space="preserve">
    <value>工作流 ServiceHost</value>
  </data>
  <data name="keyword_WFTracking" xml:space="preserve">
    <value>WF 跟踪</value>
  </data>
  <data name="opcode_BufferOutOfOrderNoBookmark" xml:space="preserve">
    <value>NoBookmark</value>
  </data>
  <data name="opcode_BufferOutOfOrderNoInstance" xml:space="preserve">
    <value>NoInstance</value>
  </data>
  <data name="opcode_BufferPoolingAllocate" xml:space="preserve">
    <value>分配</value>
  </data>
  <data name="opcode_BufferPoolingTune" xml:space="preserve">
    <value>调整</value>
  </data>
  <data name="opcode_ClientRuntimeClientChannelOpenStart" xml:space="preserve">
    <value>ClientChannelOpenStart</value>
  </data>
  <data name="opcode_ClientRuntimeClientChannelOpenStop" xml:space="preserve">
    <value>ClientChannelOpenStop</value>
  </data>
  <data name="opcode_ClientRuntimeClientMessageInspectorAfterReceiveInvoked" xml:space="preserve">
    <value>ClientMessageInspectorAfterReceiveInvoked</value>
  </data>
  <data name="opcode_ClientRuntimeClientMessageInspectorBeforeSendInvoked" xml:space="preserve">
    <value>ClientMessageInspectorBeforeSendInvoked</value>
  </data>
  <data name="opcode_ClientRuntimeClientParameterInspectorStart" xml:space="preserve">
    <value>ClientParameterInspectorStart</value>
  </data>
  <data name="opcode_ClientRuntimeClientParameterInspectorStop" xml:space="preserve">
    <value>ClientParameterInspectorStop</value>
  </data>
  <data name="opcode_ClientRuntimeOperationPrepared" xml:space="preserve">
    <value>OperationPrepared</value>
  </data>
  <data name="opcode_CompleteWorkItemCompleteBookmark" xml:space="preserve">
    <value>CompleteBookmark</value>
  </data>
  <data name="opcode_CompleteWorkItemCompleteCancelActivity" xml:space="preserve">
    <value>CompleteCancelActivity</value>
  </data>
  <data name="opcode_CompleteWorkItemCompleteCompletion" xml:space="preserve">
    <value>CompleteCompletion</value>
  </data>
  <data name="opcode_CompleteWorkItemCompleteExecuteActivity" xml:space="preserve">
    <value>CompleteExecuteActivity</value>
  </data>
  <data name="opcode_CompleteWorkItemCompleteFault" xml:space="preserve">
    <value>CompleteFault</value>
  </data>
  <data name="opcode_CompleteWorkItemCompleteRuntime" xml:space="preserve">
    <value>CompleteRuntime</value>
  </data>
  <data name="opcode_CompleteWorkItemCompleteTransactionContext" xml:space="preserve">
    <value>CompleteTransactionContext</value>
  </data>
  <data name="opcode_CorrelationDuplicateQuery" xml:space="preserve">
    <value>DuplicateQuery</value>
  </data>
  <data name="opcode_DiscoveryClientChannelCreationFailed" xml:space="preserve">
    <value>CreationFailed</value>
  </data>
  <data name="opcode_DiscoveryClientChannelFindInitiated" xml:space="preserve">
    <value>FindInitiated</value>
  </data>
  <data name="opcode_DiscoveryClientChannelOpenFailed" xml:space="preserve">
    <value>OpenFailed</value>
  </data>
  <data name="opcode_DiscoveryClientChannelOpenSucceeded" xml:space="preserve">
    <value>OpenSucceeded</value>
  </data>
  <data name="opcode_DiscoveryClientExceptionSuppressed" xml:space="preserve">
    <value>ExceptionSuppressed</value>
  </data>
  <data name="opcode_DiscoveryClientFailedToClose" xml:space="preserve">
    <value>FailedToClose</value>
  </data>
  <data name="opcode_DiscoveryClientReceivedMulticastSuppression" xml:space="preserve">
    <value>ReceivedMulticastSuppression</value>
  </data>
  <data name="opcode_DiscoveryMessageDuplicate" xml:space="preserve">
    <value>复制</value>
  </data>
  <data name="opcode_DiscoveryMessageInvalidContent" xml:space="preserve">
    <value>InvalidContent</value>
  </data>
  <data name="opcode_DiscoveryMessageInvalidRelatesToOrOperationCompleted" xml:space="preserve">
    <value>InvalidRelatesToOrOperationCompleted</value>
  </data>
  <data name="opcode_DiscoveryMessageInvalidReplyTo" xml:space="preserve">
    <value>InvalidReplyTo</value>
  </data>
  <data name="opcode_DiscoveryMessageNoContent" xml:space="preserve">
    <value>NoContent</value>
  </data>
  <data name="opcode_DiscoveryMessageNullMessageId" xml:space="preserve">
    <value>NullMessageId</value>
  </data>
  <data name="opcode_DiscoveryMessageNullMessageSequence" xml:space="preserve">
    <value>NullMessageSequence</value>
  </data>
  <data name="opcode_DiscoveryMessageNullRelatesTo" xml:space="preserve">
    <value>NullRelatesTo</value>
  </data>
  <data name="opcode_DiscoveryMessageNullReplyTo" xml:space="preserve">
    <value>NullReplyTo</value>
  </data>
  <data name="opcode_DiscoveryMessageReceivedAfterOperationCompleted" xml:space="preserve">
    <value>ReceivedAfterOperationCompleted</value>
  </data>
  <data name="opcode_DiscoverySynchronizationContextReset" xml:space="preserve">
    <value>重置</value>
  </data>
  <data name="opcode_DiscoverySynchronizationContextSetToNull" xml:space="preserve">
    <value>SetToNull</value>
  </data>
  <data name="opcode_DispatchMessageBeforeAuthorization" xml:space="preserve">
    <value>BeforeAuthorization</value>
  </data>
  <data name="opcode_DispatchMessageDispatchStart" xml:space="preserve">
    <value>DispatchStart</value>
  </data>
  <data name="opcode_DispatchMessageDispatchStop" xml:space="preserve">
    <value>DispatchStop</value>
  </data>
  <data name="opcode_DispatchMessageDispathMessageInspectorAfterReceiveInvoked" xml:space="preserve">
    <value>DispathMessageInspectorAfterReceiveInvoked</value>
  </data>
  <data name="opcode_DispatchMessageDispathMessageInspectorBeforeSendInvoked" xml:space="preserve">
    <value>DispathMessageInspectorBeforeSendInvoked</value>
  </data>
  <data name="opcode_DispatchMessageOperationInvokerStart" xml:space="preserve">
    <value>OperationInvokerStart</value>
  </data>
  <data name="opcode_DispatchMessageOperationInvokerStop" xml:space="preserve">
    <value>OperationInvokerStop</value>
  </data>
  <data name="opcode_DispatchMessageParameterInspectorStart" xml:space="preserve">
    <value>ParameterInspectorStart</value>
  </data>
  <data name="opcode_DispatchMessageParameterInspectorStop" xml:space="preserve">
    <value>ParameterInspectorStop</value>
  </data>
  <data name="opcode_DispatchMessageTransactionScopeCreate" xml:space="preserve">
    <value>TransactionScopeCreate</value>
  </data>
  <data name="opcode_EndpointDiscoverabilityDisabled" xml:space="preserve">
    <value>已禁用</value>
  </data>
  <data name="opcode_EndpointDiscoverabilityEnabled" xml:space="preserve">
    <value>已启用</value>
  </data>
  <data name="opcode_ExecuteFlowchartBegin" xml:space="preserve">
    <value>开始</value>
  </data>
  <data name="opcode_ExecuteFlowchartEmpty" xml:space="preserve">
    <value>空</value>
  </data>
  <data name="opcode_ExecuteFlowchartNextNull" xml:space="preserve">
    <value>NextNull</value>
  </data>
  <data name="opcode_ExecuteFlowchartSwitchCase" xml:space="preserve">
    <value>SwitchCase</value>
  </data>
  <data name="opcode_ExecuteFlowchartSwitchCaseNotFound" xml:space="preserve">
    <value>SwitchCaseNotFound</value>
  </data>
  <data name="opcode_ExecuteFlowchartSwitchDefault" xml:space="preserve">
    <value>SwitchDefault</value>
  </data>
  <data name="opcode_ExpressionResultArrayItemValue" xml:space="preserve">
    <value>ArrayItemValue</value>
  </data>
  <data name="opcode_ExpressionResultBinary" xml:space="preserve">
    <value>二进制</value>
  </data>
  <data name="opcode_ExpressionResultMemberAccess" xml:space="preserve">
    <value>MemberAccess</value>
  </data>
  <data name="opcode_ExpressionResultUnary" xml:space="preserve">
    <value>一元</value>
  </data>
  <data name="opcode_InferDescriptionContract" xml:space="preserve">
    <value>协定</value>
  </data>
  <data name="opcode_InferDescriptionOperation" xml:space="preserve">
    <value>操作</value>
  </data>
  <data name="opcode_InvokeMethodDoesNotUseAsyncPattern" xml:space="preserve">
    <value>DoesNotUseAsyncPattern</value>
  </data>
  <data name="opcode_InvokeMethodIsNotStatic" xml:space="preserve">
    <value>IsNotStatic</value>
  </data>
  <data name="opcode_InvokeMethodIsStatic" xml:space="preserve">
    <value>IsStatic</value>
  </data>
  <data name="opcode_InvokeMethodThrewException" xml:space="preserve">
    <value>ThrewException</value>
  </data>
  <data name="opcode_InvokeMethodUseAsyncPattern" xml:space="preserve">
    <value>UseAsyncPattern</value>
  </data>
  <data name="opcode_MessageChannelCacheMissed" xml:space="preserve">
    <value>已丢失</value>
  </data>
  <data name="opcode_ReliableSessionFaulted" xml:space="preserve">
    <value>出错</value>
  </data>
  <data name="opcode_ReliableSessionReconnect" xml:space="preserve">
    <value>重新连接</value>
  </data>
  <data name="opcode_ReliableSessionSequenceAck" xml:space="preserve">
    <value>SequenceAck</value>
  </data>
  <data name="opcode_RoutingServiceAbortingChannel" xml:space="preserve">
    <value>AbortingChannel</value>
  </data>
  <data name="opcode_RoutingServiceClientChannelFaulted" xml:space="preserve">
    <value>ChannelFaulted</value>
  </data>
  <data name="opcode_RoutingServiceClientClosing" xml:space="preserve">
    <value>正在关闭</value>
  </data>
  <data name="opcode_RoutingServiceClientCreatingForEndpoint" xml:space="preserve">
    <value>CreatingForEndpoint</value>
  </data>
  <data name="opcode_RoutingServiceCloseFailed" xml:space="preserve">
    <value>CloseFailed</value>
  </data>
  <data name="opcode_RoutingServiceConfigurationApplied" xml:space="preserve">
    <value>ConfigurationApplied</value>
  </data>
  <data name="opcode_RoutingServiceDuplexCallbackException" xml:space="preserve">
    <value>DuplexCallbackException</value>
  </data>
  <data name="opcode_RoutingServiceHandledException" xml:space="preserve">
    <value>HandledException</value>
  </data>
  <data name="opcode_RoutingServiceMessageCompletingOneWay" xml:space="preserve">
    <value>CompletingOneWay</value>
  </data>
  <data name="opcode_RoutingServiceMessageCompletingTwoWay" xml:space="preserve">
    <value>CompletingTwoWay</value>
  </data>
  <data name="opcode_RoutingServiceMessageMovedToBackup" xml:space="preserve">
    <value>MovedToBackup</value>
  </data>
  <data name="opcode_RoutingServiceMessageProcessingFailure" xml:space="preserve">
    <value>ProcessingFailure</value>
  </data>
  <data name="opcode_RoutingServiceMessageProcessingMessage" xml:space="preserve">
    <value>ProcessingMessage</value>
  </data>
  <data name="opcode_RoutingServiceMessageRoutedToEndpoints" xml:space="preserve">
    <value>RoutedToEndpoints</value>
  </data>
  <data name="opcode_RoutingServiceMessageSendingFaultResponse" xml:space="preserve">
    <value>SendingFaultResponse</value>
  </data>
  <data name="opcode_RoutingServiceMessageSendingResponse" xml:space="preserve">
    <value>SendingResponse</value>
  </data>
  <data name="opcode_RoutingServiceMessageTransmitSucceeded" xml:space="preserve">
    <value>TransmitSucceeded</value>
  </data>
  <data name="opcode_RoutingServiceMessageTransmittingMessage" xml:space="preserve">
    <value>TransmittingMessage</value>
  </data>
  <data name="opcode_RoutingServiceReceiveContextAbandoning" xml:space="preserve">
    <value>正在放弃</value>
  </data>
  <data name="opcode_RoutingServiceReceiveContextCompleting" xml:space="preserve">
    <value>正在完成</value>
  </data>
  <data name="opcode_RoutingServiceTransactionCommittingTransaction" xml:space="preserve">
    <value>CommittingTransaction</value>
  </data>
  <data name="opcode_RoutingServiceTransactionCreating" xml:space="preserve">
    <value>正在创建</value>
  </data>
  <data name="opcode_RoutingServiceTransactionUsingExisting" xml:space="preserve">
    <value>UsingExisting</value>
  </data>
  <data name="opcode_RoutingServiceTransmitFailed" xml:space="preserve">
    <value>TransmitFailed</value>
  </data>
  <data name="opcode_RuntimeTransactionComplete" xml:space="preserve">
    <value>完成</value>
  </data>
  <data name="opcode_RuntimeTransactionCompletionRequested" xml:space="preserve">
    <value>CompletionRequested</value>
  </data>
  <data name="opcode_RuntimeTransactionSet" xml:space="preserve">
    <value>设置</value>
  </data>
  <data name="opcode_ScheduleWorkItemScheduleBookmark" xml:space="preserve">
    <value>ScheduleBookmark</value>
  </data>
  <data name="opcode_ScheduleWorkItemScheduleCancelActivity" xml:space="preserve">
    <value>ScheduleCancelActivity</value>
  </data>
  <data name="opcode_ScheduleWorkItemScheduleCompletion" xml:space="preserve">
    <value>ScheduleCompletion</value>
  </data>
  <data name="opcode_ScheduleWorkItemScheduleExecuteActivity" xml:space="preserve">
    <value>ScheduleExecuteActivity</value>
  </data>
  <data name="opcode_ScheduleWorkItemScheduleFault" xml:space="preserve">
    <value>ScheduleFault</value>
  </data>
  <data name="opcode_ScheduleWorkItemScheduleRuntime" xml:space="preserve">
    <value>ScheduleRuntime</value>
  </data>
  <data name="opcode_ScheduleWorkItemScheduleTransactionContext" xml:space="preserve">
    <value>ScheduleTransactionContext</value>
  </data>
  <data name="opcode_SessionUpgradeAccept" xml:space="preserve">
    <value>接受</value>
  </data>
  <data name="opcode_SessionUpgradeInitiate" xml:space="preserve">
    <value>启动</value>
  </data>
  <data name="opcode_Signpostsuspend" xml:space="preserve">
    <value>挂起</value>
  </data>
  <data name="opcode_StartWorkItemStartBookmark" xml:space="preserve">
    <value>StartBookmark</value>
  </data>
  <data name="opcode_StartWorkItemStartCancelActivity" xml:space="preserve">
    <value>StartCancelActivity</value>
  </data>
  <data name="opcode_StartWorkItemStartCompletion" xml:space="preserve">
    <value>StartCompletion</value>
  </data>
  <data name="opcode_StartWorkItemStartExecuteActivity" xml:space="preserve">
    <value>StartExecuteActivity</value>
  </data>
  <data name="opcode_StartWorkItemStartFault" xml:space="preserve">
    <value>StartFault</value>
  </data>
  <data name="opcode_StartWorkItemStartRuntime" xml:space="preserve">
    <value>StartRuntime</value>
  </data>
  <data name="opcode_StartWorkItemStartTransactionContext" xml:space="preserve">
    <value>StartTransactionContext</value>
  </data>
  <data name="opcode_TrackingProfileNotFound" xml:space="preserve">
    <value>NotFound</value>
  </data>
  <data name="opcode_TrackingRecordDropped" xml:space="preserve">
    <value>已删除</value>
  </data>
  <data name="opcode_TrackingRecordRaised" xml:space="preserve">
    <value>已引发</value>
  </data>
  <data name="opcode_TrackingRecordTruncated" xml:space="preserve">
    <value>已截断</value>
  </data>
  <data name="opcode_TransportReceiveBeforeAuthentication" xml:space="preserve">
    <value>BeforeAuthentication</value>
  </data>
  <data name="opcode_TryCatchExceptionDuringCancelation" xml:space="preserve">
    <value>DuringCancelation</value>
  </data>
  <data name="opcode_TryCatchExceptionFromCatchOrFinally" xml:space="preserve">
    <value>FromCatchOrFinally</value>
  </data>
  <data name="opcode_TryCatchExceptionFromTry" xml:space="preserve">
    <value>FromTry</value>
  </data>
  <data name="opcode_WASActivationConnected" xml:space="preserve">
    <value>已连接</value>
  </data>
  <data name="opcode_WASActivationDisconnect" xml:space="preserve">
    <value>断开连接</value>
  </data>
  <data name="opcode_WFApplicationStateChangeCompleted" xml:space="preserve">
    <value>已完成</value>
  </data>
  <data name="opcode_WFApplicationStateChangeIdled" xml:space="preserve">
    <value>空闲</value>
  </data>
  <data name="opcode_WFApplicationStateChangeInstanceAborted" xml:space="preserve">
    <value>InstanceAborted</value>
  </data>
  <data name="opcode_WFApplicationStateChangeInstanceCanceled" xml:space="preserve">
    <value>InstanceCanceled</value>
  </data>
  <data name="opcode_WFApplicationStateChangePersistableIdle" xml:space="preserve">
    <value>PersistableIdle</value>
  </data>
  <data name="opcode_WFApplicationStateChangePersisted" xml:space="preserve">
    <value>已保留</value>
  </data>
  <data name="opcode_WFApplicationStateChangeTerminated" xml:space="preserve">
    <value>已终止</value>
  </data>
  <data name="opcode_WFApplicationStateChangeUnhandledException" xml:space="preserve">
    <value>UnhandledException</value>
  </data>
  <data name="opcode_WFApplicationStateChangeUnloaded" xml:space="preserve">
    <value>已卸载</value>
  </data>
  <data name="opcode_WorkflowActivitysuspend" xml:space="preserve">
    <value>挂起</value>
  </data>
  <data name="opcode_WorkflowInstanceRecordAbortedRecord" xml:space="preserve">
    <value>AbortedRecord</value>
  </data>
  <data name="opcode_WorkflowInstanceRecordAbortedWithId" xml:space="preserve">
    <value>AbortedWithId</value>
  </data>
  <data name="opcode_WorkflowInstanceRecordSuspendedRecord" xml:space="preserve">
    <value>SuspendedRecord</value>
  </data>
  <data name="opcode_WorkflowInstanceRecordSuspendedWithId" xml:space="preserve">
    <value>SuspendedWithId</value>
  </data>
  <data name="opcode_WorkflowInstanceRecordTerminatedRecord" xml:space="preserve">
    <value>TerminatedRecord</value>
  </data>
  <data name="opcode_WorkflowInstanceRecordTerminatedWithId" xml:space="preserve">
    <value>TerminatedWithId</value>
  </data>
  <data name="opcode_WorkflowInstanceRecordUnhandledExceptionRecord" xml:space="preserve">
    <value>UnhandledExceptionRecord</value>
  </data>
  <data name="opcode_WorkflowInstanceRecordUnhandledExceptionWithId" xml:space="preserve">
    <value>UnhandledExceptionWithId</value>
  </data>
  <data name="opcode_WorkflowInstanceRecordUpdatedRecord" xml:space="preserve">
    <value>UpdatedRecord</value>
  </data>
  <data name="task_ActivationDispatchSession" xml:space="preserve">
    <value>ActivationDispatchSession</value>
  </data>
  <data name="task_ActivationDuplicateSocket" xml:space="preserve">
    <value>ActivationDuplicateSocket</value>
  </data>
  <data name="task_ActivationListenerOpen" xml:space="preserve">
    <value>ActivationListenerOpen</value>
  </data>
  <data name="task_ActivationPipeListenerListening" xml:space="preserve">
    <value>ActivationPipeListenerListening</value>
  </data>
  <data name="task_ActivationRoutingTableLookup" xml:space="preserve">
    <value>ActivationRoutingTableLookup</value>
  </data>
  <data name="task_ActivationServiceStart" xml:space="preserve">
    <value>ActivationServiceStart</value>
  </data>
  <data name="task_ActivationTcpListenerListening" xml:space="preserve">
    <value>ActivationTcpListenerListening</value>
  </data>
  <data name="task_AddServiceEndpoint" xml:space="preserve">
    <value>AddServiceEndpoint</value>
  </data>
  <data name="task_BufferOutOfOrder" xml:space="preserve">
    <value>BufferOutOfOrder</value>
  </data>
  <data name="task_BufferPooling" xml:space="preserve">
    <value>BufferPooling</value>
  </data>
  <data name="task_CacheRootMetadata" xml:space="preserve">
    <value>CacheRootMetadata</value>
  </data>
  <data name="task_ChannelFactoryCaching" xml:space="preserve">
    <value>ChannelFactoryCaching</value>
  </data>
  <data name="task_ChannelFactoryCreate" xml:space="preserve">
    <value>ChannelFactoryCreate</value>
  </data>
  <data name="task_ChannelReceive" xml:space="preserve">
    <value>ChannelReceive</value>
  </data>
  <data name="task_ClientRuntime" xml:space="preserve">
    <value>ClientRuntime</value>
  </data>
  <data name="task_ClientSendPreamble" xml:space="preserve">
    <value>ClientSendPreamble</value>
  </data>
  <data name="task_CompensationState" xml:space="preserve">
    <value>CompensationState</value>
  </data>
  <data name="task_CompleteActivity" xml:space="preserve">
    <value>CompleteActivity</value>
  </data>
  <data name="task_CompleteWorkItem" xml:space="preserve">
    <value>CompleteWorkItem</value>
  </data>
  <data name="task_Connect" xml:space="preserve">
    <value>连接</value>
  </data>
  <data name="task_ConnectionAbort" xml:space="preserve">
    <value>ConnectionAbort</value>
  </data>
  <data name="task_ConnectionAccept" xml:space="preserve">
    <value>ConnectionAccept</value>
  </data>
  <data name="task_ConnectionPooling" xml:space="preserve">
    <value>ConnectionPooling</value>
  </data>
  <data name="task_Correlation" xml:space="preserve">
    <value>关联</value>
  </data>
  <data name="task_CreateBookmark" xml:space="preserve">
    <value>CreateBookmark</value>
  </data>
  <data name="task_CreateHttpMessageHandler" xml:space="preserve">
    <value>CreateHttpMessageHandler</value>
  </data>
  <data name="task_CreateWorkflowServiceHost" xml:space="preserve">
    <value>CreateWorkflowServiceHost</value>
  </data>
  <data name="task_CustomTrackingRecord" xml:space="preserve">
    <value>CustomTrackingRecord</value>
  </data>
  <data name="task_DataContractResolver" xml:space="preserve">
    <value>DataContractResolver</value>
  </data>
  <data name="task_DiscoveryClient" xml:space="preserve">
    <value>DiscoveryClient</value>
  </data>
  <data name="task_DiscoveryClientChannel" xml:space="preserve">
    <value>DiscoveryClientChannel</value>
  </data>
  <data name="task_DiscoveryMessage" xml:space="preserve">
    <value>DiscoveryMessage</value>
  </data>
  <data name="task_DiscoverySynchronizationContext" xml:space="preserve">
    <value>DiscoverySynchronizationContext</value>
  </data>
  <data name="task_DispatchMessage" xml:space="preserve">
    <value>DispatchMessage</value>
  </data>
  <data name="task_EncryptedDataProcessing" xml:space="preserve">
    <value>EncryptedDataProcessing</value>
  </data>
  <data name="task_EndpointDiscoverability" xml:space="preserve">
    <value>EndpointDiscoverability</value>
  </data>
  <data name="task_ExecuteActivity" xml:space="preserve">
    <value>ExecuteActivity</value>
  </data>
  <data name="task_ExecuteFlowchart" xml:space="preserve">
    <value>ExecuteFlowchart</value>
  </data>
  <data name="task_ExecuteWorkItem" xml:space="preserve">
    <value>ExecuteWorkItem</value>
  </data>
  <data name="task_ExpressionResult" xml:space="preserve">
    <value>ExpressionResult</value>
  </data>
  <data name="task_FederationMessageCreation" xml:space="preserve">
    <value>FederationMessageCreation</value>
  </data>
  <data name="task_FederationMessageProcessing" xml:space="preserve">
    <value>FederationMessageProcessing</value>
  </data>
  <data name="task_FormatterDeserializeReply" xml:space="preserve">
    <value>FormatterDeserializeReply</value>
  </data>
  <data name="task_FormatterDeserializeRequest" xml:space="preserve">
    <value>FormatterDeserializeRequest</value>
  </data>
  <data name="task_FormatterSerializeReply" xml:space="preserve">
    <value>FormatterSerializeReply</value>
  </data>
  <data name="task_FormatterSerializeRequest" xml:space="preserve">
    <value>FormatterSerializeRequest</value>
  </data>
  <data name="task_GenerateDeserializer" xml:space="preserve">
    <value>GenerateDeserializer</value>
  </data>
  <data name="task_GenerateSerializer" xml:space="preserve">
    <value>GenerateSerializer</value>
  </data>
  <data name="task_GenerateXmlSerializable" xml:space="preserve">
    <value>GenerateXmlSerializable</value>
  </data>
  <data name="task_GetIssuerName" xml:space="preserve">
    <value>GetIssuerName</value>
  </data>
  <data name="task_HostedTransportConfigurationManagerConfigInit" xml:space="preserve">
    <value>HostedTransportConfigurationManagerConfigInit</value>
  </data>
  <data name="task_ImportKnownType" xml:space="preserve">
    <value>ImportKnownType</value>
  </data>
  <data name="task_InferDescription" xml:space="preserve">
    <value>InferDescription</value>
  </data>
  <data name="task_InitializeBookmarkScope" xml:space="preserve">
    <value>InitializeBookmarkScope</value>
  </data>
  <data name="task_InternalCacheMetadata" xml:space="preserve">
    <value>InternalCacheMetadata</value>
  </data>
  <data name="task_InvokeMethod" xml:space="preserve">
    <value>InvokeMethod</value>
  </data>
  <data name="task_ListenerOpen" xml:space="preserve">
    <value>ListenerOpen</value>
  </data>
  <data name="task_LockWorkflowInstance" xml:space="preserve">
    <value>LockWorkflowInstance</value>
  </data>
  <data name="task_MessageChannelCache" xml:space="preserve">
    <value>MessageChannelCache</value>
  </data>
  <data name="task_MessageDecoding" xml:space="preserve">
    <value>MessageDecoding</value>
  </data>
  <data name="task_MessageEncoding" xml:space="preserve">
    <value>MessageEncoding</value>
  </data>
  <data name="task_MessageQueueRegister" xml:space="preserve">
    <value>MessageQueueRegister</value>
  </data>
  <data name="task_MsmqQuotas" xml:space="preserve">
    <value>MsmqQuotas</value>
  </data>
  <data name="task_NoPersistBlock" xml:space="preserve">
    <value>NoPersistBlock</value>
  </data>
  <data name="task_PrincipalSetting" xml:space="preserve">
    <value>PrincipalSetting</value>
  </data>
  <data name="task_Quotas" xml:space="preserve">
    <value>配额</value>
  </data>
  <data name="task_ReliableSession" xml:space="preserve">
    <value>ReliableSession</value>
  </data>
  <data name="task_RoutingService" xml:space="preserve">
    <value>RoutingService</value>
  </data>
  <data name="task_RoutingServiceClient" xml:space="preserve">
    <value>RoutingServiceClient</value>
  </data>
  <data name="task_RoutingServiceFilterTableMatch" xml:space="preserve">
    <value>RoutingServiceFilterTableMatch</value>
  </data>
  <data name="task_RoutingServiceMessage" xml:space="preserve">
    <value>RoutingServiceMessage</value>
  </data>
  <data name="task_RoutingServiceReceiveContext" xml:space="preserve">
    <value>RoutingServiceReceiveContext</value>
  </data>
  <data name="task_RoutingServiceTransaction" xml:space="preserve">
    <value>RoutingServiceTransaction</value>
  </data>
  <data name="task_RuntimeTransaction" xml:space="preserve">
    <value>RuntimeTransaction</value>
  </data>
  <data name="task_ScheduleActivity" xml:space="preserve">
    <value>ScheduleActivity</value>
  </data>
  <data name="task_ScheduleWorkItem" xml:space="preserve">
    <value>ScheduleWorkItem</value>
  </data>
  <data name="task_SecureMessage" xml:space="preserve">
    <value>SecureMessage</value>
  </data>
  <data name="task_SecurityImpersonation" xml:space="preserve">
    <value>SecurityImpersonation</value>
  </data>
  <data name="task_SecurityNegotiation" xml:space="preserve">
    <value>SecurityNegotiation</value>
  </data>
  <data name="task_SecurityVerification" xml:space="preserve">
    <value>SecurityVerification</value>
  </data>
  <data name="task_ServiceActivation" xml:space="preserve">
    <value>ServiceActivation</value>
  </data>
  <data name="task_ServiceChannelCall" xml:space="preserve">
    <value>ServiceChannelCall</value>
  </data>
  <data name="task_ServiceChannelOpen" xml:space="preserve">
    <value>ServiceChannelOpen</value>
  </data>
  <data name="task_ServiceHostActivation" xml:space="preserve">
    <value>ServiceHostActivation</value>
  </data>
  <data name="task_ServiceHostCompilation" xml:space="preserve">
    <value>ServiceHostCompilation</value>
  </data>
  <data name="task_ServiceHostCreate" xml:space="preserve">
    <value>ServiceHostCreate</value>
  </data>
  <data name="task_ServiceHostFactoryCreation" xml:space="preserve">
    <value>ServiceHostFactoryCreation</value>
  </data>
  <data name="task_ServiceHostFault" xml:space="preserve">
    <value>ServiceHostFault</value>
  </data>
  <data name="task_ServiceHostOpen" xml:space="preserve">
    <value>ServiceHostOpen</value>
  </data>
  <data name="task_ServiceInstance" xml:space="preserve">
    <value>ServiceInstance</value>
  </data>
  <data name="task_ServiceShutdown" xml:space="preserve">
    <value>ServiceShutdown</value>
  </data>
  <data name="task_SessionCookieReading" xml:space="preserve">
    <value>SessionCookieReading</value>
  </data>
  <data name="task_SessionStart" xml:space="preserve">
    <value>SessionStart</value>
  </data>
  <data name="task_SessionUpgrade" xml:space="preserve">
    <value>SessionUpgrade</value>
  </data>
  <data name="task_SignatureVerification" xml:space="preserve">
    <value>SignatureVerification</value>
  </data>
  <data name="task_Signpost" xml:space="preserve">
    <value>Signpost</value>
  </data>
  <data name="task_SqlCommandExecute" xml:space="preserve">
    <value>SqlCommandExecute</value>
  </data>
  <data name="task_StartWorkItem" xml:space="preserve">
    <value>StartWorkItem</value>
  </data>
  <data name="task_SurrogateDeserialize" xml:space="preserve">
    <value>SurrogateDeserialize</value>
  </data>
  <data name="task_SurrogateSerialize" xml:space="preserve">
    <value>SurrogateSerialize</value>
  </data>
  <data name="task_ThreadScheduling" xml:space="preserve">
    <value>ThreadScheduling</value>
  </data>
  <data name="task_Throttles" xml:space="preserve">
    <value>限制</value>
  </data>
  <data name="task_Timeout" xml:space="preserve">
    <value>超时</value>
  </data>
  <data name="task_TimeoutException" xml:space="preserve">
    <value>TimeoutException</value>
  </data>
  <data name="task_TokenValidation" xml:space="preserve">
    <value>TokenValidation</value>
  </data>
  <data name="task_TrackingProfile" xml:space="preserve">
    <value>TrackingProfile</value>
  </data>
  <data name="task_TrackingRecord" xml:space="preserve">
    <value>TrackingRecord</value>
  </data>
  <data name="task_TransportReceive" xml:space="preserve">
    <value>TransportReceive</value>
  </data>
  <data name="task_TransportSend" xml:space="preserve">
    <value>TransportSend</value>
  </data>
  <data name="task_TryCatchException" xml:space="preserve">
    <value>TryCatchException</value>
  </data>
  <data name="task_VBExpressionCompile" xml:space="preserve">
    <value>VBExpressionCompile</value>
  </data>
  <data name="task_WASActivation" xml:space="preserve">
    <value>WASActivation</value>
  </data>
  <data name="task_WebHostRequest" xml:space="preserve">
    <value>WebHostRequest</value>
  </data>
  <data name="task_WFApplicationStateChange" xml:space="preserve">
    <value>WFApplicationStateChange</value>
  </data>
  <data name="task_WFMessage" xml:space="preserve">
    <value>WFMessage</value>
  </data>
  <data name="task_WorkflowActivity" xml:space="preserve">
    <value>WorkflowActivity</value>
  </data>
  <data name="task_WorkflowInstanceRecord" xml:space="preserve">
    <value>WorkflowInstanceRecord</value>
  </data>
  <data name="task_WorkflowTracking" xml:space="preserve">
    <value>WorkflowTracking</value>
  </data>
  <data name="task_WrappedKeyDecryption" xml:space="preserve">
    <value>WrappedKeyDecryption</value>
  </data>
  <data name="task_XamlServicesLoad" xml:space="preserve">
    <value>xamlServicesLoad</value>
  </data>
</root>